// This is a generated file!
// Do not edit manually, changes will be overwritten.

using System;
using System.Collections.Generic;

namespace KeePass.Resources
{
	/// <summary>
	/// A strongly-typed resource class, for looking up localized strings, etc.
	/// </summary>
	public static class KPRes
	{
		private static string TryGetEx(Dictionary<string, string> dictNew,
			string strName, string strDefault)
		{
			string strTemp;

			if(dictNew.TryGetValue(strName, out strTemp))
				return strTemp;

			return strDefault;
		}

		public static void SetTranslatedStrings(Dictionary<string, string> dictNew)
		{
			if(dictNew == null) throw new ArgumentNullException("dictNew");

			m_strAbort = TryGetEx(dictNew, "Abort", m_strAbort);
			m_strAbortTrigger = TryGetEx(dictNew, "AbortTrigger", m_strAbortTrigger);
			m_strAction = TryGetEx(dictNew, "Action", m_strAction);
			m_strActivateDatabaseTab = TryGetEx(dictNew, "ActivateDatabaseTab", m_strActivateDatabaseTab);
			m_strActive = TryGetEx(dictNew, "Active", m_strActive);
			m_strAddEntry = TryGetEx(dictNew, "AddEntry", m_strAddEntry);
			m_strAddEntryDesc = TryGetEx(dictNew, "AddEntryDesc", m_strAddEntryDesc);
			m_strAddGroup = TryGetEx(dictNew, "AddGroup", m_strAddGroup);
			m_strAddGroupDesc = TryGetEx(dictNew, "AddGroupDesc", m_strAddGroupDesc);
			m_strAddStringField = TryGetEx(dictNew, "AddStringField", m_strAddStringField);
			m_strAddStringFieldDesc = TryGetEx(dictNew, "AddStringFieldDesc", m_strAddStringFieldDesc);
			m_strAdvanced = TryGetEx(dictNew, "Advanced", m_strAdvanced);
			m_strAfterDatabaseOpen = TryGetEx(dictNew, "AfterDatabaseOpen", m_strAfterDatabaseOpen);
			m_strAlignCenter = TryGetEx(dictNew, "AlignCenter", m_strAlignCenter);
			m_strAlignLeft = TryGetEx(dictNew, "AlignLeft", m_strAlignLeft);
			m_strAlignRight = TryGetEx(dictNew, "AlignRight", m_strAlignRight);
			m_strAll = TryGetEx(dictNew, "All", m_strAll);
			m_strAllEntriesTitle = TryGetEx(dictNew, "AllEntriesTitle", m_strAllEntriesTitle);
			m_strAllFiles = TryGetEx(dictNew, "AllFiles", m_strAllFiles);
			m_strAllSupportedFiles = TryGetEx(dictNew, "AllSupportedFiles", m_strAllSupportedFiles);
			m_strAlternatingBgColors = TryGetEx(dictNew, "AlternatingBgColors", m_strAlternatingBgColors);
			m_strApplication = TryGetEx(dictNew, "Application", m_strApplication);
			m_strApplicationExit = TryGetEx(dictNew, "ApplicationExit", m_strApplicationExit);
			m_strApplicationInitialized = TryGetEx(dictNew, "ApplicationInitialized", m_strApplicationInitialized);
			m_strApplicationStarted = TryGetEx(dictNew, "ApplicationStarted", m_strApplicationStarted);
			m_strArguments = TryGetEx(dictNew, "Arguments", m_strArguments);
			m_strAscending = TryGetEx(dictNew, "Ascending", m_strAscending);
			m_strAskContinue = TryGetEx(dictNew, "AskContinue", m_strAskContinue);
			m_strAsterisks = TryGetEx(dictNew, "Asterisks", m_strAsterisks);
			m_strAttachedExistsAlready = TryGetEx(dictNew, "AttachedExistsAlready", m_strAttachedExistsAlready);
			m_strAttachExtDiscardDesc = TryGetEx(dictNew, "AttachExtDiscardDesc", m_strAttachExtDiscardDesc);
			m_strAttachExtImportDesc = TryGetEx(dictNew, "AttachExtImportDesc", m_strAttachExtImportDesc);
			m_strAttachExtOpened = TryGetEx(dictNew, "AttachExtOpened", m_strAttachExtOpened);
			m_strAttachExtOpenedPost = TryGetEx(dictNew, "AttachExtOpenedPost", m_strAttachExtOpenedPost);
			m_strAttachExtSecDel = TryGetEx(dictNew, "AttachExtSecDel", m_strAttachExtSecDel);
			m_strAttachFailed = TryGetEx(dictNew, "AttachFailed", m_strAttachFailed);
			m_strAttachFiles = TryGetEx(dictNew, "AttachFiles", m_strAttachFiles);
			m_strAttachments = TryGetEx(dictNew, "Attachments", m_strAttachments);
			m_strAttachmentSave = TryGetEx(dictNew, "AttachmentSave", m_strAttachmentSave);
			m_strAttachmentsSave = TryGetEx(dictNew, "AttachmentsSave", m_strAttachmentsSave);
			m_strAttachNewRename = TryGetEx(dictNew, "AttachNewRename", m_strAttachNewRename);
			m_strAttachNewRenameRemarks0 = TryGetEx(dictNew, "AttachNewRenameRemarks0", m_strAttachNewRenameRemarks0);
			m_strAttachNewRenameRemarks1 = TryGetEx(dictNew, "AttachNewRenameRemarks1", m_strAttachNewRenameRemarks1);
			m_strAttachNewRenameRemarks2 = TryGetEx(dictNew, "AttachNewRenameRemarks2", m_strAttachNewRenameRemarks2);
			m_strAuthor = TryGetEx(dictNew, "Author", m_strAuthor);
			m_strAuto = TryGetEx(dictNew, "Auto", m_strAuto);
			m_strAutoCreateNew = TryGetEx(dictNew, "AutoCreateNew", m_strAutoCreateNew);
			m_strAutoGeneratedPasswordSettings = TryGetEx(dictNew, "AutoGeneratedPasswordSettings", m_strAutoGeneratedPasswordSettings);
			m_strAutoRememberOpenLastFile = TryGetEx(dictNew, "AutoRememberOpenLastFile", m_strAutoRememberOpenLastFile);
			m_strAutoSaveAtExit = TryGetEx(dictNew, "AutoSaveAtExit", m_strAutoSaveAtExit);
			m_strAutoShowExpiredEntries = TryGetEx(dictNew, "AutoShowExpiredEntries", m_strAutoShowExpiredEntries);
			m_strAutoShowSoonToExpireEntries = TryGetEx(dictNew, "AutoShowSoonToExpireEntries", m_strAutoShowSoonToExpireEntries);
			m_strAutoType = TryGetEx(dictNew, "AutoType", m_strAutoType);
			m_strAutoTypeAlwaysShowSelDialog = TryGetEx(dictNew, "AutoTypeAlwaysShowSelDialog", m_strAutoTypeAlwaysShowSelDialog);
			m_strAutoTypeCancelOnTitleChange = TryGetEx(dictNew, "AutoTypeCancelOnTitleChange", m_strAutoTypeCancelOnTitleChange);
			m_strAutoTypeCancelOnWindowChange = TryGetEx(dictNew, "AutoTypeCancelOnWindowChange", m_strAutoTypeCancelOnWindowChange);
			m_strAutoTypeEntrySelection = TryGetEx(dictNew, "AutoTypeEntrySelection", m_strAutoTypeEntrySelection);
			m_strAutoTypeEntrySelectionDescLong2 = TryGetEx(dictNew, "AutoTypeEntrySelectionDescLong2", m_strAutoTypeEntrySelectionDescLong2);
			m_strAutoTypeEntrySelectionDescShort = TryGetEx(dictNew, "AutoTypeEntrySelectionDescShort", m_strAutoTypeEntrySelectionDescShort);
			m_strAutoTypeGlobalHint = TryGetEx(dictNew, "AutoTypeGlobalHint", m_strAutoTypeGlobalHint);
			m_strAutoTypeMatchByTagInTitle = TryGetEx(dictNew, "AutoTypeMatchByTagInTitle", m_strAutoTypeMatchByTagInTitle);
			m_strAutoTypeMatchByTitle = TryGetEx(dictNew, "AutoTypeMatchByTitle", m_strAutoTypeMatchByTitle);
			m_strAutoTypeMatchByUrlHostInTitle = TryGetEx(dictNew, "AutoTypeMatchByUrlHostInTitle", m_strAutoTypeMatchByUrlHostInTitle);
			m_strAutoTypeMatchByUrlInTitle = TryGetEx(dictNew, "AutoTypeMatchByUrlInTitle", m_strAutoTypeMatchByUrlInTitle);
			m_strAutoTypeObfuscationHint = TryGetEx(dictNew, "AutoTypeObfuscationHint", m_strAutoTypeObfuscationHint);
			m_strAutoTypePrependInitSeqForIE = TryGetEx(dictNew, "AutoTypePrependInitSeqForIE", m_strAutoTypePrependInitSeqForIE);
			m_strAutoTypeReleaseAltWithKeyPress = TryGetEx(dictNew, "AutoTypeReleaseAltWithKeyPress", m_strAutoTypeReleaseAltWithKeyPress);
			m_strAutoTypeSelectedNoEntry = TryGetEx(dictNew, "AutoTypeSelectedNoEntry", m_strAutoTypeSelectedNoEntry);
			m_strAutoTypeSequenceInvalid = TryGetEx(dictNew, "AutoTypeSequenceInvalid", m_strAutoTypeSequenceInvalid);
			m_strAutoTypeUnknownPlaceholder = TryGetEx(dictNew, "AutoTypeUnknownPlaceholder", m_strAutoTypeUnknownPlaceholder);
			m_strAutoTypeXDoToolRequired = TryGetEx(dictNew, "AutoTypeXDoToolRequired", m_strAutoTypeXDoToolRequired);
			m_strAutoTypeXDoToolRequiredGlobalVer = TryGetEx(dictNew, "AutoTypeXDoToolRequiredGlobalVer", m_strAutoTypeXDoToolRequiredGlobalVer);
			m_strAvailable = TryGetEx(dictNew, "Available", m_strAvailable);
			m_strAvailableLanguages = TryGetEx(dictNew, "AvailableLanguages", m_strAvailableLanguages);
			m_strBackgroundColor = TryGetEx(dictNew, "BackgroundColor", m_strBackgroundColor);
			m_strBinaryNoConv = TryGetEx(dictNew, "BinaryNoConv", m_strBinaryNoConv);
			m_strBits = TryGetEx(dictNew, "Bits", m_strBits);
			m_strBitsStc = TryGetEx(dictNew, "BitsStc", m_strBitsStc);
			m_strBold = TryGetEx(dictNew, "Bold", m_strBold);
			m_strBrowser = TryGetEx(dictNew, "Browser", m_strBrowser);
			m_strBuiltIn = TryGetEx(dictNew, "BuiltIn", m_strBuiltIn);
			m_strButton = TryGetEx(dictNew, "Button", m_strButton);
			m_strButtonBack = TryGetEx(dictNew, "ButtonBack", m_strButtonBack);
			m_strButtonDefault = TryGetEx(dictNew, "ButtonDefault", m_strButtonDefault);
			m_strButtonFinish = TryGetEx(dictNew, "ButtonFinish", m_strButtonFinish);
			m_strButtonNext = TryGetEx(dictNew, "ButtonNext", m_strButtonNext);
			m_strButtons = TryGetEx(dictNew, "Buttons", m_strButtons);
			m_strCancel = TryGetEx(dictNew, "Cancel", m_strCancel);
			m_strCannotMoveEntriesBcsGroup = TryGetEx(dictNew, "CannotMoveEntriesBcsGroup", m_strCannotMoveEntriesBcsGroup);
			m_strChangeMasterKey = TryGetEx(dictNew, "ChangeMasterKey", m_strChangeMasterKey);
			m_strChangeMasterKeyIntroShort = TryGetEx(dictNew, "ChangeMasterKeyIntroShort", m_strChangeMasterKeyIntroShort);
			m_strCharsAbbr = TryGetEx(dictNew, "CharsAbbr", m_strCharsAbbr);
			m_strCharsStc = TryGetEx(dictNew, "CharsStc", m_strCharsStc);
			m_strCheckForUpdAtStart = TryGetEx(dictNew, "CheckForUpdAtStart", m_strCheckForUpdAtStart);
			m_strCheckingForUpd = TryGetEx(dictNew, "CheckingForUpd", m_strCheckingForUpd);
			m_strClassicAdj = TryGetEx(dictNew, "ClassicAdj", m_strClassicAdj);
			m_strClearKeyCmdLineParams = TryGetEx(dictNew, "ClearKeyCmdLineParams", m_strClearKeyCmdLineParams);
			m_strClearMru = TryGetEx(dictNew, "ClearMru", m_strClearMru);
			m_strClipboard = TryGetEx(dictNew, "Clipboard", m_strClipboard);
			m_strClipboardClearInSeconds = TryGetEx(dictNew, "ClipboardClearInSeconds", m_strClipboardClearInSeconds);
			m_strClipboardClearOnExit = TryGetEx(dictNew, "ClipboardClearOnExit", m_strClipboardClearOnExit);
			m_strClipboardDataCopied = TryGetEx(dictNew, "ClipboardDataCopied", m_strClipboardDataCopied);
			m_strClipboardViewerIgnoreFormat = TryGetEx(dictNew, "ClipboardViewerIgnoreFormat", m_strClipboardViewerIgnoreFormat);
			m_strCloseActiveDatabase = TryGetEx(dictNew, "CloseActiveDatabase", m_strCloseActiveDatabase);
			m_strCloseButton = TryGetEx(dictNew, "CloseButton", m_strCloseButton);
			m_strCloseButtonMinimizes = TryGetEx(dictNew, "CloseButtonMinimizes", m_strCloseButtonMinimizes);
			m_strClosingDatabaseFile = TryGetEx(dictNew, "ClosingDatabaseFile", m_strClosingDatabaseFile);
			m_strColumn = TryGetEx(dictNew, "Column", m_strColumn);
			m_strColumns = TryGetEx(dictNew, "Columns", m_strColumns);
			m_strComments = TryGetEx(dictNew, "Comments", m_strComments);
			m_strCompany = TryGetEx(dictNew, "Company", m_strCompany);
			m_strComparison = TryGetEx(dictNew, "Comparison", m_strComparison);
			m_strComponent = TryGetEx(dictNew, "Component", m_strComponent);
			m_strCondition = TryGetEx(dictNew, "Condition", m_strCondition);
			m_strConfigAffectAdmin = TryGetEx(dictNew, "ConfigAffectAdmin", m_strConfigAffectAdmin);
			m_strConfigAffectUser = TryGetEx(dictNew, "ConfigAffectUser", m_strConfigAffectUser);
			m_strConfigSaveFailed = TryGetEx(dictNew, "ConfigSaveFailed", m_strConfigSaveFailed);
			m_strConfigureAutoType = TryGetEx(dictNew, "ConfigureAutoType", m_strConfigureAutoType);
			m_strConfigureAutoTypeDesc = TryGetEx(dictNew, "ConfigureAutoTypeDesc", m_strConfigureAutoTypeDesc);
			m_strConfigureAutoTypeItem = TryGetEx(dictNew, "ConfigureAutoTypeItem", m_strConfigureAutoTypeItem);
			m_strConfigureAutoTypeItemDesc = TryGetEx(dictNew, "ConfigureAutoTypeItemDesc", m_strConfigureAutoTypeItemDesc);
			m_strConfigureColumns = TryGetEx(dictNew, "ConfigureColumns", m_strConfigureColumns);
			m_strConfigureColumnsDesc = TryGetEx(dictNew, "ConfigureColumnsDesc", m_strConfigureColumnsDesc);
			m_strConfigureKeystrokeSeq = TryGetEx(dictNew, "ConfigureKeystrokeSeq", m_strConfigureKeystrokeSeq);
			m_strConfigureKeystrokeSeqDesc = TryGetEx(dictNew, "ConfigureKeystrokeSeqDesc", m_strConfigureKeystrokeSeqDesc);
			m_strConfigureOnNewDatabase = TryGetEx(dictNew, "ConfigureOnNewDatabase", m_strConfigureOnNewDatabase);
			m_strContact = TryGetEx(dictNew, "Contact", m_strContact);
			m_strContainsOp = TryGetEx(dictNew, "ContainsOp", m_strContainsOp);
			m_strCopiedEntryData = TryGetEx(dictNew, "CopiedEntryData", m_strCopiedEntryData);
			m_strCopy = TryGetEx(dictNew, "Copy", m_strCopy);
			m_strCopyAll = TryGetEx(dictNew, "CopyAll", m_strCopyAll);
			m_strCopyLink = TryGetEx(dictNew, "CopyLink", m_strCopyLink);
			m_strCopyOfItem = TryGetEx(dictNew, "CopyOfItem", m_strCopyOfItem);
			m_strCopyPasswordFull = TryGetEx(dictNew, "CopyPasswordFull", m_strCopyPasswordFull);
			m_strCopyPasswordMenu = TryGetEx(dictNew, "CopyPasswordMenu", m_strCopyPasswordMenu);
			m_strCopyTanMenu = TryGetEx(dictNew, "CopyTanMenu", m_strCopyTanMenu);
			m_strCopyUrlsInsteadOfOpening = TryGetEx(dictNew, "CopyUrlsInsteadOfOpening", m_strCopyUrlsInsteadOfOpening);
			m_strCopyUrlToClipboard = TryGetEx(dictNew, "CopyUrlToClipboard", m_strCopyUrlToClipboard);
			m_strCopyUserFull = TryGetEx(dictNew, "CopyUserFull", m_strCopyUserFull);
			m_strCopyWholeEntries = TryGetEx(dictNew, "CopyWholeEntries", m_strCopyWholeEntries);
			m_strCorruptionByExt = TryGetEx(dictNew, "CorruptionByExt", m_strCorruptionByExt);
			m_strCount = TryGetEx(dictNew, "Count", m_strCount);
			m_strCreateMasterKey = TryGetEx(dictNew, "CreateMasterKey", m_strCreateMasterKey);
			m_strCreateNewDatabase = TryGetEx(dictNew, "CreateNewDatabase", m_strCreateNewDatabase);
			m_strCreateNewIDs = TryGetEx(dictNew, "CreateNewIDs", m_strCreateNewIDs);
			m_strCreationTime = TryGetEx(dictNew, "CreationTime", m_strCreationTime);
			m_strCredSaveAll = TryGetEx(dictNew, "CredSaveAll", m_strCredSaveAll);
			m_strCredSaveNone = TryGetEx(dictNew, "CredSaveNone", m_strCredSaveNone);
			m_strCredSaveUserOnly = TryGetEx(dictNew, "CredSaveUserOnly", m_strCredSaveUserOnly);
			m_strCredSpecifyDifferent = TryGetEx(dictNew, "CredSpecifyDifferent", m_strCredSpecifyDifferent);
			m_strCsprojCountError = TryGetEx(dictNew, "CsprojCountError", m_strCsprojCountError);
			m_strCsvTextFile = TryGetEx(dictNew, "CsvTextFile", m_strCsvTextFile);
			m_strCtrlAltAConflict = TryGetEx(dictNew, "CtrlAltAConflict", m_strCtrlAltAConflict);
			m_strCtrlAltAConflictHint = TryGetEx(dictNew, "CtrlAltAConflictHint", m_strCtrlAltAConflictHint);
			m_strCurrentStyle = TryGetEx(dictNew, "CurrentStyle", m_strCurrentStyle);
			m_strCustom = TryGetEx(dictNew, "Custom", m_strCustom);
			m_strCustomFields = TryGetEx(dictNew, "CustomFields", m_strCustomFields);
			m_strCustomizableHtml = TryGetEx(dictNew, "CustomizableHtml", m_strCustomizableHtml);
			m_strCustomTbButtonAdd = TryGetEx(dictNew, "CustomTbButtonAdd", m_strCustomTbButtonAdd);
			m_strCustomTbButtonClicked = TryGetEx(dictNew, "CustomTbButtonClicked", m_strCustomTbButtonClicked);
			m_strCustomTbButtonRemove = TryGetEx(dictNew, "CustomTbButtonRemove", m_strCustomTbButtonRemove);
			m_strCut = TryGetEx(dictNew, "Cut", m_strCut);
			m_strData = TryGetEx(dictNew, "Data", m_strData);
			m_strDatabase = TryGetEx(dictNew, "Database", m_strDatabase);
			m_strDatabaseDescPrompt = TryGetEx(dictNew, "DatabaseDescPrompt", m_strDatabaseDescPrompt);
			m_strDatabaseHasUnsavedChanges = TryGetEx(dictNew, "DatabaseHasUnsavedChanges", m_strDatabaseHasUnsavedChanges);
			m_strDatabaseMaintenance = TryGetEx(dictNew, "DatabaseMaintenance", m_strDatabaseMaintenance);
			m_strDatabaseMaintenanceDesc = TryGetEx(dictNew, "DatabaseMaintenanceDesc", m_strDatabaseMaintenanceDesc);
			m_strDatabaseModifiedNoDot = TryGetEx(dictNew, "DatabaseModifiedNoDot", m_strDatabaseModifiedNoDot);
			m_strDatabaseNamePrompt = TryGetEx(dictNew, "DatabaseNamePrompt", m_strDatabaseNamePrompt);
			m_strDatabaseSettings = TryGetEx(dictNew, "DatabaseSettings", m_strDatabaseSettings);
			m_strDatabaseSettingsDesc = TryGetEx(dictNew, "DatabaseSettingsDesc", m_strDatabaseSettingsDesc);
			m_strDataEditor = TryGetEx(dictNew, "DataEditor", m_strDataEditor);
			m_strDataViewer = TryGetEx(dictNew, "DataViewer", m_strDataViewer);
			m_strDbMntncResults = TryGetEx(dictNew, "DbMntncResults", m_strDbMntncResults);
			m_strDbNoModBy = TryGetEx(dictNew, "DbNoModBy", m_strDbNoModBy);
			m_strDefault = TryGetEx(dictNew, "Default", m_strDefault);
			m_strDelete = TryGetEx(dictNew, "Delete", m_strDelete);
			m_strDeleteCmd = TryGetEx(dictNew, "DeleteCmd", m_strDeleteCmd);
			m_strDeleteEntriesTitle = TryGetEx(dictNew, "DeleteEntriesTitle", m_strDeleteEntriesTitle);
			m_strDeleteEntriesTitleSingle = TryGetEx(dictNew, "DeleteEntriesTitleSingle", m_strDeleteEntriesTitleSingle);
			m_strDeleteEntriesQuestion = TryGetEx(dictNew, "DeleteEntriesQuestion", m_strDeleteEntriesQuestion);
			m_strDeleteEntriesQuestionSingle = TryGetEx(dictNew, "DeleteEntriesQuestionSingle", m_strDeleteEntriesQuestionSingle);
			m_strDeleteGroupTitle = TryGetEx(dictNew, "DeleteGroupTitle", m_strDeleteGroupTitle);
			m_strDeleteGroupInfo = TryGetEx(dictNew, "DeleteGroupInfo", m_strDeleteGroupInfo);
			m_strDeleteGroupQuestion = TryGetEx(dictNew, "DeleteGroupQuestion", m_strDeleteGroupQuestion);
			m_strDescending = TryGetEx(dictNew, "Descending", m_strDescending);
			m_strDescription = TryGetEx(dictNew, "Description", m_strDescription);
			m_strDetails = TryGetEx(dictNew, "Details", m_strDetails);
			m_strDialogNoShowAgain = TryGetEx(dictNew, "DialogNoShowAgain", m_strDialogNoShowAgain);
			m_strDialogs = TryGetEx(dictNew, "Dialogs", m_strDialogs);
			m_strDisable = TryGetEx(dictNew, "Disable", m_strDisable);
			m_strDisabled = TryGetEx(dictNew, "Disabled", m_strDisabled);
			m_strDisableSaveIfNotModified = TryGetEx(dictNew, "DisableSaveIfNotModified", m_strDisableSaveIfNotModified);
			m_strDiscardChangesCmd = TryGetEx(dictNew, "DiscardChangesCmd", m_strDiscardChangesCmd);
			m_strDocumentationHint = TryGetEx(dictNew, "DocumentationHint", m_strDocumentationHint);
			m_strDragDrop = TryGetEx(dictNew, "DragDrop", m_strDragDrop);
			m_strDropToBackOnCopy = TryGetEx(dictNew, "DropToBackOnCopy", m_strDropToBackOnCopy);
			m_strDuplicateStringFieldName = TryGetEx(dictNew, "DuplicateStringFieldName", m_strDuplicateStringFieldName);
			m_strEditCmd = TryGetEx(dictNew, "EditCmd", m_strEditCmd);
			m_strEditEntry = TryGetEx(dictNew, "EditEntry", m_strEditEntry);
			m_strEditEntryDesc = TryGetEx(dictNew, "EditEntryDesc", m_strEditEntryDesc);
			m_strEditGroup = TryGetEx(dictNew, "EditGroup", m_strEditGroup);
			m_strEditGroupDesc = TryGetEx(dictNew, "EditGroupDesc", m_strEditGroupDesc);
			m_strEditStringField = TryGetEx(dictNew, "EditStringField", m_strEditStringField);
			m_strEditStringFieldDesc = TryGetEx(dictNew, "EditStringFieldDesc", m_strEditStringFieldDesc);
			m_strEMail = TryGetEx(dictNew, "EMail", m_strEMail);
			m_strEmpty = TryGetEx(dictNew, "Empty", m_strEmpty);
			m_strEmptyMasterPw = TryGetEx(dictNew, "EmptyMasterPw", m_strEmptyMasterPw);
			m_strEmptyMasterPwHint = TryGetEx(dictNew, "EmptyMasterPwHint", m_strEmptyMasterPwHint);
			m_strEmptyMasterPwQuestion = TryGetEx(dictNew, "EmptyMasterPwQuestion", m_strEmptyMasterPwQuestion);
			m_strEmptyRecycleBinQuestion = TryGetEx(dictNew, "EmptyRecycleBinQuestion", m_strEmptyRecycleBinQuestion);
			m_strEnable = TryGetEx(dictNew, "Enable", m_strEnable);
			m_strEnabled = TryGetEx(dictNew, "Enabled", m_strEnabled);
			m_strEncoding = TryGetEx(dictNew, "Encoding", m_strEncoding);
			m_strEncodingFail = TryGetEx(dictNew, "EncodingFail", m_strEncodingFail);
			m_strEndsWith = TryGetEx(dictNew, "EndsWith", m_strEndsWith);
			m_strEnterCompositeKey = TryGetEx(dictNew, "EnterCompositeKey", m_strEnterCompositeKey);
			m_strEnterCurrentCompositeKey = TryGetEx(dictNew, "EnterCurrentCompositeKey", m_strEnterCurrentCompositeKey);
			m_strEntropyDesc = TryGetEx(dictNew, "EntropyDesc", m_strEntropyDesc);
			m_strEntropyTitle = TryGetEx(dictNew, "EntropyTitle", m_strEntropyTitle);
			m_strEntry = TryGetEx(dictNew, "Entry", m_strEntry);
			m_strEntryList = TryGetEx(dictNew, "EntryList", m_strEntryList);
			m_strEntryListAutoResizeColumns = TryGetEx(dictNew, "EntryListAutoResizeColumns", m_strEntryListAutoResizeColumns);
			m_strEntrySelGroupSel = TryGetEx(dictNew, "EntrySelGroupSel", m_strEntrySelGroupSel);
			m_strEnvironmentVariable = TryGetEx(dictNew, "EnvironmentVariable", m_strEnvironmentVariable);
			m_strEqualsOp = TryGetEx(dictNew, "EqualsOp", m_strEqualsOp);
			m_strError = TryGetEx(dictNew, "Error", m_strError);
			m_strErrorCode = TryGetEx(dictNew, "ErrorCode", m_strErrorCode);
			m_strErrors = TryGetEx(dictNew, "Errors", m_strErrors);
			m_strEscMinimizesToTray = TryGetEx(dictNew, "EscMinimizesToTray", m_strEscMinimizesToTray);
			m_strEvent = TryGetEx(dictNew, "Event", m_strEvent);
			m_strExecuteCmdLineUrl = TryGetEx(dictNew, "ExecuteCmdLineUrl", m_strExecuteCmdLineUrl);
			m_strExitInsteadOfLockingAfterTime = TryGetEx(dictNew, "ExitInsteadOfLockingAfterTime", m_strExitInsteadOfLockingAfterTime);
			m_strExitInsteadOfLockingAlways = TryGetEx(dictNew, "ExitInsteadOfLockingAlways", m_strExitInsteadOfLockingAlways);
			m_strExpiredEntries = TryGetEx(dictNew, "ExpiredEntries", m_strExpiredEntries);
			m_strExpiredEntriesCanMatch = TryGetEx(dictNew, "ExpiredEntriesCanMatch", m_strExpiredEntriesCanMatch);
			m_strExpiryTime = TryGetEx(dictNew, "ExpiryTime", m_strExpiryTime);
			m_strExpiryTimeDateOnly = TryGetEx(dictNew, "ExpiryTimeDateOnly", m_strExpiryTimeDateOnly);
			m_strExport = TryGetEx(dictNew, "Export", m_strExport);
			m_strExportFileDesc = TryGetEx(dictNew, "ExportFileDesc", m_strExportFileDesc);
			m_strExportFileTitle = TryGetEx(dictNew, "ExportFileTitle", m_strExportFileTitle);
			m_strExportHtml = TryGetEx(dictNew, "ExportHtml", m_strExportHtml);
			m_strExportHtmlDesc = TryGetEx(dictNew, "ExportHtmlDesc", m_strExportHtmlDesc);
			m_strExportingStatusMsg = TryGetEx(dictNew, "ExportingStatusMsg", m_strExportingStatusMsg);
			m_strExportStc = TryGetEx(dictNew, "ExportStc", m_strExportStc);
			m_strExportToPrompt = TryGetEx(dictNew, "ExportToPrompt", m_strExportToPrompt);
			m_strExternal = TryGetEx(dictNew, "External", m_strExternal);
			m_strExternalApp = TryGetEx(dictNew, "ExternalApp", m_strExternalApp);
			m_strFatalError = TryGetEx(dictNew, "FatalError", m_strFatalError);
			m_strFeature = TryGetEx(dictNew, "Feature", m_strFeature);
			m_strField = TryGetEx(dictNew, "Field", m_strField);
			m_strFieldName = TryGetEx(dictNew, "FieldName", m_strFieldName);
			m_strFieldNameExistsAlready = TryGetEx(dictNew, "FieldNameExistsAlready", m_strFieldNameExistsAlready);
			m_strFieldNameInvalid = TryGetEx(dictNew, "FieldNameInvalid", m_strFieldNameInvalid);
			m_strFieldNamePrompt = TryGetEx(dictNew, "FieldNamePrompt", m_strFieldNamePrompt);
			m_strFieldRefInvalidChars = TryGetEx(dictNew, "FieldRefInvalidChars", m_strFieldRefInvalidChars);
			m_strFieldRefMultiMatch = TryGetEx(dictNew, "FieldRefMultiMatch", m_strFieldRefMultiMatch);
			m_strFieldRefMultiMatchHint = TryGetEx(dictNew, "FieldRefMultiMatchHint", m_strFieldRefMultiMatchHint);
			m_strFieldValue = TryGetEx(dictNew, "FieldValue", m_strFieldValue);
			m_strFile = TryGetEx(dictNew, "File", m_strFile);
			m_strFileChanged = TryGetEx(dictNew, "FileChanged", m_strFileChanged);
			m_strFileChangedOverwrite = TryGetEx(dictNew, "FileChangedOverwrite", m_strFileChangedOverwrite);
			m_strFileChangedSync = TryGetEx(dictNew, "FileChangedSync", m_strFileChangedSync);
			m_strFileExists = TryGetEx(dictNew, "FileExists", m_strFileExists);
			m_strFileExistsAlready = TryGetEx(dictNew, "FileExistsAlready", m_strFileExistsAlready);
			m_strFileExtInstallFailed = TryGetEx(dictNew, "FileExtInstallFailed", m_strFileExtInstallFailed);
			m_strFileExtInstallSuccess = TryGetEx(dictNew, "FileExtInstallSuccess", m_strFileExtInstallSuccess);
			m_strFileExtName = TryGetEx(dictNew, "FileExtName", m_strFileExtName);
			m_strFileFormatStc = TryGetEx(dictNew, "FileFormatStc", m_strFileFormatStc);
			m_strFileLockedBy = TryGetEx(dictNew, "FileLockedBy", m_strFileLockedBy);
			m_strFileLockedWarning = TryGetEx(dictNew, "FileLockedWarning", m_strFileLockedWarning);
			m_strFileNameContainsSemicolonError = TryGetEx(dictNew, "FileNameContainsSemicolonError", m_strFileNameContainsSemicolonError);
			m_strFileNotFoundError = TryGetEx(dictNew, "FileNotFoundError", m_strFileNotFoundError);
			m_strFileOrUrl = TryGetEx(dictNew, "FileOrUrl", m_strFileOrUrl);
			m_strFiles = TryGetEx(dictNew, "Files", m_strFiles);
			m_strFileSaveQClosing = TryGetEx(dictNew, "FileSaveQClosing", m_strFileSaveQClosing);
			m_strFileSaveQExiting = TryGetEx(dictNew, "FileSaveQExiting", m_strFileSaveQExiting);
			m_strFileSaveQLocking = TryGetEx(dictNew, "FileSaveQLocking", m_strFileSaveQLocking);
			m_strFileSaveQOpCancel = TryGetEx(dictNew, "FileSaveQOpCancel", m_strFileSaveQOpCancel);
			m_strFileSaveQOpCancelClosing = TryGetEx(dictNew, "FileSaveQOpCancelClosing", m_strFileSaveQOpCancelClosing);
			m_strFileSaveQOpCancelExiting = TryGetEx(dictNew, "FileSaveQOpCancelExiting", m_strFileSaveQOpCancelExiting);
			m_strFileSaveQOpCancelLocking = TryGetEx(dictNew, "FileSaveQOpCancelLocking", m_strFileSaveQOpCancelLocking);
			m_strFileSaveQOpNoClosing = TryGetEx(dictNew, "FileSaveQOpNoClosing", m_strFileSaveQOpNoClosing);
			m_strFileSaveQOpNoExiting = TryGetEx(dictNew, "FileSaveQOpNoExiting", m_strFileSaveQOpNoExiting);
			m_strFileSaveQOpNoLocking = TryGetEx(dictNew, "FileSaveQOpNoLocking", m_strFileSaveQOpNoLocking);
			m_strFileSaveQOpYesClosing = TryGetEx(dictNew, "FileSaveQOpYesClosing", m_strFileSaveQOpYesClosing);
			m_strFileSaveQOpYesExiting = TryGetEx(dictNew, "FileSaveQOpYesExiting", m_strFileSaveQOpYesExiting);
			m_strFileSaveQOpYesLocking = TryGetEx(dictNew, "FileSaveQOpYesLocking", m_strFileSaveQOpYesLocking);
			m_strFileTxExtra = TryGetEx(dictNew, "FileTxExtra", m_strFileTxExtra);
			m_strFileVerifyHashFail = TryGetEx(dictNew, "FileVerifyHashFail", m_strFileVerifyHashFail);
			m_strFileVerifyHashFailRec = TryGetEx(dictNew, "FileVerifyHashFailRec", m_strFileVerifyHashFailRec);
			m_strFilter = TryGetEx(dictNew, "Filter", m_strFilter);
			m_strFind = TryGetEx(dictNew, "Find", m_strFind);
			m_strFocusQuickFindOnRestore = TryGetEx(dictNew, "FocusQuickFindOnRestore", m_strFocusQuickFindOnRestore);
			m_strFocusQuickFindOnUntray = TryGetEx(dictNew, "FocusQuickFindOnUntray", m_strFocusQuickFindOnUntray);
			m_strFocusResultsAfterQuickSearch = TryGetEx(dictNew, "FocusResultsAfterQuickSearch", m_strFocusResultsAfterQuickSearch);
			m_strFolder = TryGetEx(dictNew, "Folder", m_strFolder);
			m_strFont = TryGetEx(dictNew, "Font", m_strFont);
			m_strFontDefault = TryGetEx(dictNew, "FontDefault", m_strFontDefault);
			m_strForceSystemFontUnix = TryGetEx(dictNew, "ForceSystemFontUnix", m_strForceSystemFontUnix);
			m_strFormat = TryGetEx(dictNew, "Format", m_strFormat);
			m_strFormatNoDatabaseDesc = TryGetEx(dictNew, "FormatNoDatabaseDesc", m_strFormatNoDatabaseDesc);
			m_strFormatNoDatabaseName = TryGetEx(dictNew, "FormatNoDatabaseName", m_strFormatNoDatabaseName);
			m_strFormatNoRootEntries = TryGetEx(dictNew, "FormatNoRootEntries", m_strFormatNoRootEntries);
			m_strFormatNoSubGroupsInRoot = TryGetEx(dictNew, "FormatNoSubGroupsInRoot", m_strFormatNoSubGroupsInRoot);
			m_strFormatOnlyOneAttachment = TryGetEx(dictNew, "FormatOnlyOneAttachment", m_strFormatOnlyOneAttachment);
			m_strGeneral = TryGetEx(dictNew, "General", m_strGeneral);
			m_strGenerate = TryGetEx(dictNew, "Generate", m_strGenerate);
			m_strGenerateCount = TryGetEx(dictNew, "GenerateCount", m_strGenerateCount);
			m_strGenerateCountDesc = TryGetEx(dictNew, "GenerateCountDesc", m_strGenerateCountDesc);
			m_strGenerateCountLongDesc = TryGetEx(dictNew, "GenerateCountLongDesc", m_strGenerateCountLongDesc);
			m_strGeneratedPasswordSamples = TryGetEx(dictNew, "GeneratedPasswordSamples", m_strGeneratedPasswordSamples);
			m_strGeneratePassword = TryGetEx(dictNew, "GeneratePassword", m_strGeneratePassword);
			m_strGenericCsvImporter = TryGetEx(dictNew, "GenericCsvImporter", m_strGenericCsvImporter);
			m_strGenProfileRemove = TryGetEx(dictNew, "GenProfileRemove", m_strGenProfileRemove);
			m_strGenProfileRemoveDesc = TryGetEx(dictNew, "GenProfileRemoveDesc", m_strGenProfileRemoveDesc);
			m_strGenProfileSave = TryGetEx(dictNew, "GenProfileSave", m_strGenProfileSave);
			m_strGenProfileSaveDesc = TryGetEx(dictNew, "GenProfileSaveDesc", m_strGenProfileSaveDesc);
			m_strGenProfileSaveDescLong = TryGetEx(dictNew, "GenProfileSaveDescLong", m_strGenProfileSaveDescLong);
			m_strGenPwAccept = TryGetEx(dictNew, "GenPwAccept", m_strGenPwAccept);
			m_strGenPwBasedOnPrevious = TryGetEx(dictNew, "GenPwBasedOnPrevious", m_strGenPwBasedOnPrevious);
			m_strGenPwSprVariant = TryGetEx(dictNew, "GenPwSprVariant", m_strGenPwSprVariant);
			m_strGradient = TryGetEx(dictNew, "Gradient", m_strGradient);
			m_strGroup = TryGetEx(dictNew, "Group", m_strGroup);
			m_strGroupCannotStoreEntries = TryGetEx(dictNew, "GroupCannotStoreEntries", m_strGroupCannotStoreEntries);
			m_strGroupsSkipped = TryGetEx(dictNew, "GroupsSkipped", m_strGroupsSkipped);
			m_strGroupsSkipped1 = TryGetEx(dictNew, "GroupsSkipped1", m_strGroupsSkipped1);
			m_strHelpSourceNoLocalOption = TryGetEx(dictNew, "HelpSourceNoLocalOption", m_strHelpSourceNoLocalOption);
			m_strHelpSourceSelection = TryGetEx(dictNew, "HelpSourceSelection", m_strHelpSourceSelection);
			m_strHelpSourceSelectionDesc = TryGetEx(dictNew, "HelpSourceSelectionDesc", m_strHelpSourceSelectionDesc);
			m_strHexKeyEx = TryGetEx(dictNew, "HexKeyEx", m_strHexKeyEx);
			m_strHexViewer = TryGetEx(dictNew, "HexViewer", m_strHexViewer);
			m_strHidden = TryGetEx(dictNew, "Hidden", m_strHidden);
			m_strHideCloseDatabaseTb = TryGetEx(dictNew, "HideCloseDatabaseTb", m_strHideCloseDatabaseTb);
			m_strHideUsingAsterisks = TryGetEx(dictNew, "HideUsingAsterisks", m_strHideUsingAsterisks);
			m_strHistory = TryGetEx(dictNew, "History", m_strHistory);
			m_strHomebanking = TryGetEx(dictNew, "Homebanking", m_strHomebanking);
			m_strHost = TryGetEx(dictNew, "Host", m_strHost);
			m_strHotKeyAltOnly = TryGetEx(dictNew, "HotKeyAltOnly", m_strHotKeyAltOnly);
			m_strHotKeyAltOnlyHint = TryGetEx(dictNew, "HotKeyAltOnlyHint", m_strHotKeyAltOnlyHint);
			m_strHotKeyAltOnlyQuestion = TryGetEx(dictNew, "HotKeyAltOnlyQuestion", m_strHotKeyAltOnlyQuestion);
			m_strIcon = TryGetEx(dictNew, "Icon", m_strIcon);
			m_strId = TryGetEx(dictNew, "Id", m_strId);
			m_strIgnore = TryGetEx(dictNew, "Ignore", m_strIgnore);
			m_strImageFormatFeatureUnsupported = TryGetEx(dictNew, "ImageFormatFeatureUnsupported", m_strImageFormatFeatureUnsupported);
			m_strImageViewer = TryGetEx(dictNew, "ImageViewer", m_strImageViewer);
			m_strImport = TryGetEx(dictNew, "Import", m_strImport);
			m_strImportBehavior = TryGetEx(dictNew, "ImportBehavior", m_strImportBehavior);
			m_strImportBehaviorDesc = TryGetEx(dictNew, "ImportBehaviorDesc", m_strImportBehaviorDesc);
			m_strImportFailed = TryGetEx(dictNew, "ImportFailed", m_strImportFailed);
			m_strImportFileDesc = TryGetEx(dictNew, "ImportFileDesc", m_strImportFileDesc);
			m_strImportFilesPrompt = TryGetEx(dictNew, "ImportFilesPrompt", m_strImportFilesPrompt);
			m_strImportFileTitle = TryGetEx(dictNew, "ImportFileTitle", m_strImportFileTitle);
			m_strImportFinished = TryGetEx(dictNew, "ImportFinished", m_strImportFinished);
			m_strImportingStatusMsg = TryGetEx(dictNew, "ImportingStatusMsg", m_strImportingStatusMsg);
			m_strImportMustRead = TryGetEx(dictNew, "ImportMustRead", m_strImportMustRead);
			m_strImportMustReadQuestion = TryGetEx(dictNew, "ImportMustReadQuestion", m_strImportMustReadQuestion);
			m_strImportStc = TryGetEx(dictNew, "ImportStc", m_strImportStc);
			m_strIncompatibleEnv = TryGetEx(dictNew, "IncompatibleEnv", m_strIncompatibleEnv);
			m_strIncompatibleWithSorting = TryGetEx(dictNew, "IncompatibleWithSorting", m_strIncompatibleWithSorting);
			m_strInheritSettingFromParent = TryGetEx(dictNew, "InheritSettingFromParent", m_strInheritSettingFromParent);
			m_strInstalled = TryGetEx(dictNew, "Installed", m_strInstalled);
			m_strInterleavedKeySending = TryGetEx(dictNew, "InterleavedKeySending", m_strInterleavedKeySending);
			m_strInternalEditor = TryGetEx(dictNew, "InternalEditor", m_strInternalEditor);
			m_strInternalViewer = TryGetEx(dictNew, "InternalViewer", m_strInternalViewer);
			m_strInternet = TryGetEx(dictNew, "Internet", m_strInternet);
			m_strInvalidKey = TryGetEx(dictNew, "InvalidKey", m_strInvalidKey);
			m_strInvalidUrl = TryGetEx(dictNew, "InvalidUrl", m_strInvalidUrl);
			m_strInvalidUserPassword = TryGetEx(dictNew, "InvalidUserPassword", m_strInvalidUserPassword);
			m_strIOConnection = TryGetEx(dictNew, "IOConnection", m_strIOConnection);
			m_strIOConnectionLong = TryGetEx(dictNew, "IOConnectionLong", m_strIOConnectionLong);
			m_strItalic = TryGetEx(dictNew, "Italic", m_strItalic);
			m_strIterations = TryGetEx(dictNew, "Iterations", m_strIterations);
			m_strKdbKeePassLibC = TryGetEx(dictNew, "KdbKeePassLibC", m_strKdbKeePassLibC);
			m_strKdbWUA = TryGetEx(dictNew, "KdbWUA", m_strKdbWUA);
			m_strKdbxFiles = TryGetEx(dictNew, "KdbxFiles", m_strKdbxFiles);
			m_strKdfAdjust = TryGetEx(dictNew, "KdfAdjust", m_strKdfAdjust);
			m_strKdfParams1Sec = TryGetEx(dictNew, "KdfParams1Sec", m_strKdfParams1Sec);
			m_strKeePassLibCLong = TryGetEx(dictNew, "KeePassLibCLong", m_strKeePassLibCLong);
			m_strKeePassLibCNotFound = TryGetEx(dictNew, "KeePassLibCNotFound", m_strKeePassLibCNotFound);
			m_strKeePassLibCNotWindows = TryGetEx(dictNew, "KeePassLibCNotWindows", m_strKeePassLibCNotWindows);
			m_strKeePassLibCNotWindowsHint = TryGetEx(dictNew, "KeePassLibCNotWindowsHint", m_strKeePassLibCNotWindowsHint);
			m_strKeepExisting = TryGetEx(dictNew, "KeepExisting", m_strKeepExisting);
			m_strKeyboardKeyAlt = TryGetEx(dictNew, "KeyboardKeyAlt", m_strKeyboardKeyAlt);
			m_strKeyboardKeyCtrl = TryGetEx(dictNew, "KeyboardKeyCtrl", m_strKeyboardKeyCtrl);
			m_strKeyboardKeyCtrlLeft = TryGetEx(dictNew, "KeyboardKeyCtrlLeft", m_strKeyboardKeyCtrlLeft);
			m_strKeyboardKeyEsc = TryGetEx(dictNew, "KeyboardKeyEsc", m_strKeyboardKeyEsc);
			m_strKeyboardKeyModifiers = TryGetEx(dictNew, "KeyboardKeyModifiers", m_strKeyboardKeyModifiers);
			m_strKeyboardKeyReturn = TryGetEx(dictNew, "KeyboardKeyReturn", m_strKeyboardKeyReturn);
			m_strKeyboardKeyShift = TryGetEx(dictNew, "KeyboardKeyShift", m_strKeyboardKeyShift);
			m_strKeyboardKeyShiftLeft = TryGetEx(dictNew, "KeyboardKeyShiftLeft", m_strKeyboardKeyShiftLeft);
			m_strKeyChanged = TryGetEx(dictNew, "KeyChanged", m_strKeyChanged);
			m_strKeyFile = TryGetEx(dictNew, "KeyFile", m_strKeyFile);
			m_strKeyFileCreate = TryGetEx(dictNew, "KeyFileCreate", m_strKeyFileCreate);
			m_strKeyFileError = TryGetEx(dictNew, "KeyFileError", m_strKeyFileError);
			m_strKeyFiles = TryGetEx(dictNew, "KeyFiles", m_strKeyFiles);
			m_strKeyFileSelect = TryGetEx(dictNew, "KeyFileSelect", m_strKeyFileSelect);
			m_strKeyFileUseExisting = TryGetEx(dictNew, "KeyFileUseExisting", m_strKeyFileUseExisting);
			m_strKeyProvIncmpWithSD = TryGetEx(dictNew, "KeyProvIncmpWithSD", m_strKeyProvIncmpWithSD);
			m_strKeyProvIncmpWithSDHint = TryGetEx(dictNew, "KeyProvIncmpWithSDHint", m_strKeyProvIncmpWithSDHint);
			m_strLanguageSelected = TryGetEx(dictNew, "LanguageSelected", m_strLanguageSelected);
			m_strLastAccessTime = TryGetEx(dictNew, "LastAccessTime", m_strLastAccessTime);
			m_strLastModificationTime = TryGetEx(dictNew, "LastModificationTime", m_strLastModificationTime);
			m_strLimitSingleInstance = TryGetEx(dictNew, "LimitSingleInstance", m_strLimitSingleInstance);
			m_strLocked = TryGetEx(dictNew, "Locked", m_strLocked);
			m_strLockMenuLock = TryGetEx(dictNew, "LockMenuLock", m_strLockMenuLock);
			m_strLockMenuUnlock = TryGetEx(dictNew, "LockMenuUnlock", m_strLockMenuUnlock);
			m_strLockOnMinimizeTaskbar = TryGetEx(dictNew, "LockOnMinimizeTaskbar", m_strLockOnMinimizeTaskbar);
			m_strLockOnMinimizeTray = TryGetEx(dictNew, "LockOnMinimizeTray", m_strLockOnMinimizeTray);
			m_strLockOnRemoteControlChange = TryGetEx(dictNew, "LockOnRemoteControlChange", m_strLockOnRemoteControlChange);
			m_strLockOnSessionSwitch = TryGetEx(dictNew, "LockOnSessionSwitch", m_strLockOnSessionSwitch);
			m_strLockOnSuspend = TryGetEx(dictNew, "LockOnSuspend", m_strLockOnSuspend);
			m_strMainInstruction = TryGetEx(dictNew, "MainInstruction", m_strMainInstruction);
			m_strMainWindow = TryGetEx(dictNew, "MainWindow", m_strMainWindow);
			m_strMasterKeyChanged = TryGetEx(dictNew, "MasterKeyChanged", m_strMasterKeyChanged);
			m_strMasterKeyChangedSavePrompt = TryGetEx(dictNew, "MasterKeyChangedSavePrompt", m_strMasterKeyChangedSavePrompt);
			m_strMasterKeyChangeForce = TryGetEx(dictNew, "MasterKeyChangeForce", m_strMasterKeyChangeForce);
			m_strMasterKeyChangeInfo = TryGetEx(dictNew, "MasterKeyChangeInfo", m_strMasterKeyChangeInfo);
			m_strMasterKeyChangeQ = TryGetEx(dictNew, "MasterKeyChangeQ", m_strMasterKeyChangeQ);
			m_strMasterKeyChangeRec = TryGetEx(dictNew, "MasterKeyChangeRec", m_strMasterKeyChangeRec);
			m_strMasterKeyOnSecureDesktop = TryGetEx(dictNew, "MasterKeyOnSecureDesktop", m_strMasterKeyOnSecureDesktop);
			m_strMasterPasswordMinLengthFailed = TryGetEx(dictNew, "MasterPasswordMinLengthFailed", m_strMasterPasswordMinLengthFailed);
			m_strMasterPasswordMinQualityFailed = TryGetEx(dictNew, "MasterPasswordMinQualityFailed", m_strMasterPasswordMinQualityFailed);
			m_strMaximized = TryGetEx(dictNew, "Maximized", m_strMaximized);
			m_strMemory = TryGetEx(dictNew, "Memory", m_strMemory);
			m_strMenus = TryGetEx(dictNew, "Menus", m_strMenus);
			m_strMethod = TryGetEx(dictNew, "Method", m_strMethod);
			m_strMinimizeAfterCopy = TryGetEx(dictNew, "MinimizeAfterCopy", m_strMinimizeAfterCopy);
			m_strMinimizeAfterLocking = TryGetEx(dictNew, "MinimizeAfterLocking", m_strMinimizeAfterLocking);
			m_strMinimizeAfterOpeningDatabase = TryGetEx(dictNew, "MinimizeAfterOpeningDatabase", m_strMinimizeAfterOpeningDatabase);
			m_strMinimized = TryGetEx(dictNew, "Minimized", m_strMinimized);
			m_strMinimizeToTray = TryGetEx(dictNew, "MinimizeToTray", m_strMinimizeToTray);
			m_strMore = TryGetEx(dictNew, "More", m_strMore);
			m_strMoreEntries = TryGetEx(dictNew, "MoreEntries", m_strMoreEntries);
			m_strName = TryGetEx(dictNew, "Name", m_strName);
			m_strNativeLibUse = TryGetEx(dictNew, "NativeLibUse", m_strNativeLibUse);
			m_strNavigation = TryGetEx(dictNew, "Navigation", m_strNavigation);
			m_strNetwork = TryGetEx(dictNew, "Network", m_strNetwork);
			m_strNeverExpires = TryGetEx(dictNew, "NeverExpires", m_strNeverExpires);
			m_strNew = TryGetEx(dictNew, "New", m_strNew);
			m_strNewDatabase = TryGetEx(dictNew, "NewDatabase", m_strNewDatabase);
			m_strNewDatabaseFileName = TryGetEx(dictNew, "NewDatabaseFileName", m_strNewDatabaseFileName);
			m_strNewerNetRequired = TryGetEx(dictNew, "NewerNetRequired", m_strNewerNetRequired);
			m_strNewGroup = TryGetEx(dictNew, "NewGroup", m_strNewGroup);
			m_strNewLine = TryGetEx(dictNew, "NewLine", m_strNewLine);
			m_strNewState = TryGetEx(dictNew, "NewState", m_strNewState);
			m_strNewVersionAvailable = TryGetEx(dictNew, "NewVersionAvailable", m_strNewVersionAvailable);
			m_strNo = TryGetEx(dictNew, "No", m_strNo);
			m_strNoCmd = TryGetEx(dictNew, "NoCmd", m_strNoCmd);
			m_strNoEncNoCompress = TryGetEx(dictNew, "NoEncNoCompress", m_strNoEncNoCompress);
			m_strNoFileAccessRead = TryGetEx(dictNew, "NoFileAccessRead", m_strNoFileAccessRead);
			m_strNoKeyFileSpecifiedMeta = TryGetEx(dictNew, "NoKeyFileSpecifiedMeta", m_strNoKeyFileSpecifiedMeta);
			m_strNoKeyRepeat = TryGetEx(dictNew, "NoKeyRepeat", m_strNoKeyRepeat);
			m_strNone = TryGetEx(dictNew, "None", m_strNone);
			m_strNormal = TryGetEx(dictNew, "Normal", m_strNormal);
			m_strNoSort = TryGetEx(dictNew, "NoSort", m_strNoSort);
			m_strNot = TryGetEx(dictNew, "Not", m_strNot);
			m_strNotRecommended = TryGetEx(dictNew, "NotRecommended", m_strNotRecommended);
			m_strNotes = TryGetEx(dictNew, "Notes", m_strNotes);
			m_strNotInstalled = TryGetEx(dictNew, "NotInstalled", m_strNotInstalled);
			m_strNoXslFile = TryGetEx(dictNew, "NoXslFile", m_strNoXslFile);
			m_strObjectNotFound = TryGetEx(dictNew, "ObjectNotFound", m_strObjectNotFound);
			m_strObjectsDeleted = TryGetEx(dictNew, "ObjectsDeleted", m_strObjectsDeleted);
			m_strOff = TryGetEx(dictNew, "Off", m_strOff);
			m_strOfLower = TryGetEx(dictNew, "OfLower", m_strOfLower);
			m_strOk = TryGetEx(dictNew, "Ok", m_strOk);
			m_strOldFormat = TryGetEx(dictNew, "OldFormat", m_strOldFormat);
			m_strOn = TryGetEx(dictNew, "On", m_strOn);
			m_strOpAborted = TryGetEx(dictNew, "OpAborted", m_strOpAborted);
			m_strOpenCmd = TryGetEx(dictNew, "OpenCmd", m_strOpenCmd);
			m_strOpenDatabase = TryGetEx(dictNew, "OpenDatabase", m_strOpenDatabase);
			m_strOpenDatabaseFile = TryGetEx(dictNew, "OpenDatabaseFile", m_strOpenDatabaseFile);
			m_strOpenDatabaseFileStc = TryGetEx(dictNew, "OpenDatabaseFileStc", m_strOpenDatabaseFileStc);
			m_strOpened = TryGetEx(dictNew, "Opened", m_strOpened);
			m_strOpenedDatabaseFile = TryGetEx(dictNew, "OpenedDatabaseFile", m_strOpenedDatabaseFile);
			m_strOpeningDatabase = TryGetEx(dictNew, "OpeningDatabase", m_strOpeningDatabase);
			m_strOpenUrl = TryGetEx(dictNew, "OpenUrl", m_strOpenUrl);
			m_strOpenWith = TryGetEx(dictNew, "OpenWith", m_strOpenWith);
			m_strOptimizeForScreenReader = TryGetEx(dictNew, "OptimizeForScreenReader", m_strOptimizeForScreenReader);
			m_strOptions = TryGetEx(dictNew, "Options", m_strOptions);
			m_strOptionsDesc = TryGetEx(dictNew, "OptionsDesc", m_strOptionsDesc);
			m_strOtherPlaceholders = TryGetEx(dictNew, "OtherPlaceholders", m_strOtherPlaceholders);
			m_strOverridesBuiltIn = TryGetEx(dictNew, "OverridesBuiltIn", m_strOverridesBuiltIn);
			m_strOverridesCustom = TryGetEx(dictNew, "OverridesCustom", m_strOverridesCustom);
			m_strOverwrite = TryGetEx(dictNew, "Overwrite", m_strOverwrite);
			m_strOverwriteExisting = TryGetEx(dictNew, "OverwriteExisting", m_strOverwriteExisting);
			m_strOverwriteExistingFileQuestion = TryGetEx(dictNew, "OverwriteExistingFileQuestion", m_strOverwriteExistingFileQuestion);
			m_strOverwriteIfNewer = TryGetEx(dictNew, "OverwriteIfNewer", m_strOverwriteIfNewer);
			m_strOverwriteIfNewerAndApplyDel = TryGetEx(dictNew, "OverwriteIfNewerAndApplyDel", m_strOverwriteIfNewerAndApplyDel);
			m_strPackageInstallHint = TryGetEx(dictNew, "PackageInstallHint", m_strPackageInstallHint);
			m_strParallelism = TryGetEx(dictNew, "Parallelism", m_strParallelism);
			m_strParamDescHelp = TryGetEx(dictNew, "ParamDescHelp", m_strParamDescHelp);
			m_strParameters = TryGetEx(dictNew, "Parameters", m_strParameters);
			m_strPassword = TryGetEx(dictNew, "Password", m_strPassword);
			m_strPasswordLength = TryGetEx(dictNew, "PasswordLength", m_strPasswordLength);
			m_strPasswordManagers = TryGetEx(dictNew, "PasswordManagers", m_strPasswordManagers);
			m_strPasswordOptions = TryGetEx(dictNew, "PasswordOptions", m_strPasswordOptions);
			m_strPasswordOptionsDesc = TryGetEx(dictNew, "PasswordOptionsDesc", m_strPasswordOptionsDesc);
			m_strPasswordPrompt = TryGetEx(dictNew, "PasswordPrompt", m_strPasswordPrompt);
			m_strPasswordRepeatFailed = TryGetEx(dictNew, "PasswordRepeatFailed", m_strPasswordRepeatFailed);
			m_strPasswordRepeatHint = TryGetEx(dictNew, "PasswordRepeatHint", m_strPasswordRepeatHint);
			m_strPaste = TryGetEx(dictNew, "Paste", m_strPaste);
			m_strPerformAutoType = TryGetEx(dictNew, "PerformAutoType", m_strPerformAutoType);
			m_strPerformGlobalAutoType = TryGetEx(dictNew, "PerformGlobalAutoType", m_strPerformGlobalAutoType);
			m_strPerformSelectedAutoType = TryGetEx(dictNew, "PerformSelectedAutoType", m_strPerformSelectedAutoType);
			m_strPickCharacters = TryGetEx(dictNew, "PickCharacters", m_strPickCharacters);
			m_strPickCharactersDesc = TryGetEx(dictNew, "PickCharactersDesc", m_strPickCharactersDesc);
			m_strPickField = TryGetEx(dictNew, "PickField", m_strPickField);
			m_strPickFieldDesc = TryGetEx(dictNew, "PickFieldDesc", m_strPickFieldDesc);
			m_strPickIcon = TryGetEx(dictNew, "PickIcon", m_strPickIcon);
			m_strPlugin = TryGetEx(dictNew, "Plugin", m_strPlugin);
			m_strPlugin1x = TryGetEx(dictNew, "Plugin1x", m_strPlugin1x);
			m_strPlugin1xHint = TryGetEx(dictNew, "Plugin1xHint", m_strPlugin1xHint);
			m_strPluginCacheClearInfo = TryGetEx(dictNew, "PluginCacheClearInfo", m_strPluginCacheClearInfo);
			m_strPluginIncompatible = TryGetEx(dictNew, "PluginIncompatible", m_strPluginIncompatible);
			m_strPluginLoadFailed = TryGetEx(dictNew, "PluginLoadFailed", m_strPluginLoadFailed);
			m_strPluginOperatingSystemUnsupported = TryGetEx(dictNew, "PluginOperatingSystemUnsupported", m_strPluginOperatingSystemUnsupported);
			m_strPluginProvided = TryGetEx(dictNew, "PluginProvided", m_strPluginProvided);
			m_strPlugins = TryGetEx(dictNew, "Plugins", m_strPlugins);
			m_strPluginsCompilingAndLoading = TryGetEx(dictNew, "PluginsCompilingAndLoading", m_strPluginsCompilingAndLoading);
			m_strPluginsDesc = TryGetEx(dictNew, "PluginsDesc", m_strPluginsDesc);
			m_strPluginUpdateHint = TryGetEx(dictNew, "PluginUpdateHint", m_strPluginUpdateHint);
			m_strPolicyAutoTypeDesc = TryGetEx(dictNew, "PolicyAutoTypeDesc", m_strPolicyAutoTypeDesc);
			m_strPolicyAutoTypeWithoutContextDesc = TryGetEx(dictNew, "PolicyAutoTypeWithoutContextDesc", m_strPolicyAutoTypeWithoutContextDesc);
			m_strPolicyChangeMasterKey = TryGetEx(dictNew, "PolicyChangeMasterKey", m_strPolicyChangeMasterKey);
			m_strPolicyChangeMasterKeyNoKeyDesc = TryGetEx(dictNew, "PolicyChangeMasterKeyNoKeyDesc", m_strPolicyChangeMasterKeyNoKeyDesc);
			m_strPolicyClipboardDesc = TryGetEx(dictNew, "PolicyClipboardDesc", m_strPolicyClipboardDesc);
			m_strPolicyCopyWholeEntriesDesc = TryGetEx(dictNew, "PolicyCopyWholeEntriesDesc", m_strPolicyCopyWholeEntriesDesc);
			m_strPolicyDisallowed = TryGetEx(dictNew, "PolicyDisallowed", m_strPolicyDisallowed);
			m_strPolicyDragDropDesc = TryGetEx(dictNew, "PolicyDragDropDesc", m_strPolicyDragDropDesc);
			m_strPolicyExportDesc2 = TryGetEx(dictNew, "PolicyExportDesc2", m_strPolicyExportDesc2);
			m_strPolicyExportNoKeyDesc = TryGetEx(dictNew, "PolicyExportNoKeyDesc", m_strPolicyExportNoKeyDesc);
			m_strPolicyImportDesc = TryGetEx(dictNew, "PolicyImportDesc", m_strPolicyImportDesc);
			m_strPolicyNewDatabaseDesc = TryGetEx(dictNew, "PolicyNewDatabaseDesc", m_strPolicyNewDatabaseDesc);
			m_strPolicyPluginsDesc = TryGetEx(dictNew, "PolicyPluginsDesc", m_strPolicyPluginsDesc);
			m_strPolicyPrintDesc = TryGetEx(dictNew, "PolicyPrintDesc", m_strPolicyPrintDesc);
			m_strPolicyPrintNoKeyDesc = TryGetEx(dictNew, "PolicyPrintNoKeyDesc", m_strPolicyPrintNoKeyDesc);
			m_strPolicyRequiredFlag = TryGetEx(dictNew, "PolicyRequiredFlag", m_strPolicyRequiredFlag);
			m_strPolicySaveDatabaseDesc = TryGetEx(dictNew, "PolicySaveDatabaseDesc", m_strPolicySaveDatabaseDesc);
			m_strPolicyTriggersEditDesc = TryGetEx(dictNew, "PolicyTriggersEditDesc", m_strPolicyTriggersEditDesc);
			m_strPreReleaseVersion = TryGetEx(dictNew, "PreReleaseVersion", m_strPreReleaseVersion);
			m_strPrint = TryGetEx(dictNew, "Print", m_strPrint);
			m_strPrintDesc = TryGetEx(dictNew, "PrintDesc", m_strPrintDesc);
			m_strPrivate = TryGetEx(dictNew, "Private", m_strPrivate);
			m_strProfessional = TryGetEx(dictNew, "Professional", m_strProfessional);
			m_strQuickSearchExclExpired = TryGetEx(dictNew, "QuickSearchExclExpired", m_strQuickSearchExclExpired);
			m_strQuickSearchInPwFields = TryGetEx(dictNew, "QuickSearchInPwFields", m_strQuickSearchInPwFields);
			m_strQuickSearchDerefData = TryGetEx(dictNew, "QuickSearchDerefData", m_strQuickSearchDerefData);
			m_strQuickSearchTb = TryGetEx(dictNew, "QuickSearchTb", m_strQuickSearchTb);
			m_strRandomMacAddress = TryGetEx(dictNew, "RandomMacAddress", m_strRandomMacAddress);
			m_strReady = TryGetEx(dictNew, "Ready", m_strReady);
			m_strRecommended = TryGetEx(dictNew, "Recommended", m_strRecommended);
			m_strRecommendedCmd = TryGetEx(dictNew, "RecommendedCmd", m_strRecommendedCmd);
			m_strRecycleBin = TryGetEx(dictNew, "RecycleBin", m_strRecycleBin);
			m_strRecycleBinCollapse = TryGetEx(dictNew, "RecycleBinCollapse", m_strRecycleBinCollapse);
			m_strRecycleEntryConfirm = TryGetEx(dictNew, "RecycleEntryConfirm", m_strRecycleEntryConfirm);
			m_strRecycleEntryConfirmSingle = TryGetEx(dictNew, "RecycleEntryConfirmSingle", m_strRecycleEntryConfirmSingle);
			m_strRecycleGroupConfirm = TryGetEx(dictNew, "RecycleGroupConfirm", m_strRecycleGroupConfirm);
			m_strRecycleShowConfirm = TryGetEx(dictNew, "RecycleShowConfirm", m_strRecycleShowConfirm);
			m_strRedo = TryGetEx(dictNew, "Redo", m_strRedo);
			m_strRememberHidingSettings = TryGetEx(dictNew, "RememberHidingSettings", m_strRememberHidingSettings);
			m_strRememberKeySources = TryGetEx(dictNew, "RememberKeySources", m_strRememberKeySources);
			m_strRememberWorkingDirectories = TryGetEx(dictNew, "RememberWorkingDirectories", m_strRememberWorkingDirectories);
			m_strRemoteHostReachable = TryGetEx(dictNew, "RemoteHostReachable", m_strRemoteHostReachable);
			m_strRepairCmd = TryGetEx(dictNew, "RepairCmd", m_strRepairCmd);
			m_strRepairMode = TryGetEx(dictNew, "RepairMode", m_strRepairMode);
			m_strRepairModeInt = TryGetEx(dictNew, "RepairModeInt", m_strRepairModeInt);
			m_strRepairModeQ = TryGetEx(dictNew, "RepairModeQ", m_strRepairModeQ);
			m_strRepairModeUse = TryGetEx(dictNew, "RepairModeUse", m_strRepairModeUse);
			m_strRepeatOnlyWhenHidden = TryGetEx(dictNew, "RepeatOnlyWhenHidden", m_strRepeatOnlyWhenHidden);
			m_strRestartKeePassQuestion = TryGetEx(dictNew, "RestartKeePassQuestion", m_strRestartKeePassQuestion);
			m_strRetry = TryGetEx(dictNew, "Retry", m_strRetry);
			m_strRetryCmd = TryGetEx(dictNew, "RetryCmd", m_strRetryCmd);
			m_strRootDirectory = TryGetEx(dictNew, "RootDirectory", m_strRootDirectory);
			m_strSameKeybLayout = TryGetEx(dictNew, "SameKeybLayout", m_strSameKeybLayout);
			m_strSampleEntry = TryGetEx(dictNew, "SampleEntry", m_strSampleEntry);
			m_strSave = TryGetEx(dictNew, "Save", m_strSave);
			m_strSaveBeforeCloseEntry = TryGetEx(dictNew, "SaveBeforeCloseEntry", m_strSaveBeforeCloseEntry);
			m_strSaveBeforeCloseQuestion = TryGetEx(dictNew, "SaveBeforeCloseQuestion", m_strSaveBeforeCloseQuestion);
			m_strSaveBeforeCloseTitle = TryGetEx(dictNew, "SaveBeforeCloseTitle", m_strSaveBeforeCloseTitle);
			m_strSaveCmd = TryGetEx(dictNew, "SaveCmd", m_strSaveCmd);
			m_strSaveDatabase = TryGetEx(dictNew, "SaveDatabase", m_strSaveDatabase);
			m_strSaveDatabaseStc = TryGetEx(dictNew, "SaveDatabaseStc", m_strSaveDatabaseStc);
			m_strSavedDatabaseFile = TryGetEx(dictNew, "SavedDatabaseFile", m_strSavedDatabaseFile);
			m_strSaveForceSync = TryGetEx(dictNew, "SaveForceSync", m_strSaveForceSync);
			m_strSavingDatabase = TryGetEx(dictNew, "SavingDatabase", m_strSavingDatabase);
			m_strSavingDatabaseFile = TryGetEx(dictNew, "SavingDatabaseFile", m_strSavingDatabaseFile);
			m_strSavingPost = TryGetEx(dictNew, "SavingPost", m_strSavingPost);
			m_strSavingPre = TryGetEx(dictNew, "SavingPre", m_strSavingPre);
			m_strScheme = TryGetEx(dictNew, "Scheme", m_strScheme);
			m_strSearch = TryGetEx(dictNew, "Search", m_strSearch);
			m_strSearchDesc = TryGetEx(dictNew, "SearchDesc", m_strSearchDesc);
			m_strSearchEntriesFound = TryGetEx(dictNew, "SearchEntriesFound", m_strSearchEntriesFound);
			m_strSearchEntriesFound1 = TryGetEx(dictNew, "SearchEntriesFound1", m_strSearchEntriesFound1);
			m_strSearchGroupName = TryGetEx(dictNew, "SearchGroupName", m_strSearchGroupName);
			m_strSearchingOp = TryGetEx(dictNew, "SearchingOp", m_strSearchingOp);
			m_strSearchKeyFiles = TryGetEx(dictNew, "SearchKeyFiles", m_strSearchKeyFiles);
			m_strSearchKeyFilesAlsoOnRemovable = TryGetEx(dictNew, "SearchKeyFilesAlsoOnRemovable", m_strSearchKeyFilesAlsoOnRemovable);
			m_strSearchQuickPrompt = TryGetEx(dictNew, "SearchQuickPrompt", m_strSearchQuickPrompt);
			m_strSearchResultsInSeparator = TryGetEx(dictNew, "SearchResultsInSeparator", m_strSearchResultsInSeparator);
			m_strSearchTitle = TryGetEx(dictNew, "SearchTitle", m_strSearchTitle);
			m_strSecDeskFileDialogHint = TryGetEx(dictNew, "SecDeskFileDialogHint", m_strSecDeskFileDialogHint);
			m_strSecDeskOtherSwitched = TryGetEx(dictNew, "SecDeskOtherSwitched", m_strSecDeskOtherSwitched);
			m_strSecDeskPlaySound = TryGetEx(dictNew, "SecDeskPlaySound", m_strSecDeskPlaySound);
			m_strSecDeskSwitchBack = TryGetEx(dictNew, "SecDeskSwitchBack", m_strSecDeskSwitchBack);
			m_strSelectAll = TryGetEx(dictNew, "SelectAll", m_strSelectAll);
			m_strSelectColor = TryGetEx(dictNew, "SelectColor", m_strSelectColor);
			m_strSelectDifferentGroup = TryGetEx(dictNew, "SelectDifferentGroup", m_strSelectDifferentGroup);
			m_strSelectedColumn = TryGetEx(dictNew, "SelectedColumn", m_strSelectedColumn);
			m_strSelectedLower = TryGetEx(dictNew, "SelectedLower", m_strSelectedLower);
			m_strSelectFile = TryGetEx(dictNew, "SelectFile", m_strSelectFile);
			m_strSelectIcon = TryGetEx(dictNew, "SelectIcon", m_strSelectIcon);
			m_strSelectLanguage = TryGetEx(dictNew, "SelectLanguage", m_strSelectLanguage);
			m_strSelectLanguageDesc = TryGetEx(dictNew, "SelectLanguageDesc", m_strSelectLanguageDesc);
			m_strSelfTestFailed = TryGetEx(dictNew, "SelfTestFailed", m_strSelfTestFailed);
			m_strSendingNoun = TryGetEx(dictNew, "SendingNoun", m_strSendingNoun);
			m_strSeparator = TryGetEx(dictNew, "Separator", m_strSeparator);
			m_strSequence = TryGetEx(dictNew, "Sequence", m_strSequence);
			m_strShowAdvAutoTypeCommands = TryGetEx(dictNew, "ShowAdvAutoTypeCommands", m_strShowAdvAutoTypeCommands);
			m_strShowDerefData = TryGetEx(dictNew, "ShowDerefData", m_strShowDerefData);
			m_strShowDerefDataAndRefs = TryGetEx(dictNew, "ShowDerefDataAndRefs", m_strShowDerefDataAndRefs);
			m_strShowDerefDataAsync = TryGetEx(dictNew, "ShowDerefDataAsync", m_strShowDerefDataAsync);
			m_strShowEntries = TryGetEx(dictNew, "ShowEntries", m_strShowEntries);
			m_strShowEntriesByTag = TryGetEx(dictNew, "ShowEntriesByTag", m_strShowEntriesByTag);
			m_strShowFullPathInTitleBar = TryGetEx(dictNew, "ShowFullPathInTitleBar", m_strShowFullPathInTitleBar);
			m_strShowIn = TryGetEx(dictNew, "ShowIn", m_strShowIn);
			m_strShowMessageBox = TryGetEx(dictNew, "ShowMessageBox", m_strShowMessageBox);
			m_strShowTrayOnlyIfTrayed = TryGetEx(dictNew, "ShowTrayOnlyIfTrayed", m_strShowTrayOnlyIfTrayed);
			m_strSize = TryGetEx(dictNew, "Size", m_strSize);
			m_strSlow = TryGetEx(dictNew, "Slow", m_strSlow);
			m_strSoonToExpireEntries = TryGetEx(dictNew, "SoonToExpireEntries", m_strSoonToExpireEntries);
			m_strSpecialKeys = TryGetEx(dictNew, "SpecialKeys", m_strSpecialKeys);
			m_strSslCertsAcceptInvalid = TryGetEx(dictNew, "SslCertsAcceptInvalid", m_strSslCertsAcceptInvalid);
			m_strStandardExpireSelect = TryGetEx(dictNew, "StandardExpireSelect", m_strStandardExpireSelect);
			m_strStandardFields = TryGetEx(dictNew, "StandardFields", m_strStandardFields);
			m_strStartAndExit = TryGetEx(dictNew, "StartAndExit", m_strStartAndExit);
			m_strStartMinimizedAndLocked = TryGetEx(dictNew, "StartMinimizedAndLocked", m_strStartMinimizedAndLocked);
			m_strStartsWith = TryGetEx(dictNew, "StartsWith", m_strStartsWith);
			m_strStatus = TryGetEx(dictNew, "Status", m_strStatus);
			m_strStrikeout = TryGetEx(dictNew, "Strikeout", m_strStrikeout);
			m_strString = TryGetEx(dictNew, "String", m_strString);
			m_strSuccess = TryGetEx(dictNew, "Success", m_strSuccess);
			m_strSyncFailed = TryGetEx(dictNew, "SyncFailed", m_strSyncFailed);
			m_strSynchronize = TryGetEx(dictNew, "Synchronize", m_strSynchronize);
			m_strSynchronizeStc = TryGetEx(dictNew, "SynchronizeStc", m_strSynchronizeStc);
			m_strSynchronizing = TryGetEx(dictNew, "Synchronizing", m_strSynchronizing);
			m_strSynchronizingHint = TryGetEx(dictNew, "SynchronizingHint", m_strSynchronizingHint);
			m_strSyncSuccess = TryGetEx(dictNew, "SyncSuccess", m_strSyncSuccess);
			m_strSystem = TryGetEx(dictNew, "System", m_strSystem);
			m_strSystemCodePage = TryGetEx(dictNew, "SystemCodePage", m_strSystemCodePage);
			m_strTag = TryGetEx(dictNew, "Tag", m_strTag);
			m_strTagAddNew = TryGetEx(dictNew, "TagAddNew", m_strTagAddNew);
			m_strTagNew = TryGetEx(dictNew, "TagNew", m_strTagNew);
			m_strTags = TryGetEx(dictNew, "Tags", m_strTags);
			m_strTagsNotFound = TryGetEx(dictNew, "TagsNotFound", m_strTagsNotFound);
			m_strTanExpiresOnUse = TryGetEx(dictNew, "TanExpiresOnUse", m_strTanExpiresOnUse);
			m_strTanWizard = TryGetEx(dictNew, "TanWizard", m_strTanWizard);
			m_strTanWizardDesc = TryGetEx(dictNew, "TanWizardDesc", m_strTanWizardDesc);
			m_strTargetWindow = TryGetEx(dictNew, "TargetWindow", m_strTargetWindow);
			m_strTemplatesNotFound = TryGetEx(dictNew, "TemplatesNotFound", m_strTemplatesNotFound);
			m_strTestSuccess = TryGetEx(dictNew, "TestSuccess", m_strTestSuccess);
			m_strText = TryGetEx(dictNew, "Text", m_strText);
			m_strTextColor = TryGetEx(dictNew, "TextColor", m_strTextColor);
			m_strTextViewer = TryGetEx(dictNew, "TextViewer", m_strTextViewer);
			m_strTimeSpan = TryGetEx(dictNew, "TimeSpan", m_strTimeSpan);
			m_strTitle = TryGetEx(dictNew, "Title", m_strTitle);
			m_strToggle = TryGetEx(dictNew, "Toggle", m_strToggle);
			m_strTogglePasswordAsterisks = TryGetEx(dictNew, "TogglePasswordAsterisks", m_strTogglePasswordAsterisks);
			m_strToolBarNew = TryGetEx(dictNew, "ToolBarNew", m_strToolBarNew);
			m_strToolBarOpen = TryGetEx(dictNew, "ToolBarOpen", m_strToolBarOpen);
			m_strToolBarSaveAll = TryGetEx(dictNew, "ToolBarSaveAll", m_strToolBarSaveAll);
			m_strTooManyFilesError = TryGetEx(dictNew, "TooManyFilesError", m_strTooManyFilesError);
			m_strTransformTime = TryGetEx(dictNew, "TransformTime", m_strTransformTime);
			m_strTrigger = TryGetEx(dictNew, "Trigger", m_strTrigger);
			m_strTriggerActionTypeUnknown = TryGetEx(dictNew, "TriggerActionTypeUnknown", m_strTriggerActionTypeUnknown);
			m_strTriggerAdd = TryGetEx(dictNew, "TriggerAdd", m_strTriggerAdd);
			m_strTriggerAddDesc = TryGetEx(dictNew, "TriggerAddDesc", m_strTriggerAddDesc);
			m_strTriggerConditionTypeUnknown = TryGetEx(dictNew, "TriggerConditionTypeUnknown", m_strTriggerConditionTypeUnknown);
			m_strTriggerEdit = TryGetEx(dictNew, "TriggerEdit", m_strTriggerEdit);
			m_strTriggerEditDesc = TryGetEx(dictNew, "TriggerEditDesc", m_strTriggerEditDesc);
			m_strTriggerEventTypeUnknown = TryGetEx(dictNew, "TriggerEventTypeUnknown", m_strTriggerEventTypeUnknown);
			m_strTriggerExecutionFailed = TryGetEx(dictNew, "TriggerExecutionFailed", m_strTriggerExecutionFailed);
			m_strTriggering = TryGetEx(dictNew, "Triggering", m_strTriggering);
			m_strTriggerName = TryGetEx(dictNew, "TriggerName", m_strTriggerName);
			m_strTriggers = TryGetEx(dictNew, "Triggers", m_strTriggers);
			m_strTriggersDesc = TryGetEx(dictNew, "TriggersDesc", m_strTriggersDesc);
			m_strTriggersEdit = TryGetEx(dictNew, "TriggersEdit", m_strTriggersEdit);
			m_strTriggerStateChange = TryGetEx(dictNew, "TriggerStateChange", m_strTriggerStateChange);
			m_strTypeUnknownHint = TryGetEx(dictNew, "TypeUnknownHint", m_strTypeUnknownHint);
			m_strUnderline = TryGetEx(dictNew, "Underline", m_strUnderline);
			m_strUndo = TryGetEx(dictNew, "Undo", m_strUndo);
			m_strUnhidePasswords = TryGetEx(dictNew, "UnhidePasswords", m_strUnhidePasswords);
			m_strUnhidePasswordsDesc = TryGetEx(dictNew, "UnhidePasswordsDesc", m_strUnhidePasswordsDesc);
			m_strUnhideSourceCharactersToo = TryGetEx(dictNew, "UnhideSourceCharactersToo", m_strUnhideSourceCharactersToo);
			m_strUnknown = TryGetEx(dictNew, "Unknown", m_strUnknown);
			m_strUnknownError = TryGetEx(dictNew, "UnknownError", m_strUnknownError);
			m_strUnsupportedByMono = TryGetEx(dictNew, "UnsupportedByMono", m_strUnsupportedByMono);
			m_strUpdateCheck = TryGetEx(dictNew, "UpdateCheck", m_strUpdateCheck);
			m_strUpdateCheckEnableQ = TryGetEx(dictNew, "UpdateCheckEnableQ", m_strUpdateCheckEnableQ);
			m_strUpdateCheckFailedNoDl = TryGetEx(dictNew, "UpdateCheckFailedNoDl", m_strUpdateCheckFailedNoDl);
			m_strUpdateCheckInfo = TryGetEx(dictNew, "UpdateCheckInfo", m_strUpdateCheckInfo);
			m_strUpdateCheckInfoPriv = TryGetEx(dictNew, "UpdateCheckInfoPriv", m_strUpdateCheckInfoPriv);
			m_strUpdateCheckInfoRes = TryGetEx(dictNew, "UpdateCheckInfoRes", m_strUpdateCheckInfoRes);
			m_strUpdateCheckResults = TryGetEx(dictNew, "UpdateCheckResults", m_strUpdateCheckResults);
			m_strUpdatedUIState = TryGetEx(dictNew, "UpdatedUIState", m_strUpdatedUIState);
			m_strUpToDate = TryGetEx(dictNew, "UpToDate", m_strUpToDate);
			m_strUrl = TryGetEx(dictNew, "Url", m_strUrl);
			m_strUrlOpenDesc = TryGetEx(dictNew, "UrlOpenDesc", m_strUrlOpenDesc);
			m_strUrlOpenTitle = TryGetEx(dictNew, "UrlOpenTitle", m_strUrlOpenTitle);
			m_strUrlOverride = TryGetEx(dictNew, "UrlOverride", m_strUrlOverride);
			m_strUrlOverrides = TryGetEx(dictNew, "UrlOverrides", m_strUrlOverrides);
			m_strUrlSaveDesc = TryGetEx(dictNew, "UrlSaveDesc", m_strUrlSaveDesc);
			m_strUrlSaveTitle = TryGetEx(dictNew, "UrlSaveTitle", m_strUrlSaveTitle);
			m_strUseFileLocks = TryGetEx(dictNew, "UseFileLocks", m_strUseFileLocks);
			m_strUseTransactedDatabaseWrites = TryGetEx(dictNew, "UseTransactedDatabaseWrites", m_strUseTransactedDatabaseWrites);
			m_strUserAccount = TryGetEx(dictNew, "UserAccount", m_strUserAccount);
			m_strUserName = TryGetEx(dictNew, "UserName", m_strUserName);
			m_strUserNamePrompt = TryGetEx(dictNew, "UserNamePrompt", m_strUserNamePrompt);
			m_strUuid = TryGetEx(dictNew, "Uuid", m_strUuid);
			m_strUuidDupInDb = TryGetEx(dictNew, "UuidDupInDb", m_strUuidDupInDb);
			m_strUuidFix = TryGetEx(dictNew, "UuidFix", m_strUuidFix);
			m_strValidationFailed = TryGetEx(dictNew, "ValidationFailed", m_strValidationFailed);
			m_strValue = TryGetEx(dictNew, "Value", m_strValue);
			m_strVerb = TryGetEx(dictNew, "Verb", m_strVerb);
			m_strVerifyWrittenFileAfterSave = TryGetEx(dictNew, "VerifyWrittenFileAfterSave", m_strVerifyWrittenFileAfterSave);
			m_strVersion = TryGetEx(dictNew, "Version", m_strVersion);
			m_strView = TryGetEx(dictNew, "View", m_strView);
			m_strViewCmd = TryGetEx(dictNew, "ViewCmd", m_strViewCmd);
			m_strViewEntry = TryGetEx(dictNew, "ViewEntry", m_strViewEntry);
			m_strViewEntryDesc = TryGetEx(dictNew, "ViewEntryDesc", m_strViewEntryDesc);
			m_strWait = TryGetEx(dictNew, "Wait", m_strWait);
			m_strWaitForExit = TryGetEx(dictNew, "WaitForExit", m_strWaitForExit);
			m_strWarning = TryGetEx(dictNew, "Warning", m_strWarning);
			m_strWarnings = TryGetEx(dictNew, "Warnings", m_strWarnings);
			m_strWebBrowser = TryGetEx(dictNew, "WebBrowser", m_strWebBrowser);
			m_strWebSiteLogin = TryGetEx(dictNew, "WebSiteLogin", m_strWebSiteLogin);
			m_strWebSites = TryGetEx(dictNew, "WebSites", m_strWebSites);
			m_strWindowsFavorites = TryGetEx(dictNew, "WindowsFavorites", m_strWindowsFavorites);
			m_strWindowsOS = TryGetEx(dictNew, "WindowsOS", m_strWindowsOS);
			m_strWindowStyle = TryGetEx(dictNew, "WindowStyle", m_strWindowStyle);
			m_strWithoutContext = TryGetEx(dictNew, "WithoutContext", m_strWithoutContext);
			m_strWorkspaceLocked = TryGetEx(dictNew, "WorkspaceLocked", m_strWorkspaceLocked);
			m_strXmlModInvalid = TryGetEx(dictNew, "XmlModInvalid", m_strXmlModInvalid);
			m_strXmlReplace = TryGetEx(dictNew, "XmlReplace", m_strXmlReplace);
			m_strXmlReplaceDesc = TryGetEx(dictNew, "XmlReplaceDesc", m_strXmlReplaceDesc);
			m_strXslExporter = TryGetEx(dictNew, "XslExporter", m_strXslExporter);
			m_strXslFileType = TryGetEx(dictNew, "XslFileType", m_strXslFileType);
			m_strXslSelectFile = TryGetEx(dictNew, "XslSelectFile", m_strXslSelectFile);
			m_strXslStylesheetsKdbx = TryGetEx(dictNew, "XslStylesheetsKdbx", m_strXslStylesheetsKdbx);
			m_strYes = TryGetEx(dictNew, "Yes", m_strYes);
			m_strYesCmd = TryGetEx(dictNew, "YesCmd", m_strYesCmd);
			m_strZoom = TryGetEx(dictNew, "Zoom", m_strZoom);
		}

		private static readonly string[] m_vKeyNames = {
			"Abort",
			"AbortTrigger",
			"Action",
			"ActivateDatabaseTab",
			"Active",
			"AddEntry",
			"AddEntryDesc",
			"AddGroup",
			"AddGroupDesc",
			"AddStringField",
			"AddStringFieldDesc",
			"Advanced",
			"AfterDatabaseOpen",
			"AlignCenter",
			"AlignLeft",
			"AlignRight",
			"All",
			"AllEntriesTitle",
			"AllFiles",
			"AllSupportedFiles",
			"AlternatingBgColors",
			"Application",
			"ApplicationExit",
			"ApplicationInitialized",
			"ApplicationStarted",
			"Arguments",
			"Ascending",
			"AskContinue",
			"Asterisks",
			"AttachedExistsAlready",
			"AttachExtDiscardDesc",
			"AttachExtImportDesc",
			"AttachExtOpened",
			"AttachExtOpenedPost",
			"AttachExtSecDel",
			"AttachFailed",
			"AttachFiles",
			"Attachments",
			"AttachmentSave",
			"AttachmentsSave",
			"AttachNewRename",
			"AttachNewRenameRemarks0",
			"AttachNewRenameRemarks1",
			"AttachNewRenameRemarks2",
			"Author",
			"Auto",
			"AutoCreateNew",
			"AutoGeneratedPasswordSettings",
			"AutoRememberOpenLastFile",
			"AutoSaveAtExit",
			"AutoShowExpiredEntries",
			"AutoShowSoonToExpireEntries",
			"AutoType",
			"AutoTypeAlwaysShowSelDialog",
			"AutoTypeCancelOnTitleChange",
			"AutoTypeCancelOnWindowChange",
			"AutoTypeEntrySelection",
			"AutoTypeEntrySelectionDescLong2",
			"AutoTypeEntrySelectionDescShort",
			"AutoTypeGlobalHint",
			"AutoTypeMatchByTagInTitle",
			"AutoTypeMatchByTitle",
			"AutoTypeMatchByUrlHostInTitle",
			"AutoTypeMatchByUrlInTitle",
			"AutoTypeObfuscationHint",
			"AutoTypePrependInitSeqForIE",
			"AutoTypeReleaseAltWithKeyPress",
			"AutoTypeSelectedNoEntry",
			"AutoTypeSequenceInvalid",
			"AutoTypeUnknownPlaceholder",
			"AutoTypeXDoToolRequired",
			"AutoTypeXDoToolRequiredGlobalVer",
			"Available",
			"AvailableLanguages",
			"BackgroundColor",
			"BinaryNoConv",
			"Bits",
			"BitsStc",
			"Bold",
			"Browser",
			"BuiltIn",
			"Button",
			"ButtonBack",
			"ButtonDefault",
			"ButtonFinish",
			"ButtonNext",
			"Buttons",
			"Cancel",
			"CannotMoveEntriesBcsGroup",
			"ChangeMasterKey",
			"ChangeMasterKeyIntroShort",
			"CharsAbbr",
			"CharsStc",
			"CheckForUpdAtStart",
			"CheckingForUpd",
			"ClassicAdj",
			"ClearKeyCmdLineParams",
			"ClearMru",
			"Clipboard",
			"ClipboardClearInSeconds",
			"ClipboardClearOnExit",
			"ClipboardDataCopied",
			"ClipboardViewerIgnoreFormat",
			"CloseActiveDatabase",
			"CloseButton",
			"CloseButtonMinimizes",
			"ClosingDatabaseFile",
			"Column",
			"Columns",
			"Comments",
			"Company",
			"Comparison",
			"Component",
			"Condition",
			"ConfigAffectAdmin",
			"ConfigAffectUser",
			"ConfigSaveFailed",
			"ConfigureAutoType",
			"ConfigureAutoTypeDesc",
			"ConfigureAutoTypeItem",
			"ConfigureAutoTypeItemDesc",
			"ConfigureColumns",
			"ConfigureColumnsDesc",
			"ConfigureKeystrokeSeq",
			"ConfigureKeystrokeSeqDesc",
			"ConfigureOnNewDatabase",
			"Contact",
			"ContainsOp",
			"CopiedEntryData",
			"Copy",
			"CopyAll",
			"CopyLink",
			"CopyOfItem",
			"CopyPasswordFull",
			"CopyPasswordMenu",
			"CopyTanMenu",
			"CopyUrlsInsteadOfOpening",
			"CopyUrlToClipboard",
			"CopyUserFull",
			"CopyWholeEntries",
			"CorruptionByExt",
			"Count",
			"CreateMasterKey",
			"CreateNewDatabase",
			"CreateNewIDs",
			"CreationTime",
			"CredSaveAll",
			"CredSaveNone",
			"CredSaveUserOnly",
			"CredSpecifyDifferent",
			"CsprojCountError",
			"CsvTextFile",
			"CtrlAltAConflict",
			"CtrlAltAConflictHint",
			"CurrentStyle",
			"Custom",
			"CustomFields",
			"CustomizableHtml",
			"CustomTbButtonAdd",
			"CustomTbButtonClicked",
			"CustomTbButtonRemove",
			"Cut",
			"Data",
			"Database",
			"DatabaseDescPrompt",
			"DatabaseHasUnsavedChanges",
			"DatabaseMaintenance",
			"DatabaseMaintenanceDesc",
			"DatabaseModifiedNoDot",
			"DatabaseNamePrompt",
			"DatabaseSettings",
			"DatabaseSettingsDesc",
			"DataEditor",
			"DataViewer",
			"DbMntncResults",
			"DbNoModBy",
			"Default",
			"Delete",
			"DeleteCmd",
			"DeleteEntriesTitle",
			"DeleteEntriesTitleSingle",
			"DeleteEntriesQuestion",
			"DeleteEntriesQuestionSingle",
			"DeleteGroupTitle",
			"DeleteGroupInfo",
			"DeleteGroupQuestion",
			"Descending",
			"Description",
			"Details",
			"DialogNoShowAgain",
			"Dialogs",
			"Disable",
			"Disabled",
			"DisableSaveIfNotModified",
			"DiscardChangesCmd",
			"DocumentationHint",
			"DragDrop",
			"DropToBackOnCopy",
			"DuplicateStringFieldName",
			"EditCmd",
			"EditEntry",
			"EditEntryDesc",
			"EditGroup",
			"EditGroupDesc",
			"EditStringField",
			"EditStringFieldDesc",
			"EMail",
			"Empty",
			"EmptyMasterPw",
			"EmptyMasterPwHint",
			"EmptyMasterPwQuestion",
			"EmptyRecycleBinQuestion",
			"Enable",
			"Enabled",
			"Encoding",
			"EncodingFail",
			"EndsWith",
			"EnterCompositeKey",
			"EnterCurrentCompositeKey",
			"EntropyDesc",
			"EntropyTitle",
			"Entry",
			"EntryList",
			"EntryListAutoResizeColumns",
			"EntrySelGroupSel",
			"EnvironmentVariable",
			"EqualsOp",
			"Error",
			"ErrorCode",
			"Errors",
			"EscMinimizesToTray",
			"Event",
			"ExecuteCmdLineUrl",
			"ExitInsteadOfLockingAfterTime",
			"ExitInsteadOfLockingAlways",
			"ExpiredEntries",
			"ExpiredEntriesCanMatch",
			"ExpiryTime",
			"ExpiryTimeDateOnly",
			"Export",
			"ExportFileDesc",
			"ExportFileTitle",
			"ExportHtml",
			"ExportHtmlDesc",
			"ExportingStatusMsg",
			"ExportStc",
			"ExportToPrompt",
			"External",
			"ExternalApp",
			"FatalError",
			"Feature",
			"Field",
			"FieldName",
			"FieldNameExistsAlready",
			"FieldNameInvalid",
			"FieldNamePrompt",
			"FieldRefInvalidChars",
			"FieldRefMultiMatch",
			"FieldRefMultiMatchHint",
			"FieldValue",
			"File",
			"FileChanged",
			"FileChangedOverwrite",
			"FileChangedSync",
			"FileExists",
			"FileExistsAlready",
			"FileExtInstallFailed",
			"FileExtInstallSuccess",
			"FileExtName",
			"FileFormatStc",
			"FileLockedBy",
			"FileLockedWarning",
			"FileNameContainsSemicolonError",
			"FileNotFoundError",
			"FileOrUrl",
			"Files",
			"FileSaveQClosing",
			"FileSaveQExiting",
			"FileSaveQLocking",
			"FileSaveQOpCancel",
			"FileSaveQOpCancelClosing",
			"FileSaveQOpCancelExiting",
			"FileSaveQOpCancelLocking",
			"FileSaveQOpNoClosing",
			"FileSaveQOpNoExiting",
			"FileSaveQOpNoLocking",
			"FileSaveQOpYesClosing",
			"FileSaveQOpYesExiting",
			"FileSaveQOpYesLocking",
			"FileTxExtra",
			"FileVerifyHashFail",
			"FileVerifyHashFailRec",
			"Filter",
			"Find",
			"FocusQuickFindOnRestore",
			"FocusQuickFindOnUntray",
			"FocusResultsAfterQuickSearch",
			"Folder",
			"Font",
			"FontDefault",
			"ForceSystemFontUnix",
			"Format",
			"FormatNoDatabaseDesc",
			"FormatNoDatabaseName",
			"FormatNoRootEntries",
			"FormatNoSubGroupsInRoot",
			"FormatOnlyOneAttachment",
			"General",
			"Generate",
			"GenerateCount",
			"GenerateCountDesc",
			"GenerateCountLongDesc",
			"GeneratedPasswordSamples",
			"GeneratePassword",
			"GenericCsvImporter",
			"GenProfileRemove",
			"GenProfileRemoveDesc",
			"GenProfileSave",
			"GenProfileSaveDesc",
			"GenProfileSaveDescLong",
			"GenPwAccept",
			"GenPwBasedOnPrevious",
			"GenPwSprVariant",
			"Gradient",
			"Group",
			"GroupCannotStoreEntries",
			"GroupsSkipped",
			"GroupsSkipped1",
			"HelpSourceNoLocalOption",
			"HelpSourceSelection",
			"HelpSourceSelectionDesc",
			"HexKeyEx",
			"HexViewer",
			"Hidden",
			"HideCloseDatabaseTb",
			"HideUsingAsterisks",
			"History",
			"Homebanking",
			"Host",
			"HotKeyAltOnly",
			"HotKeyAltOnlyHint",
			"HotKeyAltOnlyQuestion",
			"Icon",
			"Id",
			"Ignore",
			"ImageFormatFeatureUnsupported",
			"ImageViewer",
			"Import",
			"ImportBehavior",
			"ImportBehaviorDesc",
			"ImportFailed",
			"ImportFileDesc",
			"ImportFilesPrompt",
			"ImportFileTitle",
			"ImportFinished",
			"ImportingStatusMsg",
			"ImportMustRead",
			"ImportMustReadQuestion",
			"ImportStc",
			"IncompatibleEnv",
			"IncompatibleWithSorting",
			"InheritSettingFromParent",
			"Installed",
			"InterleavedKeySending",
			"InternalEditor",
			"InternalViewer",
			"Internet",
			"InvalidKey",
			"InvalidUrl",
			"InvalidUserPassword",
			"IOConnection",
			"IOConnectionLong",
			"Italic",
			"Iterations",
			"KdbKeePassLibC",
			"KdbWUA",
			"KdbxFiles",
			"KdfAdjust",
			"KdfParams1Sec",
			"KeePassLibCLong",
			"KeePassLibCNotFound",
			"KeePassLibCNotWindows",
			"KeePassLibCNotWindowsHint",
			"KeepExisting",
			"KeyboardKeyAlt",
			"KeyboardKeyCtrl",
			"KeyboardKeyCtrlLeft",
			"KeyboardKeyEsc",
			"KeyboardKeyModifiers",
			"KeyboardKeyReturn",
			"KeyboardKeyShift",
			"KeyboardKeyShiftLeft",
			"KeyChanged",
			"KeyFile",
			"KeyFileCreate",
			"KeyFileError",
			"KeyFiles",
			"KeyFileSelect",
			"KeyFileUseExisting",
			"KeyProvIncmpWithSD",
			"KeyProvIncmpWithSDHint",
			"LanguageSelected",
			"LastAccessTime",
			"LastModificationTime",
			"LimitSingleInstance",
			"Locked",
			"LockMenuLock",
			"LockMenuUnlock",
			"LockOnMinimizeTaskbar",
			"LockOnMinimizeTray",
			"LockOnRemoteControlChange",
			"LockOnSessionSwitch",
			"LockOnSuspend",
			"MainInstruction",
			"MainWindow",
			"MasterKeyChanged",
			"MasterKeyChangedSavePrompt",
			"MasterKeyChangeForce",
			"MasterKeyChangeInfo",
			"MasterKeyChangeQ",
			"MasterKeyChangeRec",
			"MasterKeyOnSecureDesktop",
			"MasterPasswordMinLengthFailed",
			"MasterPasswordMinQualityFailed",
			"Maximized",
			"Memory",
			"Menus",
			"Method",
			"MinimizeAfterCopy",
			"MinimizeAfterLocking",
			"MinimizeAfterOpeningDatabase",
			"Minimized",
			"MinimizeToTray",
			"More",
			"MoreEntries",
			"Name",
			"NativeLibUse",
			"Navigation",
			"Network",
			"NeverExpires",
			"New",
			"NewDatabase",
			"NewDatabaseFileName",
			"NewerNetRequired",
			"NewGroup",
			"NewLine",
			"NewState",
			"NewVersionAvailable",
			"No",
			"NoCmd",
			"NoEncNoCompress",
			"NoFileAccessRead",
			"NoKeyFileSpecifiedMeta",
			"NoKeyRepeat",
			"None",
			"Normal",
			"NoSort",
			"Not",
			"NotRecommended",
			"Notes",
			"NotInstalled",
			"NoXslFile",
			"ObjectNotFound",
			"ObjectsDeleted",
			"Off",
			"OfLower",
			"Ok",
			"OldFormat",
			"On",
			"OpAborted",
			"OpenCmd",
			"OpenDatabase",
			"OpenDatabaseFile",
			"OpenDatabaseFileStc",
			"Opened",
			"OpenedDatabaseFile",
			"OpeningDatabase",
			"OpenUrl",
			"OpenWith",
			"OptimizeForScreenReader",
			"Options",
			"OptionsDesc",
			"OtherPlaceholders",
			"OverridesBuiltIn",
			"OverridesCustom",
			"Overwrite",
			"OverwriteExisting",
			"OverwriteExistingFileQuestion",
			"OverwriteIfNewer",
			"OverwriteIfNewerAndApplyDel",
			"PackageInstallHint",
			"Parallelism",
			"ParamDescHelp",
			"Parameters",
			"Password",
			"PasswordLength",
			"PasswordManagers",
			"PasswordOptions",
			"PasswordOptionsDesc",
			"PasswordPrompt",
			"PasswordRepeatFailed",
			"PasswordRepeatHint",
			"Paste",
			"PerformAutoType",
			"PerformGlobalAutoType",
			"PerformSelectedAutoType",
			"PickCharacters",
			"PickCharactersDesc",
			"PickField",
			"PickFieldDesc",
			"PickIcon",
			"Plugin",
			"Plugin1x",
			"Plugin1xHint",
			"PluginCacheClearInfo",
			"PluginIncompatible",
			"PluginLoadFailed",
			"PluginOperatingSystemUnsupported",
			"PluginProvided",
			"Plugins",
			"PluginsCompilingAndLoading",
			"PluginsDesc",
			"PluginUpdateHint",
			"PolicyAutoTypeDesc",
			"PolicyAutoTypeWithoutContextDesc",
			"PolicyChangeMasterKey",
			"PolicyChangeMasterKeyNoKeyDesc",
			"PolicyClipboardDesc",
			"PolicyCopyWholeEntriesDesc",
			"PolicyDisallowed",
			"PolicyDragDropDesc",
			"PolicyExportDesc2",
			"PolicyExportNoKeyDesc",
			"PolicyImportDesc",
			"PolicyNewDatabaseDesc",
			"PolicyPluginsDesc",
			"PolicyPrintDesc",
			"PolicyPrintNoKeyDesc",
			"PolicyRequiredFlag",
			"PolicySaveDatabaseDesc",
			"PolicyTriggersEditDesc",
			"PreReleaseVersion",
			"Print",
			"PrintDesc",
			"Private",
			"Professional",
			"QuickSearchExclExpired",
			"QuickSearchInPwFields",
			"QuickSearchDerefData",
			"QuickSearchTb",
			"RandomMacAddress",
			"Ready",
			"Recommended",
			"RecommendedCmd",
			"RecycleBin",
			"RecycleBinCollapse",
			"RecycleEntryConfirm",
			"RecycleEntryConfirmSingle",
			"RecycleGroupConfirm",
			"RecycleShowConfirm",
			"Redo",
			"RememberHidingSettings",
			"RememberKeySources",
			"RememberWorkingDirectories",
			"RemoteHostReachable",
			"RepairCmd",
			"RepairMode",
			"RepairModeInt",
			"RepairModeQ",
			"RepairModeUse",
			"RepeatOnlyWhenHidden",
			"RestartKeePassQuestion",
			"Retry",
			"RetryCmd",
			"RootDirectory",
			"SameKeybLayout",
			"SampleEntry",
			"Save",
			"SaveBeforeCloseEntry",
			"SaveBeforeCloseQuestion",
			"SaveBeforeCloseTitle",
			"SaveCmd",
			"SaveDatabase",
			"SaveDatabaseStc",
			"SavedDatabaseFile",
			"SaveForceSync",
			"SavingDatabase",
			"SavingDatabaseFile",
			"SavingPost",
			"SavingPre",
			"Scheme",
			"Search",
			"SearchDesc",
			"SearchEntriesFound",
			"SearchEntriesFound1",
			"SearchGroupName",
			"SearchingOp",
			"SearchKeyFiles",
			"SearchKeyFilesAlsoOnRemovable",
			"SearchQuickPrompt",
			"SearchResultsInSeparator",
			"SearchTitle",
			"SecDeskFileDialogHint",
			"SecDeskOtherSwitched",
			"SecDeskPlaySound",
			"SecDeskSwitchBack",
			"SelectAll",
			"SelectColor",
			"SelectDifferentGroup",
			"SelectedColumn",
			"SelectedLower",
			"SelectFile",
			"SelectIcon",
			"SelectLanguage",
			"SelectLanguageDesc",
			"SelfTestFailed",
			"SendingNoun",
			"Separator",
			"Sequence",
			"ShowAdvAutoTypeCommands",
			"ShowDerefData",
			"ShowDerefDataAndRefs",
			"ShowDerefDataAsync",
			"ShowEntries",
			"ShowEntriesByTag",
			"ShowFullPathInTitleBar",
			"ShowIn",
			"ShowMessageBox",
			"ShowTrayOnlyIfTrayed",
			"Size",
			"Slow",
			"SoonToExpireEntries",
			"SpecialKeys",
			"SslCertsAcceptInvalid",
			"StandardExpireSelect",
			"StandardFields",
			"StartAndExit",
			"StartMinimizedAndLocked",
			"StartsWith",
			"Status",
			"Strikeout",
			"String",
			"Success",
			"SyncFailed",
			"Synchronize",
			"SynchronizeStc",
			"Synchronizing",
			"SynchronizingHint",
			"SyncSuccess",
			"System",
			"SystemCodePage",
			"Tag",
			"TagAddNew",
			"TagNew",
			"Tags",
			"TagsNotFound",
			"TanExpiresOnUse",
			"TanWizard",
			"TanWizardDesc",
			"TargetWindow",
			"TemplatesNotFound",
			"TestSuccess",
			"Text",
			"TextColor",
			"TextViewer",
			"TimeSpan",
			"Title",
			"Toggle",
			"TogglePasswordAsterisks",
			"ToolBarNew",
			"ToolBarOpen",
			"ToolBarSaveAll",
			"TooManyFilesError",
			"TransformTime",
			"Trigger",
			"TriggerActionTypeUnknown",
			"TriggerAdd",
			"TriggerAddDesc",
			"TriggerConditionTypeUnknown",
			"TriggerEdit",
			"TriggerEditDesc",
			"TriggerEventTypeUnknown",
			"TriggerExecutionFailed",
			"Triggering",
			"TriggerName",
			"Triggers",
			"TriggersDesc",
			"TriggersEdit",
			"TriggerStateChange",
			"TypeUnknownHint",
			"Underline",
			"Undo",
			"UnhidePasswords",
			"UnhidePasswordsDesc",
			"UnhideSourceCharactersToo",
			"Unknown",
			"UnknownError",
			"UnsupportedByMono",
			"UpdateCheck",
			"UpdateCheckEnableQ",
			"UpdateCheckFailedNoDl",
			"UpdateCheckInfo",
			"UpdateCheckInfoPriv",
			"UpdateCheckInfoRes",
			"UpdateCheckResults",
			"UpdatedUIState",
			"UpToDate",
			"Url",
			"UrlOpenDesc",
			"UrlOpenTitle",
			"UrlOverride",
			"UrlOverrides",
			"UrlSaveDesc",
			"UrlSaveTitle",
			"UseFileLocks",
			"UseTransactedDatabaseWrites",
			"UserAccount",
			"UserName",
			"UserNamePrompt",
			"Uuid",
			"UuidDupInDb",
			"UuidFix",
			"ValidationFailed",
			"Value",
			"Verb",
			"VerifyWrittenFileAfterSave",
			"Version",
			"View",
			"ViewCmd",
			"ViewEntry",
			"ViewEntryDesc",
			"Wait",
			"WaitForExit",
			"Warning",
			"Warnings",
			"WebBrowser",
			"WebSiteLogin",
			"WebSites",
			"WindowsFavorites",
			"WindowsOS",
			"WindowStyle",
			"WithoutContext",
			"WorkspaceLocked",
			"XmlModInvalid",
			"XmlReplace",
			"XmlReplaceDesc",
			"XslExporter",
			"XslFileType",
			"XslSelectFile",
			"XslStylesheetsKdbx",
			"Yes",
			"YesCmd",
			"Zoom"
		};

		public static string[] GetKeyNames()
		{
			return m_vKeyNames;
		}

		private static string m_strAbort =
			@"Abort";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Abort'.
		/// </summary>
		public static string Abort
		{
			get { return m_strAbort; }
		}

		private static string m_strAbortTrigger =
			@"Abort current trigger execution";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Abort current trigger execution'.
		/// </summary>
		public static string AbortTrigger
		{
			get { return m_strAbortTrigger; }
		}

		private static string m_strAction =
			@"Action";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Action'.
		/// </summary>
		public static string Action
		{
			get { return m_strAction; }
		}

		private static string m_strActivateDatabaseTab =
			@"Activate database (select tab)";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Activate database (select tab)'.
		/// </summary>
		public static string ActivateDatabaseTab
		{
			get { return m_strActivateDatabaseTab; }
		}

		private static string m_strActive =
			@"Active";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Active'.
		/// </summary>
		public static string Active
		{
			get { return m_strActive; }
		}

		private static string m_strAddEntry =
			@"Add Entry";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Add Entry'.
		/// </summary>
		public static string AddEntry
		{
			get { return m_strAddEntry; }
		}

		private static string m_strAddEntryDesc =
			@"Create a new entry.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Create a new entry.'.
		/// </summary>
		public static string AddEntryDesc
		{
			get { return m_strAddEntryDesc; }
		}

		private static string m_strAddGroup =
			@"Add Group";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Add Group'.
		/// </summary>
		public static string AddGroup
		{
			get { return m_strAddGroup; }
		}

		private static string m_strAddGroupDesc =
			@"Create a new entry group.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Create a new entry group.'.
		/// </summary>
		public static string AddGroupDesc
		{
			get { return m_strAddGroupDesc; }
		}

		private static string m_strAddStringField =
			@"Add Entry String Field";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Add Entry String Field'.
		/// </summary>
		public static string AddStringField
		{
			get { return m_strAddStringField; }
		}

		private static string m_strAddStringFieldDesc =
			@"Create a new string field for the current entry.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Create a new string field for the current entry.'.
		/// </summary>
		public static string AddStringFieldDesc
		{
			get { return m_strAddStringFieldDesc; }
		}

		private static string m_strAdvanced =
			@"Advanced";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Advanced'.
		/// </summary>
		public static string Advanced
		{
			get { return m_strAdvanced; }
		}

		private static string m_strAfterDatabaseOpen =
			@"After Opening a Database";
		/// <summary>
		/// Look up a localized string similar to
		/// 'After Opening a Database'.
		/// </summary>
		public static string AfterDatabaseOpen
		{
			get { return m_strAfterDatabaseOpen; }
		}

		private static string m_strAlignCenter =
			@"Align Center";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Align Center'.
		/// </summary>
		public static string AlignCenter
		{
			get { return m_strAlignCenter; }
		}

		private static string m_strAlignLeft =
			@"Align Left";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Align Left'.
		/// </summary>
		public static string AlignLeft
		{
			get { return m_strAlignLeft; }
		}

		private static string m_strAlignRight =
			@"Align Right";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Align Right'.
		/// </summary>
		public static string AlignRight
		{
			get { return m_strAlignRight; }
		}

		private static string m_strAll =
			@"All";
		/// <summary>
		/// Look up a localized string similar to
		/// 'All'.
		/// </summary>
		public static string All
		{
			get { return m_strAll; }
		}

		private static string m_strAllEntriesTitle =
			@"All Entries";
		/// <summary>
		/// Look up a localized string similar to
		/// 'All Entries'.
		/// </summary>
		public static string AllEntriesTitle
		{
			get { return m_strAllEntriesTitle; }
		}

		private static string m_strAllFiles =
			@"All Files";
		/// <summary>
		/// Look up a localized string similar to
		/// 'All Files'.
		/// </summary>
		public static string AllFiles
		{
			get { return m_strAllFiles; }
		}

		private static string m_strAllSupportedFiles =
			@"All Supported Files";
		/// <summary>
		/// Look up a localized string similar to
		/// 'All Supported Files'.
		/// </summary>
		public static string AllSupportedFiles
		{
			get { return m_strAllSupportedFiles; }
		}

		private static string m_strAlternatingBgColors =
			@"Use alternating item background colors";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Use alternating item background colors'.
		/// </summary>
		public static string AlternatingBgColors
		{
			get { return m_strAlternatingBgColors; }
		}

		private static string m_strApplication =
			@"Application";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Application'.
		/// </summary>
		public static string Application
		{
			get { return m_strApplication; }
		}

		private static string m_strApplicationExit =
			@"Application exit";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Application exit'.
		/// </summary>
		public static string ApplicationExit
		{
			get { return m_strApplicationExit; }
		}

		private static string m_strApplicationInitialized =
			@"Application initialized";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Application initialized'.
		/// </summary>
		public static string ApplicationInitialized
		{
			get { return m_strApplicationInitialized; }
		}

		private static string m_strApplicationStarted =
			@"Application started and ready";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Application started and ready'.
		/// </summary>
		public static string ApplicationStarted
		{
			get { return m_strApplicationStarted; }
		}

		private static string m_strArguments =
			@"Arguments";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Arguments'.
		/// </summary>
		public static string Arguments
		{
			get { return m_strArguments; }
		}

		private static string m_strAscending =
			@"&Ascending";
		/// <summary>
		/// Look up a localized string similar to
		/// '&amp;Ascending'.
		/// </summary>
		public static string Ascending
		{
			get { return m_strAscending; }
		}

		private static string m_strAskContinue =
			@"Do you want to continue?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Do you want to continue?'.
		/// </summary>
		public static string AskContinue
		{
			get { return m_strAskContinue; }
		}

		private static string m_strAsterisks =
			@"Asterisks";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Asterisks'.
		/// </summary>
		public static string Asterisks
		{
			get { return m_strAsterisks; }
		}

		private static string m_strAttachedExistsAlready =
			@"The following file has already been attached to the current entry:";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The following file has already been attached to the current entry:'.
		/// </summary>
		public static string AttachedExistsAlready
		{
			get { return m_strAttachedExistsAlready; }
		}

		private static string m_strAttachExtDiscardDesc =
			@"Discard any changes made to the temporary file and do not modify the current attachment.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Discard any changes made to the temporary file and do not modify the current attachment.'.
		/// </summary>
		public static string AttachExtDiscardDesc
		{
			get { return m_strAttachExtDiscardDesc; }
		}

		private static string m_strAttachExtImportDesc =
			@"Replace the attachment by the (modified) temporary file.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Replace the attachment by the (modified) temporary file.'.
		/// </summary>
		public static string AttachExtImportDesc
		{
			get { return m_strAttachExtImportDesc; }
		}

		private static string m_strAttachExtOpened =
			@"KeePass has extracted the attachment to a (EFS-encrypted) temporary file and opened it using an external application.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'KeePass has extracted the attachment to a (EFS-encrypted) temporary file and opened it using an external application.'.
		/// </summary>
		public static string AttachExtOpened
		{
			get { return m_strAttachExtOpened; }
		}

		private static string m_strAttachExtOpenedPost =
			@"After viewing/editing and closing the file in the external application, please choose how to continue";
		/// <summary>
		/// Look up a localized string similar to
		/// 'After viewing/editing and closing the file in the external application, please choose how to continue'.
		/// </summary>
		public static string AttachExtOpenedPost
		{
			get { return m_strAttachExtOpenedPost; }
		}

		private static string m_strAttachExtSecDel =
			@"In any case, KeePass will securely delete the temporary file afterwards.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'In any case, KeePass will securely delete the temporary file afterwards.'.
		/// </summary>
		public static string AttachExtSecDel
		{
			get { return m_strAttachExtSecDel; }
		}

		private static string m_strAttachFailed =
			@"Failed to attach file:";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Failed to attach file:'.
		/// </summary>
		public static string AttachFailed
		{
			get { return m_strAttachFailed; }
		}

		private static string m_strAttachFiles =
			@"Attach Files To Entry";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Attach Files To Entry'.
		/// </summary>
		public static string AttachFiles
		{
			get { return m_strAttachFiles; }
		}

		private static string m_strAttachments =
			@"Attachments";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Attachments'.
		/// </summary>
		public static string Attachments
		{
			get { return m_strAttachments; }
		}

		private static string m_strAttachmentSave =
			@"Save Attached File As";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Save Attached File As'.
		/// </summary>
		public static string AttachmentSave
		{
			get { return m_strAttachmentSave; }
		}

		private static string m_strAttachmentsSave =
			@"Save attached files to:";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Save attached files to:'.
		/// </summary>
		public static string AttachmentsSave
		{
			get { return m_strAttachmentsSave; }
		}

		private static string m_strAttachNewRename =
			@"Do you wish to rename the new file or overwrite the existing attached file?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Do you wish to rename the new file or overwrite the existing attached file?'.
		/// </summary>
		public static string AttachNewRename
		{
			get { return m_strAttachNewRename; }
		}

		private static string m_strAttachNewRenameRemarks0 =
			@"Click [Yes] to rename the new file.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Click [Yes] to rename the new file.'.
		/// </summary>
		public static string AttachNewRenameRemarks0
		{
			get { return m_strAttachNewRenameRemarks0; }
		}

		private static string m_strAttachNewRenameRemarks1 =
			@"Click [No] to overwrite the existing attached file.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Click [No] to overwrite the existing attached file.'.
		/// </summary>
		public static string AttachNewRenameRemarks1
		{
			get { return m_strAttachNewRenameRemarks1; }
		}

		private static string m_strAttachNewRenameRemarks2 =
			@"Click [Cancel] to skip this file.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Click [Cancel] to skip this file.'.
		/// </summary>
		public static string AttachNewRenameRemarks2
		{
			get { return m_strAttachNewRenameRemarks2; }
		}

		private static string m_strAuthor =
			@"Author";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Author'.
		/// </summary>
		public static string Author
		{
			get { return m_strAuthor; }
		}

		private static string m_strAuto =
			@"Auto";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Auto'.
		/// </summary>
		public static string Auto
		{
			get { return m_strAuto; }
		}

		private static string m_strAutoCreateNew =
			@"Automatically create new";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Automatically create new'.
		/// </summary>
		public static string AutoCreateNew
		{
			get { return m_strAutoCreateNew; }
		}

		private static string m_strAutoGeneratedPasswordSettings =
			@"Automatically generated passwords for new entries";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Automatically generated passwords for new entries'.
		/// </summary>
		public static string AutoGeneratedPasswordSettings
		{
			get { return m_strAutoGeneratedPasswordSettings; }
		}

		private static string m_strAutoRememberOpenLastFile =
			@"Remember and automatically open last used database on startup";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Remember and automatically open last used database on startup'.
		/// </summary>
		public static string AutoRememberOpenLastFile
		{
			get { return m_strAutoRememberOpenLastFile; }
		}

		private static string m_strAutoSaveAtExit =
			@"Automatically save when closing/locking the database";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Automatically save when closing/locking the database'.
		/// </summary>
		public static string AutoSaveAtExit
		{
			get { return m_strAutoSaveAtExit; }
		}

		private static string m_strAutoShowExpiredEntries =
			@"Show expired entries (if any)";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Show expired entries (if any)'.
		/// </summary>
		public static string AutoShowExpiredEntries
		{
			get { return m_strAutoShowExpiredEntries; }
		}

		private static string m_strAutoShowSoonToExpireEntries =
			@"Show entries that will expire soon (if any)";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Show entries that will expire soon (if any)'.
		/// </summary>
		public static string AutoShowSoonToExpireEntries
		{
			get { return m_strAutoShowSoonToExpireEntries; }
		}

		private static string m_strAutoType =
			@"Auto-Type";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Auto-Type'.
		/// </summary>
		public static string AutoType
		{
			get { return m_strAutoType; }
		}

		private static string m_strAutoTypeAlwaysShowSelDialog =
			@"Always show global auto-type entry selection dialog";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Always show global auto-type entry selection dialog'.
		/// </summary>
		public static string AutoTypeAlwaysShowSelDialog
		{
			get { return m_strAutoTypeAlwaysShowSelDialog; }
		}

		private static string m_strAutoTypeCancelOnTitleChange =
			@"Cancel auto-type when the target window title changes";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Cancel auto-type when the target window title changes'.
		/// </summary>
		public static string AutoTypeCancelOnTitleChange
		{
			get { return m_strAutoTypeCancelOnTitleChange; }
		}

		private static string m_strAutoTypeCancelOnWindowChange =
			@"Cancel auto-type when the target window changes";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Cancel auto-type when the target window changes'.
		/// </summary>
		public static string AutoTypeCancelOnWindowChange
		{
			get { return m_strAutoTypeCancelOnWindowChange; }
		}

		private static string m_strAutoTypeEntrySelection =
			@"Auto-Type Entry Selection";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Auto-Type Entry Selection'.
		/// </summary>
		public static string AutoTypeEntrySelection
		{
			get { return m_strAutoTypeEntrySelection; }
		}

		private static string m_strAutoTypeEntrySelectionDescLong2 =
			@"The following entries have been found for the currently active target window. Please select the entry that you want to auto-type into the target window.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The following entries have been found for the currently active target window. Please select the entry that you want to auto-type into the target window.'.
		/// </summary>
		public static string AutoTypeEntrySelectionDescLong2
		{
			get { return m_strAutoTypeEntrySelectionDescLong2; }
		}

		private static string m_strAutoTypeEntrySelectionDescShort =
			@"Multiple entries exist for the current window.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Multiple entries exist for the current window.'.
		/// </summary>
		public static string AutoTypeEntrySelectionDescShort
		{
			get { return m_strAutoTypeEntrySelectionDescShort; }
		}

		private static string m_strAutoTypeGlobalHint =
			@"If you want KeePass to search the active database for a matching entry and auto-type it, use the 'Global auto-type' hot key.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'If you want KeePass to search the active database for a matching entry and auto-type it, use the &#39;Global auto-type&#39; hot key.'.
		/// </summary>
		public static string AutoTypeGlobalHint
		{
			get { return m_strAutoTypeGlobalHint; }
		}

		private static string m_strAutoTypeMatchByTagInTitle =
			@"An entry matches if one of its tags is contained in the target window title";
		/// <summary>
		/// Look up a localized string similar to
		/// 'An entry matches if one of its tags is contained in the target window title'.
		/// </summary>
		public static string AutoTypeMatchByTagInTitle
		{
			get { return m_strAutoTypeMatchByTagInTitle; }
		}

		private static string m_strAutoTypeMatchByTitle =
			@"An entry matches if its title is contained in the target window title";
		/// <summary>
		/// Look up a localized string similar to
		/// 'An entry matches if its title is contained in the target window title'.
		/// </summary>
		public static string AutoTypeMatchByTitle
		{
			get { return m_strAutoTypeMatchByTitle; }
		}

		private static string m_strAutoTypeMatchByUrlHostInTitle =
			@"An entry matches if the host component of its URL is contained in the target window title";
		/// <summary>
		/// Look up a localized string similar to
		/// 'An entry matches if the host component of its URL is contained in the target window title'.
		/// </summary>
		public static string AutoTypeMatchByUrlHostInTitle
		{
			get { return m_strAutoTypeMatchByUrlHostInTitle; }
		}

		private static string m_strAutoTypeMatchByUrlInTitle =
			@"An entry matches if its URL is contained in the target window title";
		/// <summary>
		/// Look up a localized string similar to
		/// 'An entry matches if its URL is contained in the target window title'.
		/// </summary>
		public static string AutoTypeMatchByUrlInTitle
		{
			get { return m_strAutoTypeMatchByUrlInTitle; }
		}

		private static string m_strAutoTypeObfuscationHint =
			@"Auto-type obfuscation may not work with all windows.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Auto-type obfuscation may not work with all windows.'.
		/// </summary>
		public static string AutoTypeObfuscationHint
		{
			get { return m_strAutoTypeObfuscationHint; }
		}

		private static string m_strAutoTypePrependInitSeqForIE =
			@"Prepend special initialization sequence for Internet Explorer windows";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Prepend special initialization sequence for Internet Explorer windows'.
		/// </summary>
		public static string AutoTypePrependInitSeqForIE
		{
			get { return m_strAutoTypePrependInitSeqForIE; }
		}

		private static string m_strAutoTypeReleaseAltWithKeyPress =
			@"Send Alt keypress when only the Alt modifier is active";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Send Alt keypress when only the Alt modifier is active'.
		/// </summary>
		public static string AutoTypeReleaseAltWithKeyPress
		{
			get { return m_strAutoTypeReleaseAltWithKeyPress; }
		}

		private static string m_strAutoTypeSelectedNoEntry =
			@"To use the 'Auto-type selected entry' hot key, you first need to select an entry in KeePass.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'To use the &#39;Auto-type selected entry&#39; hot key, you first need to select an entry in KeePass.'.
		/// </summary>
		public static string AutoTypeSelectedNoEntry
		{
			get { return m_strAutoTypeSelectedNoEntry; }
		}

		private static string m_strAutoTypeSequenceInvalid =
			@"The specified auto-type sequence is invalid.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The specified auto-type sequence is invalid.'.
		/// </summary>
		public static string AutoTypeSequenceInvalid
		{
			get { return m_strAutoTypeSequenceInvalid; }
		}

		private static string m_strAutoTypeUnknownPlaceholder =
			@"The following auto-type placeholder or special key code is unknown/unsupported:";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The following auto-type placeholder or special key code is unknown/unsupported:'.
		/// </summary>
		public static string AutoTypeUnknownPlaceholder
		{
			get { return m_strAutoTypeUnknownPlaceholder; }
		}

		private static string m_strAutoTypeXDoToolRequired =
			@"The 'xdotool' utility/package is required for auto-type.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The &#39;xdotool&#39; utility/package is required for auto-type.'.
		/// </summary>
		public static string AutoTypeXDoToolRequired
		{
			get { return m_strAutoTypeXDoToolRequired; }
		}

		private static string m_strAutoTypeXDoToolRequiredGlobalVer =
			@"For global auto-type, the 'xdotool' utility/package is required (version 2.20100818.3004 or higher!).";
		/// <summary>
		/// Look up a localized string similar to
		/// 'For global auto-type, the &#39;xdotool&#39; utility/package is required (version 2.20100818.3004 or higher!).'.
		/// </summary>
		public static string AutoTypeXDoToolRequiredGlobalVer
		{
			get { return m_strAutoTypeXDoToolRequiredGlobalVer; }
		}

		private static string m_strAvailable =
			@"Available";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Available'.
		/// </summary>
		public static string Available
		{
			get { return m_strAvailable; }
		}

		private static string m_strAvailableLanguages =
			@"Available Languages";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Available Languages'.
		/// </summary>
		public static string AvailableLanguages
		{
			get { return m_strAvailableLanguages; }
		}

		private static string m_strBackgroundColor =
			@"Background Color";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Background Color'.
		/// </summary>
		public static string BackgroundColor
		{
			get { return m_strBackgroundColor; }
		}

		private static string m_strBinaryNoConv =
			@"Binary (no conversion)";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Binary (no conversion)'.
		/// </summary>
		public static string BinaryNoConv
		{
			get { return m_strBinaryNoConv; }
		}

		private static string m_strBits =
			@"Bits";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Bits'.
		/// </summary>
		public static string Bits
		{
			get { return m_strBits; }
		}

		private static string m_strBitsStc =
			@"bits";
		/// <summary>
		/// Look up a localized string similar to
		/// 'bits'.
		/// </summary>
		public static string BitsStc
		{
			get { return m_strBitsStc; }
		}

		private static string m_strBold =
			@"Bold";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Bold'.
		/// </summary>
		public static string Bold
		{
			get { return m_strBold; }
		}

		private static string m_strBrowser =
			@"Browser";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Browser'.
		/// </summary>
		public static string Browser
		{
			get { return m_strBrowser; }
		}

		private static string m_strBuiltIn =
			@"built-in";
		/// <summary>
		/// Look up a localized string similar to
		/// 'built-in'.
		/// </summary>
		public static string BuiltIn
		{
			get { return m_strBuiltIn; }
		}

		private static string m_strButton =
			@"Button";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Button'.
		/// </summary>
		public static string Button
		{
			get { return m_strButton; }
		}

		private static string m_strButtonBack =
			@"< &Back";
		/// <summary>
		/// Look up a localized string similar to
		/// '&lt; &amp;Back'.
		/// </summary>
		public static string ButtonBack
		{
			get { return m_strButtonBack; }
		}

		private static string m_strButtonDefault =
			@"Default button";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Default button'.
		/// </summary>
		public static string ButtonDefault
		{
			get { return m_strButtonDefault; }
		}

		private static string m_strButtonFinish =
			@"&Finish";
		/// <summary>
		/// Look up a localized string similar to
		/// '&amp;Finish'.
		/// </summary>
		public static string ButtonFinish
		{
			get { return m_strButtonFinish; }
		}

		private static string m_strButtonNext =
			@"&Next >";
		/// <summary>
		/// Look up a localized string similar to
		/// '&amp;Next &gt;'.
		/// </summary>
		public static string ButtonNext
		{
			get { return m_strButtonNext; }
		}

		private static string m_strButtons =
			@"Buttons";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Buttons'.
		/// </summary>
		public static string Buttons
		{
			get { return m_strButtons; }
		}

		private static string m_strCancel =
			@"Cancel";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Cancel'.
		/// </summary>
		public static string Cancel
		{
			get { return m_strCancel; }
		}

		private static string m_strCannotMoveEntriesBcsGroup =
			@"Cannot move entries because they aren't stored in the same group.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Cannot move entries because they aren&#39;t stored in the same group.'.
		/// </summary>
		public static string CannotMoveEntriesBcsGroup
		{
			get { return m_strCannotMoveEntriesBcsGroup; }
		}

		private static string m_strChangeMasterKey =
			@"Change Master Key";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Change Master Key'.
		/// </summary>
		public static string ChangeMasterKey
		{
			get { return m_strChangeMasterKey; }
		}

		private static string m_strChangeMasterKeyIntroShort =
			@"You are changing the composite master key for the currently-open database.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'You are changing the composite master key for the currently-open database.'.
		/// </summary>
		public static string ChangeMasterKeyIntroShort
		{
			get { return m_strChangeMasterKeyIntroShort; }
		}

		private static string m_strCharsAbbr =
			@"ch.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'ch.'.
		/// </summary>
		public static string CharsAbbr
		{
			get { return m_strCharsAbbr; }
		}

		private static string m_strCharsStc =
			@"characters";
		/// <summary>
		/// Look up a localized string similar to
		/// 'characters'.
		/// </summary>
		public static string CharsStc
		{
			get { return m_strCharsStc; }
		}

		private static string m_strCheckForUpdAtStart =
			@"Check for update at KeePass startup";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Check for update at KeePass startup'.
		/// </summary>
		public static string CheckForUpdAtStart
		{
			get { return m_strCheckForUpdAtStart; }
		}

		private static string m_strCheckingForUpd =
			@"Checking for updates";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Checking for updates'.
		/// </summary>
		public static string CheckingForUpd
		{
			get { return m_strCheckingForUpd; }
		}

		private static string m_strClassicAdj =
			@"Classic";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Classic'.
		/// </summary>
		public static string ClassicAdj
		{
			get { return m_strClassicAdj; }
		}

		private static string m_strClearKeyCmdLineParams =
			@"Clear master key command line parameters after using them once";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Clear master key command line parameters after using them once'.
		/// </summary>
		public static string ClearKeyCmdLineParams
		{
			get { return m_strClearKeyCmdLineParams; }
		}

		private static string m_strClearMru =
			@"&Clear List";
		/// <summary>
		/// Look up a localized string similar to
		/// '&amp;Clear List'.
		/// </summary>
		public static string ClearMru
		{
			get { return m_strClearMru; }
		}

		private static string m_strClipboard =
			@"Clipboard";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Clipboard'.
		/// </summary>
		public static string Clipboard
		{
			get { return m_strClipboard; }
		}

		private static string m_strClipboardClearInSeconds =
			@"Clipboard will be cleared in [PARAM] seconds";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Clipboard will be cleared in [PARAM] seconds'.
		/// </summary>
		public static string ClipboardClearInSeconds
		{
			get { return m_strClipboardClearInSeconds; }
		}

		private static string m_strClipboardClearOnExit =
			@"Clear clipboard when closing KeePass";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Clear clipboard when closing KeePass'.
		/// </summary>
		public static string ClipboardClearOnExit
		{
			get { return m_strClipboardClearOnExit; }
		}

		private static string m_strClipboardDataCopied =
			@"Data copied to clipboard.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Data copied to clipboard.'.
		/// </summary>
		public static string ClipboardDataCopied
		{
			get { return m_strClipboardDataCopied; }
		}

		private static string m_strClipboardViewerIgnoreFormat =
			@"Use 'Clipboard Viewer Ignore' clipboard format";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Use &#39;Clipboard Viewer Ignore&#39; clipboard format'.
		/// </summary>
		public static string ClipboardViewerIgnoreFormat
		{
			get { return m_strClipboardViewerIgnoreFormat; }
		}

		private static string m_strCloseActiveDatabase =
			@"Close active database";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Close active database'.
		/// </summary>
		public static string CloseActiveDatabase
		{
			get { return m_strCloseActiveDatabase; }
		}

		private static string m_strCloseButton =
			@"&Close";
		/// <summary>
		/// Look up a localized string similar to
		/// '&amp;Close'.
		/// </summary>
		public static string CloseButton
		{
			get { return m_strCloseButton; }
		}

		private static string m_strCloseButtonMinimizes =
			@"Close button [X] minimizes main window instead of terminating the application";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Close button [X] minimizes main window instead of terminating the application'.
		/// </summary>
		public static string CloseButtonMinimizes
		{
			get { return m_strCloseButtonMinimizes; }
		}

		private static string m_strClosingDatabaseFile =
			@"Closing database file";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Closing database file'.
		/// </summary>
		public static string ClosingDatabaseFile
		{
			get { return m_strClosingDatabaseFile; }
		}

		private static string m_strColumn =
			@"Column";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Column'.
		/// </summary>
		public static string Column
		{
			get { return m_strColumn; }
		}

		private static string m_strColumns =
			@"Columns";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Columns'.
		/// </summary>
		public static string Columns
		{
			get { return m_strColumns; }
		}

		private static string m_strComments =
			@"Comments";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Comments'.
		/// </summary>
		public static string Comments
		{
			get { return m_strComments; }
		}

		private static string m_strCompany =
			@"Company";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Company'.
		/// </summary>
		public static string Company
		{
			get { return m_strCompany; }
		}

		private static string m_strComparison =
			@"Comparison";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Comparison'.
		/// </summary>
		public static string Comparison
		{
			get { return m_strComparison; }
		}

		private static string m_strComponent =
			@"Component";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Component'.
		/// </summary>
		public static string Component
		{
			get { return m_strComponent; }
		}

		private static string m_strCondition =
			@"Condition";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Condition'.
		/// </summary>
		public static string Condition
		{
			get { return m_strCondition; }
		}

		private static string m_strConfigAffectAdmin =
			@"Changes to the configuration/policy will affect you and all users of this KeePass installation.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Changes to the configuration/policy will affect you and all users of this KeePass installation.'.
		/// </summary>
		public static string ConfigAffectAdmin
		{
			get { return m_strConfigAffectAdmin; }
		}

		private static string m_strConfigAffectUser =
			@"Changes to the configuration/policy will only affect you. Policy flags that are enforced by the administrator are reset after restarting KeePass.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Changes to the configuration/policy will only affect you. Policy flags that are enforced by the administrator are reset after restarting KeePass.'.
		/// </summary>
		public static string ConfigAffectUser
		{
			get { return m_strConfigAffectUser; }
		}

		private static string m_strConfigSaveFailed =
			@"Failed to save the configuration.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Failed to save the configuration.'.
		/// </summary>
		public static string ConfigSaveFailed
		{
			get { return m_strConfigSaveFailed; }
		}

		private static string m_strConfigureAutoType =
			@"Configure Auto-Type";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Configure Auto-Type'.
		/// </summary>
		public static string ConfigureAutoType
		{
			get { return m_strConfigureAutoType; }
		}

		private static string m_strConfigureAutoTypeDesc =
			@"Configure auto-type behaviour for this entry.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Configure auto-type behaviour for this entry.'.
		/// </summary>
		public static string ConfigureAutoTypeDesc
		{
			get { return m_strConfigureAutoTypeDesc; }
		}

		private static string m_strConfigureAutoTypeItem =
			@"Configure Auto-Type Item";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Configure Auto-Type Item'.
		/// </summary>
		public static string ConfigureAutoTypeItem
		{
			get { return m_strConfigureAutoTypeItem; }
		}

		private static string m_strConfigureAutoTypeItemDesc =
			@"Associate a window title with a keystroke sequence.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Associate a window title with a keystroke sequence.'.
		/// </summary>
		public static string ConfigureAutoTypeItemDesc
		{
			get { return m_strConfigureAutoTypeItemDesc; }
		}

		private static string m_strConfigureColumns =
			@"Configure Columns";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Configure Columns'.
		/// </summary>
		public static string ConfigureColumns
		{
			get { return m_strConfigureColumns; }
		}

		private static string m_strConfigureColumnsDesc =
			@"Configure entry list columns.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Configure entry list columns.'.
		/// </summary>
		public static string ConfigureColumnsDesc
		{
			get { return m_strConfigureColumnsDesc; }
		}

		private static string m_strConfigureKeystrokeSeq =
			@"Configure Keystroke Sequence";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Configure Keystroke Sequence'.
		/// </summary>
		public static string ConfigureKeystrokeSeq
		{
			get { return m_strConfigureKeystrokeSeq; }
		}

		private static string m_strConfigureKeystrokeSeqDesc =
			@"Define a default keystroke sequence.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Define a default keystroke sequence.'.
		/// </summary>
		public static string ConfigureKeystrokeSeqDesc
		{
			get { return m_strConfigureKeystrokeSeqDesc; }
		}

		private static string m_strConfigureOnNewDatabase =
			@"Create New Password Database - Step 2";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Create New Password Database - Step 2'.
		/// </summary>
		public static string ConfigureOnNewDatabase
		{
			get { return m_strConfigureOnNewDatabase; }
		}

		private static string m_strContact =
			@"Contact";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Contact'.
		/// </summary>
		public static string Contact
		{
			get { return m_strContact; }
		}

		private static string m_strContainsOp =
			@"Contains";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Contains'.
		/// </summary>
		public static string ContainsOp
		{
			get { return m_strContainsOp; }
		}

		private static string m_strCopiedEntryData =
			@"Copied entry data to clipboard";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Copied entry data to clipboard'.
		/// </summary>
		public static string CopiedEntryData
		{
			get { return m_strCopiedEntryData; }
		}

		private static string m_strCopy =
			@"Copy";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Copy'.
		/// </summary>
		public static string Copy
		{
			get { return m_strCopy; }
		}

		private static string m_strCopyAll =
			@"Copy All";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Copy All'.
		/// </summary>
		public static string CopyAll
		{
			get { return m_strCopyAll; }
		}

		private static string m_strCopyLink =
			@"Copy Link";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Copy Link'.
		/// </summary>
		public static string CopyLink
		{
			get { return m_strCopyLink; }
		}

		private static string m_strCopyOfItem =
			@"Copy";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Copy'.
		/// </summary>
		public static string CopyOfItem
		{
			get { return m_strCopyOfItem; }
		}

		private static string m_strCopyPasswordFull =
			@"Copy Password to Clipboard";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Copy Password to Clipboard'.
		/// </summary>
		public static string CopyPasswordFull
		{
			get { return m_strCopyPasswordFull; }
		}

		private static string m_strCopyPasswordMenu =
			@"Copy &Password";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Copy &amp;Password'.
		/// </summary>
		public static string CopyPasswordMenu
		{
			get { return m_strCopyPasswordMenu; }
		}

		private static string m_strCopyTanMenu =
			@"Copy &TAN";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Copy &amp;TAN'.
		/// </summary>
		public static string CopyTanMenu
		{
			get { return m_strCopyTanMenu; }
		}

		private static string m_strCopyUrlsInsteadOfOpening =
			@"Copy URLs to clipboard instead of opening them";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Copy URLs to clipboard instead of opening them'.
		/// </summary>
		public static string CopyUrlsInsteadOfOpening
		{
			get { return m_strCopyUrlsInsteadOfOpening; }
		}

		private static string m_strCopyUrlToClipboard =
			@"&Copy URL(s) to Clipboard";
		/// <summary>
		/// Look up a localized string similar to
		/// '&amp;Copy URL(s) to Clipboard'.
		/// </summary>
		public static string CopyUrlToClipboard
		{
			get { return m_strCopyUrlToClipboard; }
		}

		private static string m_strCopyUserFull =
			@"Copy User Name to Clipboard";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Copy User Name to Clipboard'.
		/// </summary>
		public static string CopyUserFull
		{
			get { return m_strCopyUserFull; }
		}

		private static string m_strCopyWholeEntries =
			@"Copy Whole Entries";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Copy Whole Entries'.
		/// </summary>
		public static string CopyWholeEntries
		{
			get { return m_strCopyWholeEntries; }
		}

		private static string m_strCorruptionByExt =
			@"Such a corruption is usually caused by a plugin or a KeePass port. Please try to find out which plugin/port is causing it and report the issue to the corresponding developer.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Such a corruption is usually caused by a plugin or a KeePass port. Please try to find out which plugin/port is causing it and report the issue to the corresponding developer.'.
		/// </summary>
		public static string CorruptionByExt
		{
			get { return m_strCorruptionByExt; }
		}

		private static string m_strCount =
			@"Count";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Count'.
		/// </summary>
		public static string Count
		{
			get { return m_strCount; }
		}

		private static string m_strCreateMasterKey =
			@"Create Composite Master Key";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Create Composite Master Key'.
		/// </summary>
		public static string CreateMasterKey
		{
			get { return m_strCreateMasterKey; }
		}

		private static string m_strCreateNewDatabase =
			@"Create New Password Database";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Create New Password Database'.
		/// </summary>
		public static string CreateNewDatabase
		{
			get { return m_strCreateNewDatabase; }
		}

		private static string m_strCreateNewIDs =
			@"Create new &IDs";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Create new &amp;IDs'.
		/// </summary>
		public static string CreateNewIDs
		{
			get { return m_strCreateNewIDs; }
		}

		private static string m_strCreationTime =
			@"Creation Time";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Creation Time'.
		/// </summary>
		public static string CreationTime
		{
			get { return m_strCreationTime; }
		}

		private static string m_strCredSaveAll =
			@"Remember user name and password";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Remember user name and password'.
		/// </summary>
		public static string CredSaveAll
		{
			get { return m_strCredSaveAll; }
		}

		private static string m_strCredSaveNone =
			@"Do not remember user name and password";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Do not remember user name and password'.
		/// </summary>
		public static string CredSaveNone
		{
			get { return m_strCredSaveNone; }
		}

		private static string m_strCredSaveUserOnly =
			@"Remember user name only";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Remember user name only'.
		/// </summary>
		public static string CredSaveUserOnly
		{
			get { return m_strCredSaveUserOnly; }
		}

		private static string m_strCredSpecifyDifferent =
			@"&Specify different server credentials";
		/// <summary>
		/// Look up a localized string similar to
		/// '&amp;Specify different server credentials'.
		/// </summary>
		public static string CredSpecifyDifferent
		{
			get { return m_strCredSpecifyDifferent; }
		}

		private static string m_strCsprojCountError =
			@"There must be exactly one .csproj or .vbproj file.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'There must be exactly one .csproj or .vbproj file.'.
		/// </summary>
		public static string CsprojCountError
		{
			get { return m_strCsprojCountError; }
		}

		private static string m_strCsvTextFile =
			@"CSV / Text File";
		/// <summary>
		/// Look up a localized string similar to
		/// 'CSV / Text File'.
		/// </summary>
		public static string CsvTextFile
		{
			get { return m_strCsvTextFile; }
		}

		private static string m_strCtrlAltAConflict =
			@"KeePass' global auto-type hot key Ctrl+Alt+A is in conflict with a system key combination that is producing '{PARAM}'.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'KeePass&#39; global auto-type hot key Ctrl+Alt+A is in conflict with a system key combination that is producing &#39;{PARAM}&#39;.'.
		/// </summary>
		public static string CtrlAltAConflict
		{
			get { return m_strCtrlAltAConflict; }
		}

		private static string m_strCtrlAltAConflictHint =
			@"You can change the global auto-type hot key to a different key combination in 'Tools' -> 'Options' -> tab 'Integration'.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'You can change the global auto-type hot key to a different key combination in &#39;Tools&#39; -&gt; &#39;Options&#39; -&gt; tab &#39;Integration&#39;.'.
		/// </summary>
		public static string CtrlAltAConflictHint
		{
			get { return m_strCtrlAltAConflictHint; }
		}

		private static string m_strCurrentStyle =
			@"Current Style";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Current Style'.
		/// </summary>
		public static string CurrentStyle
		{
			get { return m_strCurrentStyle; }
		}

		private static string m_strCustom =
			@"Custom";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Custom'.
		/// </summary>
		public static string Custom
		{
			get { return m_strCustom; }
		}

		private static string m_strCustomFields =
			@"Custom Fields";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Custom Fields'.
		/// </summary>
		public static string CustomFields
		{
			get { return m_strCustomFields; }
		}

		private static string m_strCustomizableHtml =
			@"Customizable HTML File";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Customizable HTML File'.
		/// </summary>
		public static string CustomizableHtml
		{
			get { return m_strCustomizableHtml; }
		}

		private static string m_strCustomTbButtonAdd =
			@"Add custom toolbar button";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Add custom toolbar button'.
		/// </summary>
		public static string CustomTbButtonAdd
		{
			get { return m_strCustomTbButtonAdd; }
		}

		private static string m_strCustomTbButtonClicked =
			@"Custom toolbar button clicked";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Custom toolbar button clicked'.
		/// </summary>
		public static string CustomTbButtonClicked
		{
			get { return m_strCustomTbButtonClicked; }
		}

		private static string m_strCustomTbButtonRemove =
			@"Remove custom toolbar button";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Remove custom toolbar button'.
		/// </summary>
		public static string CustomTbButtonRemove
		{
			get { return m_strCustomTbButtonRemove; }
		}

		private static string m_strCut =
			@"Cut";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Cut'.
		/// </summary>
		public static string Cut
		{
			get { return m_strCut; }
		}

		private static string m_strData =
			@"Data";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Data'.
		/// </summary>
		public static string Data
		{
			get { return m_strData; }
		}

		private static string m_strDatabase =
			@"Database";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Database'.
		/// </summary>
		public static string Database
		{
			get { return m_strDatabase; }
		}

		private static string m_strDatabaseDescPrompt =
			@"Enter a short description of the database or leave it empty.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Enter a short description of the database or leave it empty.'.
		/// </summary>
		public static string DatabaseDescPrompt
		{
			get { return m_strDatabaseDescPrompt; }
		}

		private static string m_strDatabaseHasUnsavedChanges =
			@"Database has unsaved changes";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Database has unsaved changes'.
		/// </summary>
		public static string DatabaseHasUnsavedChanges
		{
			get { return m_strDatabaseHasUnsavedChanges; }
		}

		private static string m_strDatabaseMaintenance =
			@"Database Maintenance";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Database Maintenance'.
		/// </summary>
		public static string DatabaseMaintenance
		{
			get { return m_strDatabaseMaintenance; }
		}

		private static string m_strDatabaseMaintenanceDesc =
			@"Here you can maintain the currently opened database.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Here you can maintain the currently opened database.'.
		/// </summary>
		public static string DatabaseMaintenanceDesc
		{
			get { return m_strDatabaseMaintenanceDesc; }
		}

		private static string m_strDatabaseModifiedNoDot =
			@"The current database file has been modified";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The current database file has been modified'.
		/// </summary>
		public static string DatabaseModifiedNoDot
		{
			get { return m_strDatabaseModifiedNoDot; }
		}

		private static string m_strDatabaseNamePrompt =
			@"Enter a name for the database or leave it empty.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Enter a name for the database or leave it empty.'.
		/// </summary>
		public static string DatabaseNamePrompt
		{
			get { return m_strDatabaseNamePrompt; }
		}

		private static string m_strDatabaseSettings =
			@"Database Settings";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Database Settings'.
		/// </summary>
		public static string DatabaseSettings
		{
			get { return m_strDatabaseSettings; }
		}

		private static string m_strDatabaseSettingsDesc =
			@"Here you can configure various database settings.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Here you can configure various database settings.'.
		/// </summary>
		public static string DatabaseSettingsDesc
		{
			get { return m_strDatabaseSettingsDesc; }
		}

		private static string m_strDataEditor =
			@"Data Editor";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Data Editor'.
		/// </summary>
		public static string DataEditor
		{
			get { return m_strDataEditor; }
		}

		private static string m_strDataViewer =
			@"Data Viewer";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Data Viewer'.
		/// </summary>
		public static string DataViewer
		{
			get { return m_strDataViewer; }
		}

		private static string m_strDbMntncResults =
			@"Show results of database maintenance in a dialog";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Show results of database maintenance in a dialog'.
		/// </summary>
		public static string DbMntncResults
		{
			get { return m_strDbMntncResults; }
		}

		private static string m_strDbNoModBy =
			@"{PARAM} has not modified the database.";
		/// <summary>
		/// Look up a localized string similar to
		/// '{PARAM} has not modified the database.'.
		/// </summary>
		public static string DbNoModBy
		{
			get { return m_strDbNoModBy; }
		}

		private static string m_strDefault =
			@"Default";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Default'.
		/// </summary>
		public static string Default
		{
			get { return m_strDefault; }
		}

		private static string m_strDelete =
			@"Delete";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Delete'.
		/// </summary>
		public static string Delete
		{
			get { return m_strDelete; }
		}

		private static string m_strDeleteCmd =
			@"&Delete";
		/// <summary>
		/// Look up a localized string similar to
		/// '&amp;Delete'.
		/// </summary>
		public static string DeleteCmd
		{
			get { return m_strDeleteCmd; }
		}

		private static string m_strDeleteEntriesTitle =
			@"Delete Entries";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Delete Entries'.
		/// </summary>
		public static string DeleteEntriesTitle
		{
			get { return m_strDeleteEntriesTitle; }
		}

		private static string m_strDeleteEntriesTitleSingle =
			@"Delete Entry";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Delete Entry'.
		/// </summary>
		public static string DeleteEntriesTitleSingle
		{
			get { return m_strDeleteEntriesTitleSingle; }
		}

		private static string m_strDeleteEntriesQuestion =
			@"Are you sure you want to permanently delete the selected entries?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Are you sure you want to permanently delete the selected entries?'.
		/// </summary>
		public static string DeleteEntriesQuestion
		{
			get { return m_strDeleteEntriesQuestion; }
		}

		private static string m_strDeleteEntriesQuestionSingle =
			@"Are you sure you want to permanently delete the selected entry?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Are you sure you want to permanently delete the selected entry?'.
		/// </summary>
		public static string DeleteEntriesQuestionSingle
		{
			get { return m_strDeleteEntriesQuestionSingle; }
		}

		private static string m_strDeleteGroupTitle =
			@"Delete Group";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Delete Group'.
		/// </summary>
		public static string DeleteGroupTitle
		{
			get { return m_strDeleteGroupTitle; }
		}

		private static string m_strDeleteGroupInfo =
			@"Deleting a group will also delete all entries and subgroups in that group.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Deleting a group will also delete all entries and subgroups in that group.'.
		/// </summary>
		public static string DeleteGroupInfo
		{
			get { return m_strDeleteGroupInfo; }
		}

		private static string m_strDeleteGroupQuestion =
			@"Are you sure you want to permanently delete the selected group?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Are you sure you want to permanently delete the selected group?'.
		/// </summary>
		public static string DeleteGroupQuestion
		{
			get { return m_strDeleteGroupQuestion; }
		}

		private static string m_strDescending =
			@"&Descending";
		/// <summary>
		/// Look up a localized string similar to
		/// '&amp;Descending'.
		/// </summary>
		public static string Descending
		{
			get { return m_strDescending; }
		}

		private static string m_strDescription =
			@"Description";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Description'.
		/// </summary>
		public static string Description
		{
			get { return m_strDescription; }
		}

		private static string m_strDetails =
			@"Details";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Details'.
		/// </summary>
		public static string Details
		{
			get { return m_strDetails; }
		}

		private static string m_strDialogNoShowAgain =
			@"Do not show this dialog again.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Do not show this dialog again.'.
		/// </summary>
		public static string DialogNoShowAgain
		{
			get { return m_strDialogNoShowAgain; }
		}

		private static string m_strDialogs =
			@"Dialogs";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Dialogs'.
		/// </summary>
		public static string Dialogs
		{
			get { return m_strDialogs; }
		}

		private static string m_strDisable =
			@"Disable";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Disable'.
		/// </summary>
		public static string Disable
		{
			get { return m_strDisable; }
		}

		private static string m_strDisabled =
			@"Disabled";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Disabled'.
		/// </summary>
		public static string Disabled
		{
			get { return m_strDisabled; }
		}

		private static string m_strDisableSaveIfNotModified =
			@"Disable 'Save' command (instead of graying it out) if the database hasn't been modified";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Disable &#39;Save&#39; command (instead of graying it out) if the database hasn&#39;t been modified'.
		/// </summary>
		public static string DisableSaveIfNotModified
		{
			get { return m_strDisableSaveIfNotModified; }
		}

		private static string m_strDiscardChangesCmd =
			@"&Discard changes";
		/// <summary>
		/// Look up a localized string similar to
		/// '&amp;Discard changes'.
		/// </summary>
		public static string DiscardChangesCmd
		{
			get { return m_strDiscardChangesCmd; }
		}

		private static string m_strDocumentationHint =
			@"Please see the documentation for more details.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Please see the documentation for more details.'.
		/// </summary>
		public static string DocumentationHint
		{
			get { return m_strDocumentationHint; }
		}

		private static string m_strDragDrop =
			@"Drag&Drop";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Drag&amp;Drop'.
		/// </summary>
		public static string DragDrop
		{
			get { return m_strDragDrop; }
		}

		private static string m_strDropToBackOnCopy =
			@"Drop to background after copying data to the clipboard";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Drop to background after copying data to the clipboard'.
		/// </summary>
		public static string DropToBackOnCopy
		{
			get { return m_strDropToBackOnCopy; }
		}

		private static string m_strDuplicateStringFieldName =
			@"The string field name you specified already exists. String field names must be unique for each entry.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The string field name you specified already exists. String field names must be unique for each entry.'.
		/// </summary>
		public static string DuplicateStringFieldName
		{
			get { return m_strDuplicateStringFieldName; }
		}

		private static string m_strEditCmd =
			@"&Edit";
		/// <summary>
		/// Look up a localized string similar to
		/// '&amp;Edit'.
		/// </summary>
		public static string EditCmd
		{
			get { return m_strEditCmd; }
		}

		private static string m_strEditEntry =
			@"Edit Entry";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Edit Entry'.
		/// </summary>
		public static string EditEntry
		{
			get { return m_strEditEntry; }
		}

		private static string m_strEditEntryDesc =
			@"You're editing an existing entry.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'You&#39;re editing an existing entry.'.
		/// </summary>
		public static string EditEntryDesc
		{
			get { return m_strEditEntryDesc; }
		}

		private static string m_strEditGroup =
			@"Edit Group";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Edit Group'.
		/// </summary>
		public static string EditGroup
		{
			get { return m_strEditGroup; }
		}

		private static string m_strEditGroupDesc =
			@"Edit properties of the currently selected group.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Edit properties of the currently selected group.'.
		/// </summary>
		public static string EditGroupDesc
		{
			get { return m_strEditGroupDesc; }
		}

		private static string m_strEditStringField =
			@"Edit Entry String Field";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Edit Entry String Field'.
		/// </summary>
		public static string EditStringField
		{
			get { return m_strEditStringField; }
		}

		private static string m_strEditStringFieldDesc =
			@"Edit one of the entry's string fields.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Edit one of the entry&#39;s string fields.'.
		/// </summary>
		public static string EditStringFieldDesc
		{
			get { return m_strEditStringFieldDesc; }
		}

		private static string m_strEMail =
			@"eMail";
		/// <summary>
		/// Look up a localized string similar to
		/// 'eMail'.
		/// </summary>
		public static string EMail
		{
			get { return m_strEMail; }
		}

		private static string m_strEmpty =
			@"Empty";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Empty'.
		/// </summary>
		public static string Empty
		{
			get { return m_strEmpty; }
		}

		private static string m_strEmptyMasterPw =
			@"You have selected to use an empty master password.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'You have selected to use an empty master password.'.
		/// </summary>
		public static string EmptyMasterPw
		{
			get { return m_strEmptyMasterPw; }
		}

		private static string m_strEmptyMasterPwHint =
			@"An empty master password is not the same as using no master password at all.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'An empty master password is not the same as using no master password at all.'.
		/// </summary>
		public static string EmptyMasterPwHint
		{
			get { return m_strEmptyMasterPwHint; }
		}

		private static string m_strEmptyMasterPwQuestion =
			@"Are you sure you want to use an empty master password?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Are you sure you want to use an empty master password?'.
		/// </summary>
		public static string EmptyMasterPwQuestion
		{
			get { return m_strEmptyMasterPwQuestion; }
		}

		private static string m_strEmptyRecycleBinQuestion =
			@"Are you sure you want to permanently delete the items?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Are you sure you want to permanently delete the items?'.
		/// </summary>
		public static string EmptyRecycleBinQuestion
		{
			get { return m_strEmptyRecycleBinQuestion; }
		}

		private static string m_strEnable =
			@"Enable";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Enable'.
		/// </summary>
		public static string Enable
		{
			get { return m_strEnable; }
		}

		private static string m_strEnabled =
			@"Enabled";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Enabled'.
		/// </summary>
		public static string Enabled
		{
			get { return m_strEnabled; }
		}

		private static string m_strEncoding =
			@"Encoding";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Encoding'.
		/// </summary>
		public static string Encoding
		{
			get { return m_strEncoding; }
		}

		private static string m_strEncodingFail =
			@"Selected encoding is invalid. The file cannot be interpreted using the selected encoding.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Selected encoding is invalid. The file cannot be interpreted using the selected encoding.'.
		/// </summary>
		public static string EncodingFail
		{
			get { return m_strEncodingFail; }
		}

		private static string m_strEndsWith =
			@"Ends with";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Ends with'.
		/// </summary>
		public static string EndsWith
		{
			get { return m_strEndsWith; }
		}

		private static string m_strEnterCompositeKey =
			@"Enter Master Key";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Enter Master Key'.
		/// </summary>
		public static string EnterCompositeKey
		{
			get { return m_strEnterCompositeKey; }
		}

		private static string m_strEnterCurrentCompositeKey =
			@"Enter Current Master Key";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Enter Current Master Key'.
		/// </summary>
		public static string EnterCurrentCompositeKey
		{
			get { return m_strEnterCurrentCompositeKey; }
		}

		private static string m_strEntropyDesc =
			@"Generate additional random bits.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Generate additional random bits.'.
		/// </summary>
		public static string EntropyDesc
		{
			get { return m_strEntropyDesc; }
		}

		private static string m_strEntropyTitle =
			@"Entropy Collection";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Entropy Collection'.
		/// </summary>
		public static string EntropyTitle
		{
			get { return m_strEntropyTitle; }
		}

		private static string m_strEntry =
			@"Entry";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Entry'.
		/// </summary>
		public static string Entry
		{
			get { return m_strEntry; }
		}

		private static string m_strEntryList =
			@"Entry List";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Entry List'.
		/// </summary>
		public static string EntryList
		{
			get { return m_strEntryList; }
		}

		private static string m_strEntryListAutoResizeColumns =
			@"Automatically resize entry list columns when resizing the main window";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Automatically resize entry list columns when resizing the main window'.
		/// </summary>
		public static string EntryListAutoResizeColumns
		{
			get { return m_strEntryListAutoResizeColumns; }
		}

		private static string m_strEntrySelGroupSel =
			@"When selecting an entry, automatically select its parent group, too";
		/// <summary>
		/// Look up a localized string similar to
		/// 'When selecting an entry, automatically select its parent group, too'.
		/// </summary>
		public static string EntrySelGroupSel
		{
			get { return m_strEntrySelGroupSel; }
		}

		private static string m_strEnvironmentVariable =
			@"Environment variable";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Environment variable'.
		/// </summary>
		public static string EnvironmentVariable
		{
			get { return m_strEnvironmentVariable; }
		}

		private static string m_strEqualsOp =
			@"Equals";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Equals'.
		/// </summary>
		public static string EqualsOp
		{
			get { return m_strEqualsOp; }
		}

		private static string m_strError =
			@"Error";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Error'.
		/// </summary>
		public static string Error
		{
			get { return m_strError; }
		}

		private static string m_strErrorCode =
			@"Error Code";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Error Code'.
		/// </summary>
		public static string ErrorCode
		{
			get { return m_strErrorCode; }
		}

		private static string m_strErrors =
			@"Errors";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Errors'.
		/// </summary>
		public static string Errors
		{
			get { return m_strErrors; }
		}

		private static string m_strEscMinimizesToTray =
			@"Esc minimizes to tray instead of locking the workspace";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Esc minimizes to tray instead of locking the workspace'.
		/// </summary>
		public static string EscMinimizesToTray
		{
			get { return m_strEscMinimizesToTray; }
		}

		private static string m_strEvent =
			@"Event";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Event'.
		/// </summary>
		public static string Event
		{
			get { return m_strEvent; }
		}

		private static string m_strExecuteCmdLineUrl =
			@"Execute command line / URL";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Execute command line / URL'.
		/// </summary>
		public static string ExecuteCmdLineUrl
		{
			get { return m_strExecuteCmdLineUrl; }
		}

		private static string m_strExitInsteadOfLockingAfterTime =
			@"Exit instead of locking the workspace after the specified time";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Exit instead of locking the workspace after the specified time'.
		/// </summary>
		public static string ExitInsteadOfLockingAfterTime
		{
			get { return m_strExitInsteadOfLockingAfterTime; }
		}

		private static string m_strExitInsteadOfLockingAlways =
			@"Always exit instead of locking the workspace";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Always exit instead of locking the workspace'.
		/// </summary>
		public static string ExitInsteadOfLockingAlways
		{
			get { return m_strExitInsteadOfLockingAlways; }
		}

		private static string m_strExpiredEntries =
			@"Expired Entries";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Expired Entries'.
		/// </summary>
		public static string ExpiredEntries
		{
			get { return m_strExpiredEntries; }
		}

		private static string m_strExpiredEntriesCanMatch =
			@"Expired entries can match";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Expired entries can match'.
		/// </summary>
		public static string ExpiredEntriesCanMatch
		{
			get { return m_strExpiredEntriesCanMatch; }
		}

		private static string m_strExpiryTime =
			@"Expiry Time";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Expiry Time'.
		/// </summary>
		public static string ExpiryTime
		{
			get { return m_strExpiryTime; }
		}

		private static string m_strExpiryTimeDateOnly =
			@"Expiry Time (Date Only)";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Expiry Time (Date Only)'.
		/// </summary>
		public static string ExpiryTimeDateOnly
		{
			get { return m_strExpiryTimeDateOnly; }
		}

		private static string m_strExport =
			@"Export";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Export'.
		/// </summary>
		public static string Export
		{
			get { return m_strExport; }
		}

		private static string m_strExportFileDesc =
			@"Export data to an external file.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Export data to an external file.'.
		/// </summary>
		public static string ExportFileDesc
		{
			get { return m_strExportFileDesc; }
		}

		private static string m_strExportFileTitle =
			@"Export File/Data";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Export File/Data'.
		/// </summary>
		public static string ExportFileTitle
		{
			get { return m_strExportFileTitle; }
		}

		private static string m_strExportHtml =
			@"Export To HTML";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Export To HTML'.
		/// </summary>
		public static string ExportHtml
		{
			get { return m_strExportHtml; }
		}

		private static string m_strExportHtmlDesc =
			@"Export entries to a HTML file.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Export entries to a HTML file.'.
		/// </summary>
		public static string ExportHtmlDesc
		{
			get { return m_strExportHtmlDesc; }
		}

		private static string m_strExportingStatusMsg =
			@"Exporting...";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Exporting...'.
		/// </summary>
		public static string ExportingStatusMsg
		{
			get { return m_strExportingStatusMsg; }
		}

		private static string m_strExportStc =
			@"Export active database";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Export active database'.
		/// </summary>
		public static string ExportStc
		{
			get { return m_strExportStc; }
		}

		private static string m_strExportToPrompt =
			@"Export to:";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Export to:'.
		/// </summary>
		public static string ExportToPrompt
		{
			get { return m_strExportToPrompt; }
		}

		private static string m_strExternal =
			@"External";
		/// <summary>
		/// Look up a localized string similar to
		/// 'External'.
		/// </summary>
		public static string External
		{
			get { return m_strExternal; }
		}

		private static string m_strExternalApp =
			@"External Application";
		/// <summary>
		/// Look up a localized string similar to
		/// 'External Application'.
		/// </summary>
		public static string ExternalApp
		{
			get { return m_strExternalApp; }
		}

		private static string m_strFatalError =
			@"Fatal Error";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Fatal Error'.
		/// </summary>
		public static string FatalError
		{
			get { return m_strFatalError; }
		}

		private static string m_strFeature =
			@"Feature";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Feature'.
		/// </summary>
		public static string Feature
		{
			get { return m_strFeature; }
		}

		private static string m_strField =
			@"Field";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Field'.
		/// </summary>
		public static string Field
		{
			get { return m_strField; }
		}

		private static string m_strFieldName =
			@"Field Name";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Field Name'.
		/// </summary>
		public static string FieldName
		{
			get { return m_strFieldName; }
		}

		private static string m_strFieldNameExistsAlready =
			@"The entered name exists already and cannot be used.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The entered name exists already and cannot be used.'.
		/// </summary>
		public static string FieldNameExistsAlready
		{
			get { return m_strFieldNameExistsAlready; }
		}

		private static string m_strFieldNameInvalid =
			@"The entered name is invalid and cannot be used.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The entered name is invalid and cannot be used.'.
		/// </summary>
		public static string FieldNameInvalid
		{
			get { return m_strFieldNameInvalid; }
		}

		private static string m_strFieldNamePrompt =
			@"Please enter a field name.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Please enter a field name.'.
		/// </summary>
		public static string FieldNamePrompt
		{
			get { return m_strFieldNamePrompt; }
		}

		private static string m_strFieldRefInvalidChars =
			@"The selected field, which identifies the source entry, contains illegal characters (like '{', '}', newline characters, ...).";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The selected field, which identifies the source entry, contains illegal characters (like &#39;{&#39;, &#39;}&#39;, newline characters, ...).'.
		/// </summary>
		public static string FieldRefInvalidChars
		{
			get { return m_strFieldRefInvalidChars; }
		}

		private static string m_strFieldRefMultiMatch =
			@"Multiple entries match the specified identifying field.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Multiple entries match the specified identifying field.'.
		/// </summary>
		public static string FieldRefMultiMatch
		{
			get { return m_strFieldRefMultiMatch; }
		}

		private static string m_strFieldRefMultiMatchHint =
			@"To avoid ambiguity, entries can be identified by their UUIDs, which are unique.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'To avoid ambiguity, entries can be identified by their UUIDs, which are unique.'.
		/// </summary>
		public static string FieldRefMultiMatchHint
		{
			get { return m_strFieldRefMultiMatchHint; }
		}

		private static string m_strFieldValue =
			@"Field Value";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Field Value'.
		/// </summary>
		public static string FieldValue
		{
			get { return m_strFieldValue; }
		}

		private static string m_strFile =
			@"File";
		/// <summary>
		/// Look up a localized string similar to
		/// 'File'.
		/// </summary>
		public static string File
		{
			get { return m_strFile; }
		}

		private static string m_strFileChanged =
			@"The file on disk/server has changed since it was loaded. Probably someone else has edited and saved the database.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The file on disk/server has changed since it was loaded. Probably someone else has edited and saved the database.'.
		/// </summary>
		public static string FileChanged
		{
			get { return m_strFileChanged; }
		}

		private static string m_strFileChangedOverwrite =
			@"Save the current database to the file. Changes made by the other user will be lost.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Save the current database to the file. Changes made by the other user will be lost.'.
		/// </summary>
		public static string FileChangedOverwrite
		{
			get { return m_strFileChangedOverwrite; }
		}

		private static string m_strFileChangedSync =
			@"Load the file on disk/server and merge it with the current database in memory.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Load the file on disk/server and merge it with the current database in memory.'.
		/// </summary>
		public static string FileChangedSync
		{
			get { return m_strFileChangedSync; }
		}

		private static string m_strFileExists =
			@"File exists";
		/// <summary>
		/// Look up a localized string similar to
		/// 'File exists'.
		/// </summary>
		public static string FileExists
		{
			get { return m_strFileExists; }
		}

		private static string m_strFileExistsAlready =
			@"The following file exists already:";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The following file exists already:'.
		/// </summary>
		public static string FileExistsAlready
		{
			get { return m_strFileExistsAlready; }
		}

		private static string m_strFileExtInstallFailed =
			@"Failed to create the file association. Make sure you have write access to the file associations list.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Failed to create the file association. Make sure you have write access to the file associations list.'.
		/// </summary>
		public static string FileExtInstallFailed
		{
			get { return m_strFileExtInstallFailed; }
		}

		private static string m_strFileExtInstallSuccess =
			@"Successfully associated KDBX files with KeePass! KDBX files will now be opened by KeePass when you double-click on them.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Successfully associated KDBX files with KeePass! KDBX files will now be opened by KeePass when you double-click on them.'.
		/// </summary>
		public static string FileExtInstallSuccess
		{
			get { return m_strFileExtInstallSuccess; }
		}

		private static string m_strFileExtName =
			@"KeePass Password Database";
		/// <summary>
		/// Look up a localized string similar to
		/// 'KeePass Password Database'.
		/// </summary>
		public static string FileExtName
		{
			get { return m_strFileExtName; }
		}

		private static string m_strFileFormatStc =
			@"File format";
		/// <summary>
		/// Look up a localized string similar to
		/// 'File format'.
		/// </summary>
		public static string FileFormatStc
		{
			get { return m_strFileFormatStc; }
		}

		private static string m_strFileLockedBy =
			@"The specified file is currently locked by the following user:";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The specified file is currently locked by the following user:'.
		/// </summary>
		public static string FileLockedBy
		{
			get { return m_strFileLockedBy; }
		}

		private static string m_strFileLockedWarning =
			@"KeePass will open the file, but note that you might overwrite changes each other when saving.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'KeePass will open the file, but note that you might overwrite changes each other when saving.'.
		/// </summary>
		public static string FileLockedWarning
		{
			get { return m_strFileLockedWarning; }
		}

		private static string m_strFileNameContainsSemicolonError =
			@"This file path contains a semicolon (;) and therefore cannot be processed. Replace the semicolon and repeat the procedure.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'This file path contains a semicolon (;) and therefore cannot be processed. Replace the semicolon and repeat the procedure.'.
		/// </summary>
		public static string FileNameContainsSemicolonError
		{
			get { return m_strFileNameContainsSemicolonError; }
		}

		private static string m_strFileNotFoundError =
			@"The specified file could not be found.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The specified file could not be found.'.
		/// </summary>
		public static string FileNotFoundError
		{
			get { return m_strFileNotFoundError; }
		}

		private static string m_strFileOrUrl =
			@"File/URL";
		/// <summary>
		/// Look up a localized string similar to
		/// 'File/URL'.
		/// </summary>
		public static string FileOrUrl
		{
			get { return m_strFileOrUrl; }
		}

		private static string m_strFiles =
			@"Files";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Files'.
		/// </summary>
		public static string Files
		{
			get { return m_strFiles; }
		}

		private static string m_strFileSaveQClosing =
			@"Save database changes before closing the file?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Save database changes before closing the file?'.
		/// </summary>
		public static string FileSaveQClosing
		{
			get { return m_strFileSaveQClosing; }
		}

		private static string m_strFileSaveQExiting =
			@"Save database changes before exiting KeePass?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Save database changes before exiting KeePass?'.
		/// </summary>
		public static string FileSaveQExiting
		{
			get { return m_strFileSaveQExiting; }
		}

		private static string m_strFileSaveQLocking =
			@"Save database changes before locking the workspace?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Save database changes before locking the workspace?'.
		/// </summary>
		public static string FileSaveQLocking
		{
			get { return m_strFileSaveQLocking; }
		}

		private static string m_strFileSaveQOpCancel =
			@"Abort the current operation.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Abort the current operation.'.
		/// </summary>
		public static string FileSaveQOpCancel
		{
			get { return m_strFileSaveQOpCancel; }
		}

		private static string m_strFileSaveQOpCancelClosing =
			@"The file will not be closed.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The file will not be closed.'.
		/// </summary>
		public static string FileSaveQOpCancelClosing
		{
			get { return m_strFileSaveQOpCancelClosing; }
		}

		private static string m_strFileSaveQOpCancelExiting =
			@"KeePass will not be closed.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'KeePass will not be closed.'.
		/// </summary>
		public static string FileSaveQOpCancelExiting
		{
			get { return m_strFileSaveQOpCancelExiting; }
		}

		private static string m_strFileSaveQOpCancelLocking =
			@"The KeePass workspace will not be locked.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The KeePass workspace will not be locked.'.
		/// </summary>
		public static string FileSaveQOpCancelLocking
		{
			get { return m_strFileSaveQOpCancelLocking; }
		}

		private static string m_strFileSaveQOpNoClosing =
			@"Discard all changes made to the database and close the file.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Discard all changes made to the database and close the file.'.
		/// </summary>
		public static string FileSaveQOpNoClosing
		{
			get { return m_strFileSaveQOpNoClosing; }
		}

		private static string m_strFileSaveQOpNoExiting =
			@"Discard all changes made to the database and exit KeePass.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Discard all changes made to the database and exit KeePass.'.
		/// </summary>
		public static string FileSaveQOpNoExiting
		{
			get { return m_strFileSaveQOpNoExiting; }
		}

		private static string m_strFileSaveQOpNoLocking =
			@"Discard all changes made to the database and lock the KeePass workspace.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Discard all changes made to the database and lock the KeePass workspace.'.
		/// </summary>
		public static string FileSaveQOpNoLocking
		{
			get { return m_strFileSaveQOpNoLocking; }
		}

		private static string m_strFileSaveQOpYesClosing =
			@"Save all changes made to the database and close the file.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Save all changes made to the database and close the file.'.
		/// </summary>
		public static string FileSaveQOpYesClosing
		{
			get { return m_strFileSaveQOpYesClosing; }
		}

		private static string m_strFileSaveQOpYesExiting =
			@"Save all changes made to the database and exit KeePass.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Save all changes made to the database and exit KeePass.'.
		/// </summary>
		public static string FileSaveQOpYesExiting
		{
			get { return m_strFileSaveQOpYesExiting; }
		}

		private static string m_strFileSaveQOpYesLocking =
			@"Save all changes made to the database and lock the KeePass workspace.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Save all changes made to the database and lock the KeePass workspace.'.
		/// </summary>
		public static string FileSaveQOpYesLocking
		{
			get { return m_strFileSaveQOpYesLocking; }
		}

		private static string m_strFileTxExtra =
			@"Extra-safe file transactions";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Extra-safe file transactions'.
		/// </summary>
		public static string FileTxExtra
		{
			get { return m_strFileTxExtra; }
		}

		private static string m_strFileVerifyHashFail =
			@"The new file's content does not match the data that KeePass has written, i.e. writing to the file has failed and it might be corrupted now.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The new file&#39;s content does not match the data that KeePass has written, i.e. writing to the file has failed and it might be corrupted now.'.
		/// </summary>
		public static string FileVerifyHashFail
		{
			get { return m_strFileVerifyHashFail; }
		}

		private static string m_strFileVerifyHashFailRec =
			@"Please try saving again, and if that fails, save the database to a different location.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Please try saving again, and if that fails, save the database to a different location.'.
		/// </summary>
		public static string FileVerifyHashFailRec
		{
			get { return m_strFileVerifyHashFailRec; }
		}

		private static string m_strFilter =
			@"Filter";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Filter'.
		/// </summary>
		public static string Filter
		{
			get { return m_strFilter; }
		}

		private static string m_strFind =
			@"Find";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Find'.
		/// </summary>
		public static string Find
		{
			get { return m_strFind; }
		}

		private static string m_strFocusQuickFindOnRestore =
			@"Focus quick search box when restoring from taskbar";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Focus quick search box when restoring from taskbar'.
		/// </summary>
		public static string FocusQuickFindOnRestore
		{
			get { return m_strFocusQuickFindOnRestore; }
		}

		private static string m_strFocusQuickFindOnUntray =
			@"Focus quick search box when restoring from tray";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Focus quick search box when restoring from tray'.
		/// </summary>
		public static string FocusQuickFindOnUntray
		{
			get { return m_strFocusQuickFindOnUntray; }
		}

		private static string m_strFocusResultsAfterQuickSearch =
			@"Focus entry list after a successful quick search";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Focus entry list after a successful quick search'.
		/// </summary>
		public static string FocusResultsAfterQuickSearch
		{
			get { return m_strFocusResultsAfterQuickSearch; }
		}

		private static string m_strFolder =
			@"Folder";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Folder'.
		/// </summary>
		public static string Folder
		{
			get { return m_strFolder; }
		}

		private static string m_strFont =
			@"Font";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Font'.
		/// </summary>
		public static string Font
		{
			get { return m_strFont; }
		}

		private static string m_strFontDefault =
			@"Default &Font";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Default &amp;Font'.
		/// </summary>
		public static string FontDefault
		{
			get { return m_strFontDefault; }
		}

		private static string m_strForceSystemFontUnix =
			@"Force using system font (Unix only)";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Force using system font (Unix only)'.
		/// </summary>
		public static string ForceSystemFontUnix
		{
			get { return m_strForceSystemFontUnix; }
		}

		private static string m_strFormat =
			@"Format";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Format'.
		/// </summary>
		public static string Format
		{
			get { return m_strFormat; }
		}

		private static string m_strFormatNoDatabaseDesc =
			@"This file format doesn't support database descriptions.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'This file format doesn&#39;t support database descriptions.'.
		/// </summary>
		public static string FormatNoDatabaseDesc
		{
			get { return m_strFormatNoDatabaseDesc; }
		}

		private static string m_strFormatNoDatabaseName =
			@"This file format doesn't support database names.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'This file format doesn&#39;t support database names.'.
		/// </summary>
		public static string FormatNoDatabaseName
		{
			get { return m_strFormatNoDatabaseName; }
		}

		private static string m_strFormatNoRootEntries =
			@"This file format doesn't support root groups. All entries in the root group are moved to the first subgroup.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'This file format doesn&#39;t support root groups. All entries in the root group are moved to the first subgroup.'.
		/// </summary>
		public static string FormatNoRootEntries
		{
			get { return m_strFormatNoRootEntries; }
		}

		private static string m_strFormatNoSubGroupsInRoot =
			@"To export to this file format, the root group must have at least one subgroup.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'To export to this file format, the root group must have at least one subgroup.'.
		/// </summary>
		public static string FormatNoSubGroupsInRoot
		{
			get { return m_strFormatNoSubGroupsInRoot; }
		}

		private static string m_strFormatOnlyOneAttachment =
			@"This file format only supports one attachment per entry. Only the first attachment is saved, the others are ignored.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'This file format only supports one attachment per entry. Only the first attachment is saved, the others are ignored.'.
		/// </summary>
		public static string FormatOnlyOneAttachment
		{
			get { return m_strFormatOnlyOneAttachment; }
		}

		private static string m_strGeneral =
			@"General";
		/// <summary>
		/// Look up a localized string similar to
		/// 'General'.
		/// </summary>
		public static string General
		{
			get { return m_strGeneral; }
		}

		private static string m_strGenerate =
			@"Generate";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Generate'.
		/// </summary>
		public static string Generate
		{
			get { return m_strGenerate; }
		}

		private static string m_strGenerateCount =
			@"Generated Passwords Count";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Generated Passwords Count'.
		/// </summary>
		public static string GenerateCount
		{
			get { return m_strGenerateCount; }
		}

		private static string m_strGenerateCountDesc =
			@"Enter number of passwords to generate.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Enter number of passwords to generate.'.
		/// </summary>
		public static string GenerateCountDesc
		{
			get { return m_strGenerateCountDesc; }
		}

		private static string m_strGenerateCountLongDesc =
			@"Please enter the number of passwords to generate:";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Please enter the number of passwords to generate:'.
		/// </summary>
		public static string GenerateCountLongDesc
		{
			get { return m_strGenerateCountLongDesc; }
		}

		private static string m_strGeneratedPasswordSamples =
			@"Generated Passwords Samples";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Generated Passwords Samples'.
		/// </summary>
		public static string GeneratedPasswordSamples
		{
			get { return m_strGeneratedPasswordSamples; }
		}

		private static string m_strGeneratePassword =
			@"Generate a password";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Generate a password'.
		/// </summary>
		public static string GeneratePassword
		{
			get { return m_strGeneratePassword; }
		}

		private static string m_strGenericCsvImporter =
			@"Generic CSV Importer";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Generic CSV Importer'.
		/// </summary>
		public static string GenericCsvImporter
		{
			get { return m_strGenericCsvImporter; }
		}

		private static string m_strGenProfileRemove =
			@"Remove selected profile";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Remove selected profile'.
		/// </summary>
		public static string GenProfileRemove
		{
			get { return m_strGenProfileRemove; }
		}

		private static string m_strGenProfileRemoveDesc =
			@"Remove the currently selected profile.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Remove the currently selected profile.'.
		/// </summary>
		public static string GenProfileRemoveDesc
		{
			get { return m_strGenProfileRemoveDesc; }
		}

		private static string m_strGenProfileSave =
			@"Save as Profile";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Save as Profile'.
		/// </summary>
		public static string GenProfileSave
		{
			get { return m_strGenProfileSave; }
		}

		private static string m_strGenProfileSaveDesc =
			@"Save current settings as a profile.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Save current settings as a profile.'.
		/// </summary>
		public static string GenProfileSaveDesc
		{
			get { return m_strGenProfileSaveDesc; }
		}

		private static string m_strGenProfileSaveDescLong =
			@"Please enter a name for the new password generator profile, or select an existing profile name to overwrite it:";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Please enter a name for the new password generator profile, or select an existing profile name to overwrite it:'.
		/// </summary>
		public static string GenProfileSaveDescLong
		{
			get { return m_strGenProfileSaveDescLong; }
		}

		private static string m_strGenPwAccept =
			@"Accept this password?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Accept this password?'.
		/// </summary>
		public static string GenPwAccept
		{
			get { return m_strGenPwAccept; }
		}

		private static string m_strGenPwBasedOnPrevious =
			@"Derive from previous password";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Derive from previous password'.
		/// </summary>
		public static string GenPwBasedOnPrevious
		{
			get { return m_strGenPwBasedOnPrevious; }
		}

		private static string m_strGenPwSprVariant =
			@"The generated password contains a placeholder. When using this password (e.g. by copying it to the clipboard or auto-typing it), the placeholder will be replaced, i.e. effectively a different password might be used.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The generated password contains a placeholder. When using this password (e.g. by copying it to the clipboard or auto-typing it), the placeholder will be replaced, i.e. effectively a different password might be used.'.
		/// </summary>
		public static string GenPwSprVariant
		{
			get { return m_strGenPwSprVariant; }
		}

		private static string m_strGradient =
			@"Gradient";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Gradient'.
		/// </summary>
		public static string Gradient
		{
			get { return m_strGradient; }
		}

		private static string m_strGroup =
			@"Group";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Group'.
		/// </summary>
		public static string Group
		{
			get { return m_strGroup; }
		}

		private static string m_strGroupCannotStoreEntries =
			@"The selected group cannot store any entries.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The selected group cannot store any entries.'.
		/// </summary>
		public static string GroupCannotStoreEntries
		{
			get { return m_strGroupCannotStoreEntries; }
		}

		private static string m_strGroupsSkipped =
			@"{PARAM} groups skipped";
		/// <summary>
		/// Look up a localized string similar to
		/// '{PARAM} groups skipped'.
		/// </summary>
		public static string GroupsSkipped
		{
			get { return m_strGroupsSkipped; }
		}

		private static string m_strGroupsSkipped1 =
			@"1 group skipped";
		/// <summary>
		/// Look up a localized string similar to
		/// '1 group skipped'.
		/// </summary>
		public static string GroupsSkipped1
		{
			get { return m_strGroupsSkipped1; }
		}

		private static string m_strHelpSourceNoLocalOption =
			@"This option is disabled, because local help is not installed.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'This option is disabled, because local help is not installed.'.
		/// </summary>
		public static string HelpSourceNoLocalOption
		{
			get { return m_strHelpSourceNoLocalOption; }
		}

		private static string m_strHelpSourceSelection =
			@"Help Source Selection";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Help Source Selection'.
		/// </summary>
		public static string HelpSourceSelection
		{
			get { return m_strHelpSourceSelection; }
		}

		private static string m_strHelpSourceSelectionDesc =
			@"Choose between local help and online help center.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Choose between local help and online help center.'.
		/// </summary>
		public static string HelpSourceSelectionDesc
		{
			get { return m_strHelpSourceSelectionDesc; }
		}

		private static string m_strHexKeyEx =
			@"Hex Key - {PARAM}-Bit";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Hex Key - {PARAM}-Bit'.
		/// </summary>
		public static string HexKeyEx
		{
			get { return m_strHexKeyEx; }
		}

		private static string m_strHexViewer =
			@"Hex Viewer";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Hex Viewer'.
		/// </summary>
		public static string HexViewer
		{
			get { return m_strHexViewer; }
		}

		private static string m_strHidden =
			@"Hidden";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Hidden'.
		/// </summary>
		public static string Hidden
		{
			get { return m_strHidden; }
		}

		private static string m_strHideCloseDatabaseTb =
			@"Hide 'Close Database' toolbar button when at most one database is opened";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Hide &#39;Close Database&#39; toolbar button when at most one database is opened'.
		/// </summary>
		public static string HideCloseDatabaseTb
		{
			get { return m_strHideCloseDatabaseTb; }
		}

		private static string m_strHideUsingAsterisks =
			@"Hide field using asterisks";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Hide field using asterisks'.
		/// </summary>
		public static string HideUsingAsterisks
		{
			get { return m_strHideUsingAsterisks; }
		}

		private static string m_strHistory =
			@"History";
		/// <summary>
		/// Look up a localized string similar to
		/// 'History'.
		/// </summary>
		public static string History
		{
			get { return m_strHistory; }
		}

		private static string m_strHomebanking =
			@"Homebanking";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Homebanking'.
		/// </summary>
		public static string Homebanking
		{
			get { return m_strHomebanking; }
		}

		private static string m_strHost =
			@"Host";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Host'.
		/// </summary>
		public static string Host
		{
			get { return m_strHost; }
		}

		private static string m_strHotKeyAltOnly =
			@"It is highly recommended not to use global hot keys with only Alt or Alt-Shift as modifier.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'It is highly recommended not to use global hot keys with only Alt or Alt-Shift as modifier.'.
		/// </summary>
		public static string HotKeyAltOnly
		{
			get { return m_strHotKeyAltOnly; }
		}

		private static string m_strHotKeyAltOnlyHint =
			@"Recommended modifiers are Ctrl-Alt, Ctrl-Shift and Ctrl-Alt-Shift.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Recommended modifiers are Ctrl-Alt, Ctrl-Shift and Ctrl-Alt-Shift.'.
		/// </summary>
		public static string HotKeyAltOnlyHint
		{
			get { return m_strHotKeyAltOnlyHint; }
		}

		private static string m_strHotKeyAltOnlyQuestion =
			@"Are you sure you want to use the specified hot keys?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Are you sure you want to use the specified hot keys?'.
		/// </summary>
		public static string HotKeyAltOnlyQuestion
		{
			get { return m_strHotKeyAltOnlyQuestion; }
		}

		private static string m_strIcon =
			@"Icon";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Icon'.
		/// </summary>
		public static string Icon
		{
			get { return m_strIcon; }
		}

		private static string m_strId =
			@"ID";
		/// <summary>
		/// Look up a localized string similar to
		/// 'ID'.
		/// </summary>
		public static string Id
		{
			get { return m_strId; }
		}

		private static string m_strIgnore =
			@"Ignore";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Ignore'.
		/// </summary>
		public static string Ignore
		{
			get { return m_strIgnore; }
		}

		private static string m_strImageFormatFeatureUnsupported =
			@"This file uses a file format feature that is not supported.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'This file uses a file format feature that is not supported.'.
		/// </summary>
		public static string ImageFormatFeatureUnsupported
		{
			get { return m_strImageFormatFeatureUnsupported; }
		}

		private static string m_strImageViewer =
			@"Image Viewer";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Image Viewer'.
		/// </summary>
		public static string ImageViewer
		{
			get { return m_strImageViewer; }
		}

		private static string m_strImport =
			@"Import";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Import'.
		/// </summary>
		public static string Import
		{
			get { return m_strImport; }
		}

		private static string m_strImportBehavior =
			@"Import Behavior";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Import Behavior'.
		/// </summary>
		public static string ImportBehavior
		{
			get { return m_strImportBehavior; }
		}

		private static string m_strImportBehaviorDesc =
			@"Select an import method.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Select an import method.'.
		/// </summary>
		public static string ImportBehaviorDesc
		{
			get { return m_strImportBehaviorDesc; }
		}

		private static string m_strImportFailed =
			@"Import failed.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Import failed.'.
		/// </summary>
		public static string ImportFailed
		{
			get { return m_strImportFailed; }
		}

		private static string m_strImportFileDesc =
			@"Import an external file.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Import an external file.'.
		/// </summary>
		public static string ImportFileDesc
		{
			get { return m_strImportFileDesc; }
		}

		private static string m_strImportFilesPrompt =
			@"Files to be imported:";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Files to be imported:'.
		/// </summary>
		public static string ImportFilesPrompt
		{
			get { return m_strImportFilesPrompt; }
		}

		private static string m_strImportFileTitle =
			@"Import File/Data";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Import File/Data'.
		/// </summary>
		public static string ImportFileTitle
		{
			get { return m_strImportFileTitle; }
		}

		private static string m_strImportFinished =
			@"The import process has finished!";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The import process has finished!'.
		/// </summary>
		public static string ImportFinished
		{
			get { return m_strImportFinished; }
		}

		private static string m_strImportingStatusMsg =
			@"Importing...";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Importing...'.
		/// </summary>
		public static string ImportingStatusMsg
		{
			get { return m_strImportingStatusMsg; }
		}

		private static string m_strImportMustRead =
			@"It is indispensable that you read the documentation about this import method before continuing.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'It is indispensable that you read the documentation about this import method before continuing.'.
		/// </summary>
		public static string ImportMustRead
		{
			get { return m_strImportMustRead; }
		}

		private static string m_strImportMustReadQuestion =
			@"Have you understood how the import process works and want to start it now?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Have you understood how the import process works and want to start it now?'.
		/// </summary>
		public static string ImportMustReadQuestion
		{
			get { return m_strImportMustReadQuestion; }
		}

		private static string m_strImportStc =
			@"Import into active database";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Import into active database'.
		/// </summary>
		public static string ImportStc
		{
			get { return m_strImportStc; }
		}

		private static string m_strIncompatibleEnv =
			@"incompatible with current environment";
		/// <summary>
		/// Look up a localized string similar to
		/// 'incompatible with current environment'.
		/// </summary>
		public static string IncompatibleEnv
		{
			get { return m_strIncompatibleEnv; }
		}

		private static string m_strIncompatibleWithSorting =
			@"incompatible with sorting";
		/// <summary>
		/// Look up a localized string similar to
		/// 'incompatible with sorting'.
		/// </summary>
		public static string IncompatibleWithSorting
		{
			get { return m_strIncompatibleWithSorting; }
		}

		private static string m_strInheritSettingFromParent =
			@"Inherit setting from parent";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Inherit setting from parent'.
		/// </summary>
		public static string InheritSettingFromParent
		{
			get { return m_strInheritSettingFromParent; }
		}

		private static string m_strInstalled =
			@"Installed";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Installed'.
		/// </summary>
		public static string Installed
		{
			get { return m_strInstalled; }
		}

		private static string m_strInterleavedKeySending =
			@"Allow interleaved sending of keys";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Allow interleaved sending of keys'.
		/// </summary>
		public static string InterleavedKeySending
		{
			get { return m_strInterleavedKeySending; }
		}

		private static string m_strInternalEditor =
			@"Internal Editor";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Internal Editor'.
		/// </summary>
		public static string InternalEditor
		{
			get { return m_strInternalEditor; }
		}

		private static string m_strInternalViewer =
			@"Internal Viewer";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Internal Viewer'.
		/// </summary>
		public static string InternalViewer
		{
			get { return m_strInternalViewer; }
		}

		private static string m_strInternet =
			@"Internet";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Internet'.
		/// </summary>
		public static string Internet
		{
			get { return m_strInternet; }
		}

		private static string m_strInvalidKey =
			@"Invalid Key";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Invalid Key'.
		/// </summary>
		public static string InvalidKey
		{
			get { return m_strInvalidKey; }
		}

		private static string m_strInvalidUrl =
			@"The specified URL is invalid.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The specified URL is invalid.'.
		/// </summary>
		public static string InvalidUrl
		{
			get { return m_strInvalidUrl; }
		}

		private static string m_strInvalidUserPassword =
			@"The specified user name / password combination is invalid.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The specified user name / password combination is invalid.'.
		/// </summary>
		public static string InvalidUserPassword
		{
			get { return m_strInvalidUserPassword; }
		}

		private static string m_strIOConnection =
			@"IO Connection";
		/// <summary>
		/// Look up a localized string similar to
		/// 'IO Connection'.
		/// </summary>
		public static string IOConnection
		{
			get { return m_strIOConnection; }
		}

		private static string m_strIOConnectionLong =
			@"File Input/Output Connections";
		/// <summary>
		/// Look up a localized string similar to
		/// 'File Input/Output Connections'.
		/// </summary>
		public static string IOConnectionLong
		{
			get { return m_strIOConnectionLong; }
		}

		private static string m_strItalic =
			@"Italic";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Italic'.
		/// </summary>
		public static string Italic
		{
			get { return m_strItalic; }
		}

		private static string m_strIterations =
			@"Iterations";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Iterations'.
		/// </summary>
		public static string Iterations
		{
			get { return m_strIterations; }
		}

		private static string m_strKdbKeePassLibC =
			@"The KeePassLibC library is required to open and save KDB files created by KeePass 1.x.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The KeePassLibC library is required to open and save KDB files created by KeePass 1.x.'.
		/// </summary>
		public static string KdbKeePassLibC
		{
			get { return m_strKdbKeePassLibC; }
		}

		private static string m_strKdbWUA =
			@"KDB files can be encrypted using a master password and/or a key file, not using a Windows User Account.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'KDB files can be encrypted using a master password and/or a key file, not using a Windows User Account.'.
		/// </summary>
		public static string KdbWUA
		{
			get { return m_strKdbWUA; }
		}

		private static string m_strKdbxFiles =
			@"KeePass KDBX Files";
		/// <summary>
		/// Look up a localized string similar to
		/// 'KeePass KDBX Files'.
		/// </summary>
		public static string KdbxFiles
		{
			get { return m_strKdbxFiles; }
		}

		private static string m_strKdfAdjust =
			@"The value of a key derivation function parameter lies outside the range of valid values. KeePass adjusts the value to the nearest valid value.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The value of a key derivation function parameter lies outside the range of valid values. KeePass adjusts the value to the nearest valid value.'.
		/// </summary>
		public static string KdfAdjust
		{
			get { return m_strKdfAdjust; }
		}

		private static string m_strKdfParams1Sec =
			@"Compute parameters that lead to a delay of 1 second on this computer.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Compute parameters that lead to a delay of 1 second on this computer.'.
		/// </summary>
		public static string KdfParams1Sec
		{
			get { return m_strKdfParams1Sec; }
		}

		private static string m_strKeePassLibCLong =
			@"KeePassLibC (1.x File Support)";
		/// <summary>
		/// Look up a localized string similar to
		/// 'KeePassLibC (1.x File Support)'.
		/// </summary>
		public static string KeePassLibCLong
		{
			get { return m_strKeePassLibCLong; }
		}

		private static string m_strKeePassLibCNotFound =
			@"KeePassLibC could not be found.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'KeePassLibC could not be found.'.
		/// </summary>
		public static string KeePassLibCNotFound
		{
			get { return m_strKeePassLibCNotFound; }
		}

		private static string m_strKeePassLibCNotWindows =
			@"Importing/exporting data from/to KDB files is only supported on Windows (because a library is used that contains the core code of KeePass 1.x, which is Windows-only).";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Importing/exporting data from/to KDB files is only supported on Windows (because a library is used that contains the core code of KeePass 1.x, which is Windows-only).'.
		/// </summary>
		public static string KeePassLibCNotWindows
		{
			get { return m_strKeePassLibCNotWindows; }
		}

		private static string m_strKeePassLibCNotWindowsHint =
			@"Please use a different file format for migrating your data.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Please use a different file format for migrating your data.'.
		/// </summary>
		public static string KeePassLibCNotWindowsHint
		{
			get { return m_strKeePassLibCNotWindowsHint; }
		}

		private static string m_strKeepExisting =
			@"&Keep existing";
		/// <summary>
		/// Look up a localized string similar to
		/// '&amp;Keep existing'.
		/// </summary>
		public static string KeepExisting
		{
			get { return m_strKeepExisting; }
		}

		private static string m_strKeyboardKeyAlt =
			@"Alt";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Alt'.
		/// </summary>
		public static string KeyboardKeyAlt
		{
			get { return m_strKeyboardKeyAlt; }
		}

		private static string m_strKeyboardKeyCtrl =
			@"Ctrl";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Ctrl'.
		/// </summary>
		public static string KeyboardKeyCtrl
		{
			get { return m_strKeyboardKeyCtrl; }
		}

		private static string m_strKeyboardKeyCtrlLeft =
			@"LCtrl";
		/// <summary>
		/// Look up a localized string similar to
		/// 'LCtrl'.
		/// </summary>
		public static string KeyboardKeyCtrlLeft
		{
			get { return m_strKeyboardKeyCtrlLeft; }
		}

		private static string m_strKeyboardKeyEsc =
			@"Esc";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Esc'.
		/// </summary>
		public static string KeyboardKeyEsc
		{
			get { return m_strKeyboardKeyEsc; }
		}

		private static string m_strKeyboardKeyModifiers =
			@"Key Modifiers";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Key Modifiers'.
		/// </summary>
		public static string KeyboardKeyModifiers
		{
			get { return m_strKeyboardKeyModifiers; }
		}

		private static string m_strKeyboardKeyReturn =
			@"Return";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Return'.
		/// </summary>
		public static string KeyboardKeyReturn
		{
			get { return m_strKeyboardKeyReturn; }
		}

		private static string m_strKeyboardKeyShift =
			@"Shift";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Shift'.
		/// </summary>
		public static string KeyboardKeyShift
		{
			get { return m_strKeyboardKeyShift; }
		}

		private static string m_strKeyboardKeyShiftLeft =
			@"LShift";
		/// <summary>
		/// Look up a localized string similar to
		/// 'LShift'.
		/// </summary>
		public static string KeyboardKeyShiftLeft
		{
			get { return m_strKeyboardKeyShiftLeft; }
		}

		private static string m_strKeyChanged =
			@"Key Changed";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Key Changed'.
		/// </summary>
		public static string KeyChanged
		{
			get { return m_strKeyChanged; }
		}

		private static string m_strKeyFile =
			@"Key file";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Key file'.
		/// </summary>
		public static string KeyFile
		{
			get { return m_strKeyFile; }
		}

		private static string m_strKeyFileCreate =
			@"Create a new key file";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Create a new key file'.
		/// </summary>
		public static string KeyFileCreate
		{
			get { return m_strKeyFileCreate; }
		}

		private static string m_strKeyFileError =
			@"The specified key file could not be found or its format is unknown.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The specified key file could not be found or its format is unknown.'.
		/// </summary>
		public static string KeyFileError
		{
			get { return m_strKeyFileError; }
		}

		private static string m_strKeyFiles =
			@"Key Files";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Key Files'.
		/// </summary>
		public static string KeyFiles
		{
			get { return m_strKeyFiles; }
		}

		private static string m_strKeyFileSelect =
			@"Select key file manually";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Select key file manually'.
		/// </summary>
		public static string KeyFileSelect
		{
			get { return m_strKeyFileSelect; }
		}

		private static string m_strKeyFileUseExisting =
			@"Use an existing file as key file";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Use an existing file as key file'.
		/// </summary>
		public static string KeyFileUseExisting
		{
			get { return m_strKeyFileUseExisting; }
		}

		private static string m_strKeyProvIncmpWithSD =
			@"The selected key provider cannot be used, because it is incompatible with the secure desktop.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The selected key provider cannot be used, because it is incompatible with the secure desktop.'.
		/// </summary>
		public static string KeyProvIncmpWithSD
		{
			get { return m_strKeyProvIncmpWithSD; }
		}

		private static string m_strKeyProvIncmpWithSDHint =
			@"If you want to use the selected key provider, you have to disable the secure desktop option in 'Tools' -> 'Options' -> tab 'Security'.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'If you want to use the selected key provider, you have to disable the secure desktop option in &#39;Tools&#39; -&gt; &#39;Options&#39; -&gt; tab &#39;Security&#39;.'.
		/// </summary>
		public static string KeyProvIncmpWithSDHint
		{
			get { return m_strKeyProvIncmpWithSDHint; }
		}

		private static string m_strLanguageSelected =
			@"The selected language has been activated. KeePass must be restarted in order to load the language.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The selected language has been activated. KeePass must be restarted in order to load the language.'.
		/// </summary>
		public static string LanguageSelected
		{
			get { return m_strLanguageSelected; }
		}

		private static string m_strLastAccessTime =
			@"Last Access Time";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Last Access Time'.
		/// </summary>
		public static string LastAccessTime
		{
			get { return m_strLastAccessTime; }
		}

		private static string m_strLastModificationTime =
			@"Last Modification Time";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Last Modification Time'.
		/// </summary>
		public static string LastModificationTime
		{
			get { return m_strLastModificationTime; }
		}

		private static string m_strLimitSingleInstance =
			@"Limit to single instance";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Limit to single instance'.
		/// </summary>
		public static string LimitSingleInstance
		{
			get { return m_strLimitSingleInstance; }
		}

		private static string m_strLocked =
			@"Locked";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Locked'.
		/// </summary>
		public static string Locked
		{
			get { return m_strLocked; }
		}

		private static string m_strLockMenuLock =
			@"&Lock Workspace";
		/// <summary>
		/// Look up a localized string similar to
		/// '&amp;Lock Workspace'.
		/// </summary>
		public static string LockMenuLock
		{
			get { return m_strLockMenuLock; }
		}

		private static string m_strLockMenuUnlock =
			@"Un&lock Workspace";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Un&amp;lock Workspace'.
		/// </summary>
		public static string LockMenuUnlock
		{
			get { return m_strLockMenuUnlock; }
		}

		private static string m_strLockOnMinimizeTaskbar =
			@"Lock workspace when minimizing main window to taskbar";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Lock workspace when minimizing main window to taskbar'.
		/// </summary>
		public static string LockOnMinimizeTaskbar
		{
			get { return m_strLockOnMinimizeTaskbar; }
		}

		private static string m_strLockOnMinimizeTray =
			@"Lock workspace when minimizing main window to tray";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Lock workspace when minimizing main window to tray'.
		/// </summary>
		public static string LockOnMinimizeTray
		{
			get { return m_strLockOnMinimizeTray; }
		}

		private static string m_strLockOnRemoteControlChange =
			@"Lock workspace when the remote control mode changes";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Lock workspace when the remote control mode changes'.
		/// </summary>
		public static string LockOnRemoteControlChange
		{
			get { return m_strLockOnRemoteControlChange; }
		}

		private static string m_strLockOnSessionSwitch =
			@"Lock workspace when locking the computer or switching the user";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Lock workspace when locking the computer or switching the user'.
		/// </summary>
		public static string LockOnSessionSwitch
		{
			get { return m_strLockOnSessionSwitch; }
		}

		private static string m_strLockOnSuspend =
			@"Lock workspace when the computer is about to be suspended";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Lock workspace when the computer is about to be suspended'.
		/// </summary>
		public static string LockOnSuspend
		{
			get { return m_strLockOnSuspend; }
		}

		private static string m_strMainInstruction =
			@"Main instruction";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Main instruction'.
		/// </summary>
		public static string MainInstruction
		{
			get { return m_strMainInstruction; }
		}

		private static string m_strMainWindow =
			@"Main Window";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Main Window'.
		/// </summary>
		public static string MainWindow
		{
			get { return m_strMainWindow; }
		}

		private static string m_strMasterKeyChanged =
			@"The master key has been changed!";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The master key has been changed!'.
		/// </summary>
		public static string MasterKeyChanged
		{
			get { return m_strMasterKeyChanged; }
		}

		private static string m_strMasterKeyChangedSavePrompt =
			@"Save the database now in order to get the new key applied.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Save the database now in order to get the new key applied.'.
		/// </summary>
		public static string MasterKeyChangedSavePrompt
		{
			get { return m_strMasterKeyChangedSavePrompt; }
		}

		private static string m_strMasterKeyChangeForce =
			@"The master key for this database has been used for quite a while and must be changed now.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The master key for this database has been used for quite a while and must be changed now.'.
		/// </summary>
		public static string MasterKeyChangeForce
		{
			get { return m_strMasterKeyChangeForce; }
		}

		private static string m_strMasterKeyChangeInfo =
			@"Click [OK] to open the master key changing dialog.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Click [OK] to open the master key changing dialog.'.
		/// </summary>
		public static string MasterKeyChangeInfo
		{
			get { return m_strMasterKeyChangeInfo; }
		}

		private static string m_strMasterKeyChangeQ =
			@"Do you want to change the master key now?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Do you want to change the master key now?'.
		/// </summary>
		public static string MasterKeyChangeQ
		{
			get { return m_strMasterKeyChangeQ; }
		}

		private static string m_strMasterKeyChangeRec =
			@"The master key for this database has been used for quite a while and it is recommended to change it now.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The master key for this database has been used for quite a while and it is recommended to change it now.'.
		/// </summary>
		public static string MasterKeyChangeRec
		{
			get { return m_strMasterKeyChangeRec; }
		}

		private static string m_strMasterKeyOnSecureDesktop =
			@"Enter master key on secure desktop";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Enter master key on secure desktop'.
		/// </summary>
		public static string MasterKeyOnSecureDesktop
		{
			get { return m_strMasterKeyOnSecureDesktop; }
		}

		private static string m_strMasterPasswordMinLengthFailed =
			@"The master password must be at least {PARAM} characters long!";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The master password must be at least {PARAM} characters long!'.
		/// </summary>
		public static string MasterPasswordMinLengthFailed
		{
			get { return m_strMasterPasswordMinLengthFailed; }
		}

		private static string m_strMasterPasswordMinQualityFailed =
			@"The estimated quality of the master password must be at least {PARAM} bits!";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The estimated quality of the master password must be at least {PARAM} bits!'.
		/// </summary>
		public static string MasterPasswordMinQualityFailed
		{
			get { return m_strMasterPasswordMinQualityFailed; }
		}

		private static string m_strMaximized =
			@"Maximized";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Maximized'.
		/// </summary>
		public static string Maximized
		{
			get { return m_strMaximized; }
		}

		private static string m_strMemory =
			@"Memory";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Memory'.
		/// </summary>
		public static string Memory
		{
			get { return m_strMemory; }
		}

		private static string m_strMenus =
			@"Menus";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Menus'.
		/// </summary>
		public static string Menus
		{
			get { return m_strMenus; }
		}

		private static string m_strMethod =
			@"Method";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Method'.
		/// </summary>
		public static string Method
		{
			get { return m_strMethod; }
		}

		private static string m_strMinimizeAfterCopy =
			@"Minimize main window after copying data to the clipboard";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Minimize main window after copying data to the clipboard'.
		/// </summary>
		public static string MinimizeAfterCopy
		{
			get { return m_strMinimizeAfterCopy; }
		}

		private static string m_strMinimizeAfterLocking =
			@"Minimize main window after locking the workspace";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Minimize main window after locking the workspace'.
		/// </summary>
		public static string MinimizeAfterLocking
		{
			get { return m_strMinimizeAfterLocking; }
		}

		private static string m_strMinimizeAfterOpeningDatabase =
			@"Minimize main window after opening a database";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Minimize main window after opening a database'.
		/// </summary>
		public static string MinimizeAfterOpeningDatabase
		{
			get { return m_strMinimizeAfterOpeningDatabase; }
		}

		private static string m_strMinimized =
			@"Minimized";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Minimized'.
		/// </summary>
		public static string Minimized
		{
			get { return m_strMinimized; }
		}

		private static string m_strMinimizeToTray =
			@"Minimize to tray instead of taskbar";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Minimize to tray instead of taskbar'.
		/// </summary>
		public static string MinimizeToTray
		{
			get { return m_strMinimizeToTray; }
		}

		private static string m_strMore =
			@"More";
		/// <summary>
		/// Look up a localized string similar to
		/// 'More'.
		/// </summary>
		public static string More
		{
			get { return m_strMore; }
		}

		private static string m_strMoreEntries =
			@"{PARAM} more entries";
		/// <summary>
		/// Look up a localized string similar to
		/// '{PARAM} more entries'.
		/// </summary>
		public static string MoreEntries
		{
			get { return m_strMoreEntries; }
		}

		private static string m_strName =
			@"Name";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Name'.
		/// </summary>
		public static string Name
		{
			get { return m_strName; }
		}

		private static string m_strNativeLibUse =
			@"Use native library for faster key transformations";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Use native library for faster key transformations'.
		/// </summary>
		public static string NativeLibUse
		{
			get { return m_strNativeLibUse; }
		}

		private static string m_strNavigation =
			@"Navigation";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Navigation'.
		/// </summary>
		public static string Navigation
		{
			get { return m_strNavigation; }
		}

		private static string m_strNetwork =
			@"Network";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Network'.
		/// </summary>
		public static string Network
		{
			get { return m_strNetwork; }
		}

		private static string m_strNeverExpires =
			@"Never expires";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Never expires'.
		/// </summary>
		public static string NeverExpires
		{
			get { return m_strNeverExpires; }
		}

		private static string m_strNew =
			@"New";
		/// <summary>
		/// Look up a localized string similar to
		/// 'New'.
		/// </summary>
		public static string New
		{
			get { return m_strNew; }
		}

		private static string m_strNewDatabase =
			@"New Database";
		/// <summary>
		/// Look up a localized string similar to
		/// 'New Database'.
		/// </summary>
		public static string NewDatabase
		{
			get { return m_strNewDatabase; }
		}

		private static string m_strNewDatabaseFileName =
			@"NewDatabase.kdbx";
		/// <summary>
		/// Look up a localized string similar to
		/// 'NewDatabase.kdbx'.
		/// </summary>
		public static string NewDatabaseFileName
		{
			get { return m_strNewDatabaseFileName; }
		}

		private static string m_strNewerNetRequired =
			@"A newer .NET Framework is required.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'A newer .NET Framework is required.'.
		/// </summary>
		public static string NewerNetRequired
		{
			get { return m_strNewerNetRequired; }
		}

		private static string m_strNewGroup =
			@"New Group";
		/// <summary>
		/// Look up a localized string similar to
		/// 'New Group'.
		/// </summary>
		public static string NewGroup
		{
			get { return m_strNewGroup; }
		}

		private static string m_strNewLine =
			@"New line";
		/// <summary>
		/// Look up a localized string similar to
		/// 'New line'.
		/// </summary>
		public static string NewLine
		{
			get { return m_strNewLine; }
		}

		private static string m_strNewState =
			@"New state";
		/// <summary>
		/// Look up a localized string similar to
		/// 'New state'.
		/// </summary>
		public static string NewState
		{
			get { return m_strNewState; }
		}

		private static string m_strNewVersionAvailable =
			@"New version available";
		/// <summary>
		/// Look up a localized string similar to
		/// 'New version available'.
		/// </summary>
		public static string NewVersionAvailable
		{
			get { return m_strNewVersionAvailable; }
		}

		private static string m_strNo =
			@"No";
		/// <summary>
		/// Look up a localized string similar to
		/// 'No'.
		/// </summary>
		public static string No
		{
			get { return m_strNo; }
		}

		private static string m_strNoCmd =
			@"&No";
		/// <summary>
		/// Look up a localized string similar to
		/// '&amp;No'.
		/// </summary>
		public static string NoCmd
		{
			get { return m_strNoCmd; }
		}

		private static string m_strNoEncNoCompress =
			@"Make sure that it is not encrypted and not compressed.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Make sure that it is not encrypted and not compressed.'.
		/// </summary>
		public static string NoEncNoCompress
		{
			get { return m_strNoEncNoCompress; }
		}

		private static string m_strNoFileAccessRead =
			@"The operating system didn't grant KeePass read access to the specified file.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The operating system didn&#39;t grant KeePass read access to the specified file.'.
		/// </summary>
		public static string NoFileAccessRead
		{
			get { return m_strNoFileAccessRead; }
		}

		private static string m_strNoKeyFileSpecifiedMeta =
			@"(None)";
		/// <summary>
		/// Look up a localized string similar to
		/// '(None)'.
		/// </summary>
		public static string NoKeyFileSpecifiedMeta
		{
			get { return m_strNoKeyFileSpecifiedMeta; }
		}

		private static string m_strNoKeyRepeat =
			@"No Key Repeat";
		/// <summary>
		/// Look up a localized string similar to
		/// 'No Key Repeat'.
		/// </summary>
		public static string NoKeyRepeat
		{
			get { return m_strNoKeyRepeat; }
		}

		private static string m_strNone =
			@"None";
		/// <summary>
		/// Look up a localized string similar to
		/// 'None'.
		/// </summary>
		public static string None
		{
			get { return m_strNone; }
		}

		private static string m_strNormal =
			@"Normal";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Normal'.
		/// </summary>
		public static string Normal
		{
			get { return m_strNormal; }
		}

		private static string m_strNoSort =
			@"&No Sort";
		/// <summary>
		/// Look up a localized string similar to
		/// '&amp;No Sort'.
		/// </summary>
		public static string NoSort
		{
			get { return m_strNoSort; }
		}

		private static string m_strNot =
			@"Not";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Not'.
		/// </summary>
		public static string Not
		{
			get { return m_strNot; }
		}

		private static string m_strNotRecommended =
			@"(not recommended)";
		/// <summary>
		/// Look up a localized string similar to
		/// '(not recommended)'.
		/// </summary>
		public static string NotRecommended
		{
			get { return m_strNotRecommended; }
		}

		private static string m_strNotes =
			@"Notes";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Notes'.
		/// </summary>
		public static string Notes
		{
			get { return m_strNotes; }
		}

		private static string m_strNotInstalled =
			@"Not installed";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Not installed'.
		/// </summary>
		public static string NotInstalled
		{
			get { return m_strNotInstalled; }
		}

		private static string m_strNoXslFile =
			@"The selected file isn't a valid XSL stylesheet.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The selected file isn&#39;t a valid XSL stylesheet.'.
		/// </summary>
		public static string NoXslFile
		{
			get { return m_strNoXslFile; }
		}

		private static string m_strObjectNotFound =
			@"The object with the specified name could not be found.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The object with the specified name could not be found.'.
		/// </summary>
		public static string ObjectNotFound
		{
			get { return m_strObjectNotFound; }
		}

		private static string m_strObjectsDeleted =
			@"{PARAM} object(s) deleted";
		/// <summary>
		/// Look up a localized string similar to
		/// '{PARAM} object(s) deleted'.
		/// </summary>
		public static string ObjectsDeleted
		{
			get { return m_strObjectsDeleted; }
		}

		private static string m_strOff =
			@"Off";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Off'.
		/// </summary>
		public static string Off
		{
			get { return m_strOff; }
		}

		private static string m_strOfLower =
			@"of";
		/// <summary>
		/// Look up a localized string similar to
		/// 'of'.
		/// </summary>
		public static string OfLower
		{
			get { return m_strOfLower; }
		}

		private static string m_strOk =
			@"OK";
		/// <summary>
		/// Look up a localized string similar to
		/// 'OK'.
		/// </summary>
		public static string Ok
		{
			get { return m_strOk; }
		}

		private static string m_strOldFormat =
			@"Old Format";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Old Format'.
		/// </summary>
		public static string OldFormat
		{
			get { return m_strOldFormat; }
		}

		private static string m_strOn =
			@"On";
		/// <summary>
		/// Look up a localized string similar to
		/// 'On'.
		/// </summary>
		public static string On
		{
			get { return m_strOn; }
		}

		private static string m_strOpAborted =
			@"Operation aborted.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Operation aborted.'.
		/// </summary>
		public static string OpAborted
		{
			get { return m_strOpAborted; }
		}

		private static string m_strOpenCmd =
			@"&Open";
		/// <summary>
		/// Look up a localized string similar to
		/// '&amp;Open'.
		/// </summary>
		public static string OpenCmd
		{
			get { return m_strOpenCmd; }
		}

		private static string m_strOpenDatabase =
			@"Open Database";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Open Database'.
		/// </summary>
		public static string OpenDatabase
		{
			get { return m_strOpenDatabase; }
		}

		private static string m_strOpenDatabaseFile =
			@"Open Database File";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Open Database File'.
		/// </summary>
		public static string OpenDatabaseFile
		{
			get { return m_strOpenDatabaseFile; }
		}

		private static string m_strOpenDatabaseFileStc =
			@"Open database file";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Open database file'.
		/// </summary>
		public static string OpenDatabaseFileStc
		{
			get { return m_strOpenDatabaseFileStc; }
		}

		private static string m_strOpened =
			@"Opened";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Opened'.
		/// </summary>
		public static string Opened
		{
			get { return m_strOpened; }
		}

		private static string m_strOpenedDatabaseFile =
			@"Opened database file";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Opened database file'.
		/// </summary>
		public static string OpenedDatabaseFile
		{
			get { return m_strOpenedDatabaseFile; }
		}

		private static string m_strOpeningDatabase =
			@"Opening password database...";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Opening password database...'.
		/// </summary>
		public static string OpeningDatabase
		{
			get { return m_strOpeningDatabase; }
		}

		private static string m_strOpenUrl =
			@"&Open URL(s)";
		/// <summary>
		/// Look up a localized string similar to
		/// '&amp;Open URL(s)'.
		/// </summary>
		public static string OpenUrl
		{
			get { return m_strOpenUrl; }
		}

		private static string m_strOpenWith =
			@"Open with {PARAM}";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Open with {PARAM}'.
		/// </summary>
		public static string OpenWith
		{
			get { return m_strOpenWith; }
		}

		private static string m_strOptimizeForScreenReader =
			@"Optimize for screen reader (only enable if you're using a screen reader)";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Optimize for screen reader (only enable if you&#39;re using a screen reader)'.
		/// </summary>
		public static string OptimizeForScreenReader
		{
			get { return m_strOptimizeForScreenReader; }
		}

		private static string m_strOptions =
			@"Options";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Options'.
		/// </summary>
		public static string Options
		{
			get { return m_strOptions; }
		}

		private static string m_strOptionsDesc =
			@"Here you can configure the global KeePass program options.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Here you can configure the global KeePass program options.'.
		/// </summary>
		public static string OptionsDesc
		{
			get { return m_strOptionsDesc; }
		}

		private static string m_strOtherPlaceholders =
			@"Other Placeholders";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Other Placeholders'.
		/// </summary>
		public static string OtherPlaceholders
		{
			get { return m_strOtherPlaceholders; }
		}

		private static string m_strOverridesBuiltIn =
			@"Built-In Overrides";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Built-In Overrides'.
		/// </summary>
		public static string OverridesBuiltIn
		{
			get { return m_strOverridesBuiltIn; }
		}

		private static string m_strOverridesCustom =
			@"Custom Overrides";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Custom Overrides'.
		/// </summary>
		public static string OverridesCustom
		{
			get { return m_strOverridesCustom; }
		}

		private static string m_strOverwrite =
			@"Overwrite";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Overwrite'.
		/// </summary>
		public static string Overwrite
		{
			get { return m_strOverwrite; }
		}

		private static string m_strOverwriteExisting =
			@"Overwrite &existing";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Overwrite &amp;existing'.
		/// </summary>
		public static string OverwriteExisting
		{
			get { return m_strOverwriteExisting; }
		}

		private static string m_strOverwriteExistingFileQuestion =
			@"Overwrite the existing file?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Overwrite the existing file?'.
		/// </summary>
		public static string OverwriteExistingFileQuestion
		{
			get { return m_strOverwriteExistingFileQuestion; }
		}

		private static string m_strOverwriteIfNewer =
			@"Overwrite if &newer";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Overwrite if &amp;newer'.
		/// </summary>
		public static string OverwriteIfNewer
		{
			get { return m_strOverwriteIfNewer; }
		}

		private static string m_strOverwriteIfNewerAndApplyDel =
			@"Overwrite if newer and apply &deletions";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Overwrite if newer and apply &amp;deletions'.
		/// </summary>
		public static string OverwriteIfNewerAndApplyDel
		{
			get { return m_strOverwriteIfNewerAndApplyDel; }
		}

		private static string m_strPackageInstallHint =
			@"Install this package and try again.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Install this package and try again.'.
		/// </summary>
		public static string PackageInstallHint
		{
			get { return m_strPackageInstallHint; }
		}

		private static string m_strParallelism =
			@"Parallelism";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Parallelism'.
		/// </summary>
		public static string Parallelism
		{
			get { return m_strParallelism; }
		}

		private static string m_strParamDescHelp =
			@"Detailed descriptions of all parameters can be found in the help manual.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Detailed descriptions of all parameters can be found in the help manual.'.
		/// </summary>
		public static string ParamDescHelp
		{
			get { return m_strParamDescHelp; }
		}

		private static string m_strParameters =
			@"Parameters";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Parameters'.
		/// </summary>
		public static string Parameters
		{
			get { return m_strParameters; }
		}

		private static string m_strPassword =
			@"Password";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Password'.
		/// </summary>
		public static string Password
		{
			get { return m_strPassword; }
		}

		private static string m_strPasswordLength =
			@"Password length";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Password length'.
		/// </summary>
		public static string PasswordLength
		{
			get { return m_strPasswordLength; }
		}

		private static string m_strPasswordManagers =
			@"Password Managers";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Password Managers'.
		/// </summary>
		public static string PasswordManagers
		{
			get { return m_strPasswordManagers; }
		}

		private static string m_strPasswordOptions =
			@"Password Generation Options";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Password Generation Options'.
		/// </summary>
		public static string PasswordOptions
		{
			get { return m_strPasswordOptions; }
		}

		private static string m_strPasswordOptionsDesc =
			@"Here you can define properties of generated passwords.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Here you can define properties of generated passwords.'.
		/// </summary>
		public static string PasswordOptionsDesc
		{
			get { return m_strPasswordOptionsDesc; }
		}

		private static string m_strPasswordPrompt =
			@"Enter the password:";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Enter the password:'.
		/// </summary>
		public static string PasswordPrompt
		{
			get { return m_strPasswordPrompt; }
		}

		private static string m_strPasswordRepeatFailed =
			@"Password and repeated password aren't identical!";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Password and repeated password aren&#39;t identical!'.
		/// </summary>
		public static string PasswordRepeatFailed
		{
			get { return m_strPasswordRepeatFailed; }
		}

		private static string m_strPasswordRepeatHint =
			@"Repeat the password to prevent typing errors.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Repeat the password to prevent typing errors.'.
		/// </summary>
		public static string PasswordRepeatHint
		{
			get { return m_strPasswordRepeatHint; }
		}

		private static string m_strPaste =
			@"Paste";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Paste'.
		/// </summary>
		public static string Paste
		{
			get { return m_strPaste; }
		}

		private static string m_strPerformAutoType =
			@"Perform Auto-&Type";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Perform Auto-&amp;Type'.
		/// </summary>
		public static string PerformAutoType
		{
			get { return m_strPerformAutoType; }
		}

		private static string m_strPerformGlobalAutoType =
			@"Perform global auto-type";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Perform global auto-type'.
		/// </summary>
		public static string PerformGlobalAutoType
		{
			get { return m_strPerformGlobalAutoType; }
		}

		private static string m_strPerformSelectedAutoType =
			@"Perform auto-type with selected entry";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Perform auto-type with selected entry'.
		/// </summary>
		public static string PerformSelectedAutoType
		{
			get { return m_strPerformSelectedAutoType; }
		}

		private static string m_strPickCharacters =
			@"Pick Characters";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Pick Characters'.
		/// </summary>
		public static string PickCharacters
		{
			get { return m_strPickCharacters; }
		}

		private static string m_strPickCharactersDesc =
			@"Select the requested character positions.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Select the requested character positions.'.
		/// </summary>
		public static string PickCharactersDesc
		{
			get { return m_strPickCharactersDesc; }
		}

		private static string m_strPickField =
			@"Pick Field";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Pick Field'.
		/// </summary>
		public static string PickField
		{
			get { return m_strPickField; }
		}

		private static string m_strPickFieldDesc =
			@"Choose a field whose value will be inserted.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Choose a field whose value will be inserted.'.
		/// </summary>
		public static string PickFieldDesc
		{
			get { return m_strPickFieldDesc; }
		}

		private static string m_strPickIcon =
			@"Pick an icon.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Pick an icon.'.
		/// </summary>
		public static string PickIcon
		{
			get { return m_strPickIcon; }
		}

		private static string m_strPlugin =
			@"Plugin";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Plugin'.
		/// </summary>
		public static string Plugin
		{
			get { return m_strPlugin; }
		}

		private static string m_strPlugin1x =
			@"This plugin appears to be a plugin for KeePass 1.x.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'This plugin appears to be a plugin for KeePass 1.x.'.
		/// </summary>
		public static string Plugin1x
		{
			get { return m_strPlugin1x; }
		}

		private static string m_strPlugin1xHint =
			@"KeePass 1.x plugins cannot be used together with KeePass 2.x and vice versa.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'KeePass 1.x plugins cannot be used together with KeePass 2.x and vice versa.'.
		/// </summary>
		public static string Plugin1xHint
		{
			get { return m_strPlugin1xHint; }
		}

		private static string m_strPluginCacheClearInfo =
			@"The plugin cache will be cleared and rebuilt if necessary when KeePass is restarted.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The plugin cache will be cleared and rebuilt if necessary when KeePass is restarted.'.
		/// </summary>
		public static string PluginCacheClearInfo
		{
			get { return m_strPluginCacheClearInfo; }
		}

		private static string m_strPluginIncompatible =
			@"The following plugin is incompatible with the current KeePass version:";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The following plugin is incompatible with the current KeePass version:'.
		/// </summary>
		public static string PluginIncompatible
		{
			get { return m_strPluginIncompatible; }
		}

		private static string m_strPluginLoadFailed =
			@"The plugin cannot be loaded.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The plugin cannot be loaded.'.
		/// </summary>
		public static string PluginLoadFailed
		{
			get { return m_strPluginLoadFailed; }
		}

		private static string m_strPluginOperatingSystemUnsupported =
			@"The current operating system is unsupported by the plugin.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The current operating system is unsupported by the plugin.'.
		/// </summary>
		public static string PluginOperatingSystemUnsupported
		{
			get { return m_strPluginOperatingSystemUnsupported; }
		}

		private static string m_strPluginProvided =
			@"Provided by Plugins";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Provided by Plugins'.
		/// </summary>
		public static string PluginProvided
		{
			get { return m_strPluginProvided; }
		}

		private static string m_strPlugins =
			@"Plugins";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Plugins'.
		/// </summary>
		public static string Plugins
		{
			get { return m_strPlugins; }
		}

		private static string m_strPluginsCompilingAndLoading =
			@"Compiling and loading plugins...";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Compiling and loading plugins...'.
		/// </summary>
		public static string PluginsCompilingAndLoading
		{
			get { return m_strPluginsCompilingAndLoading; }
		}

		private static string m_strPluginsDesc =
			@"Here you can configure all loaded KeePass plugins.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Here you can configure all loaded KeePass plugins.'.
		/// </summary>
		public static string PluginsDesc
		{
			get { return m_strPluginsDesc; }
		}

		private static string m_strPluginUpdateHint =
			@"Have a look at the plugin's website for an appropriate version.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Have a look at the plugin&#39;s website for an appropriate version.'.
		/// </summary>
		public static string PluginUpdateHint
		{
			get { return m_strPluginUpdateHint; }
		}

		private static string m_strPolicyAutoTypeDesc =
			@"Allow auto-typing entries to other windows.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Allow auto-typing entries to other windows.'.
		/// </summary>
		public static string PolicyAutoTypeDesc
		{
			get { return m_strPolicyAutoTypeDesc; }
		}

		private static string m_strPolicyAutoTypeWithoutContextDesc =
			@"Allow auto-typing using the 'Perform Auto-Type' command (Ctrl+V).";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Allow auto-typing using the &#39;Perform Auto-Type&#39; command (Ctrl+V).'.
		/// </summary>
		public static string PolicyAutoTypeWithoutContextDesc
		{
			get { return m_strPolicyAutoTypeWithoutContextDesc; }
		}

		private static string m_strPolicyChangeMasterKey =
			@"Allow changing the master key of a database.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Allow changing the master key of a database.'.
		/// </summary>
		public static string PolicyChangeMasterKey
		{
			get { return m_strPolicyChangeMasterKey; }
		}

		private static string m_strPolicyChangeMasterKeyNoKeyDesc =
			@"Do not require entering current master key before changing it.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Do not require entering current master key before changing it.'.
		/// </summary>
		public static string PolicyChangeMasterKeyNoKeyDesc
		{
			get { return m_strPolicyChangeMasterKeyNoKeyDesc; }
		}

		private static string m_strPolicyClipboardDesc =
			@"Allow copying entry information to clipboard (main window only).";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Allow copying entry information to clipboard (main window only).'.
		/// </summary>
		public static string PolicyClipboardDesc
		{
			get { return m_strPolicyClipboardDesc; }
		}

		private static string m_strPolicyCopyWholeEntriesDesc =
			@"Allow copying whole entries to clipboard.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Allow copying whole entries to clipboard.'.
		/// </summary>
		public static string PolicyCopyWholeEntriesDesc
		{
			get { return m_strPolicyCopyWholeEntriesDesc; }
		}

		private static string m_strPolicyDisallowed =
			@"This operation is disallowed by the application policy. Ask your administrator to allow this operation.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'This operation is disallowed by the application policy. Ask your administrator to allow this operation.'.
		/// </summary>
		public static string PolicyDisallowed
		{
			get { return m_strPolicyDisallowed; }
		}

		private static string m_strPolicyDragDropDesc =
			@"Allow sending information to other windows using drag&drop.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Allow sending information to other windows using drag&amp;drop.'.
		/// </summary>
		public static string PolicyDragDropDesc
		{
			get { return m_strPolicyDragDropDesc; }
		}

		private static string m_strPolicyExportDesc2 =
			@"Allow exporting entries.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Allow exporting entries.'.
		/// </summary>
		public static string PolicyExportDesc2
		{
			get { return m_strPolicyExportDesc2; }
		}

		private static string m_strPolicyExportNoKeyDesc =
			@"Do not require entering current master key before exporting.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Do not require entering current master key before exporting.'.
		/// </summary>
		public static string PolicyExportNoKeyDesc
		{
			get { return m_strPolicyExportNoKeyDesc; }
		}

		private static string m_strPolicyImportDesc =
			@"Allow importing entries from external files.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Allow importing entries from external files.'.
		/// </summary>
		public static string PolicyImportDesc
		{
			get { return m_strPolicyImportDesc; }
		}

		private static string m_strPolicyNewDatabaseDesc =
			@"Allow creating new database files.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Allow creating new database files.'.
		/// </summary>
		public static string PolicyNewDatabaseDesc
		{
			get { return m_strPolicyNewDatabaseDesc; }
		}

		private static string m_strPolicyPluginsDesc =
			@"Allow loading plugins to extend KeePass functionality.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Allow loading plugins to extend KeePass functionality.'.
		/// </summary>
		public static string PolicyPluginsDesc
		{
			get { return m_strPolicyPluginsDesc; }
		}

		private static string m_strPolicyPrintDesc =
			@"Allow printing entry lists.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Allow printing entry lists.'.
		/// </summary>
		public static string PolicyPrintDesc
		{
			get { return m_strPolicyPrintDesc; }
		}

		private static string m_strPolicyPrintNoKeyDesc =
			@"Do not require entering current master key before printing.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Do not require entering current master key before printing.'.
		/// </summary>
		public static string PolicyPrintNoKeyDesc
		{
			get { return m_strPolicyPrintNoKeyDesc; }
		}

		private static string m_strPolicyRequiredFlag =
			@"The following policy flag is required";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The following policy flag is required'.
		/// </summary>
		public static string PolicyRequiredFlag
		{
			get { return m_strPolicyRequiredFlag; }
		}

		private static string m_strPolicySaveDatabaseDesc =
			@"Allow saving databases to disk/URL.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Allow saving databases to disk/URL.'.
		/// </summary>
		public static string PolicySaveDatabaseDesc
		{
			get { return m_strPolicySaveDatabaseDesc; }
		}

		private static string m_strPolicyTriggersEditDesc =
			@"Allow editing triggers.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Allow editing triggers.'.
		/// </summary>
		public static string PolicyTriggersEditDesc
		{
			get { return m_strPolicyTriggersEditDesc; }
		}

		private static string m_strPreReleaseVersion =
			@"Pre-release version";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Pre-release version'.
		/// </summary>
		public static string PreReleaseVersion
		{
			get { return m_strPreReleaseVersion; }
		}

		private static string m_strPrint =
			@"Print";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Print'.
		/// </summary>
		public static string Print
		{
			get { return m_strPrint; }
		}

		private static string m_strPrintDesc =
			@"Print password entries.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Print password entries.'.
		/// </summary>
		public static string PrintDesc
		{
			get { return m_strPrintDesc; }
		}

		private static string m_strPrivate =
			@"Private";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Private'.
		/// </summary>
		public static string Private
		{
			get { return m_strPrivate; }
		}

		private static string m_strProfessional =
			@"Professional";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Professional'.
		/// </summary>
		public static string Professional
		{
			get { return m_strProfessional; }
		}

		private static string m_strQuickSearchExclExpired =
			@"Exclude expired entries in quick searches";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Exclude expired entries in quick searches'.
		/// </summary>
		public static string QuickSearchExclExpired
		{
			get { return m_strQuickSearchExclExpired; }
		}

		private static string m_strQuickSearchInPwFields =
			@"Search for passwords in quick searches";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Search for passwords in quick searches'.
		/// </summary>
		public static string QuickSearchInPwFields
		{
			get { return m_strQuickSearchInPwFields; }
		}

		private static string m_strQuickSearchDerefData =
			@"Resolve field references in quick searches";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Resolve field references in quick searches'.
		/// </summary>
		public static string QuickSearchDerefData
		{
			get { return m_strQuickSearchDerefData; }
		}

		private static string m_strQuickSearchTb =
			@"Quick Search (Toolbar)";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Quick Search (Toolbar)'.
		/// </summary>
		public static string QuickSearchTb
		{
			get { return m_strQuickSearchTb; }
		}

		private static string m_strRandomMacAddress =
			@"Random MAC Address";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Random MAC Address'.
		/// </summary>
		public static string RandomMacAddress
		{
			get { return m_strRandomMacAddress; }
		}

		private static string m_strReady =
			@"Ready.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Ready.'.
		/// </summary>
		public static string Ready
		{
			get { return m_strReady; }
		}

		private static string m_strRecommended =
			@"recommended";
		/// <summary>
		/// Look up a localized string similar to
		/// 'recommended'.
		/// </summary>
		public static string Recommended
		{
			get { return m_strRecommended; }
		}

		private static string m_strRecommendedCmd =
			@"&Recommended";
		/// <summary>
		/// Look up a localized string similar to
		/// '&amp;Recommended'.
		/// </summary>
		public static string RecommendedCmd
		{
			get { return m_strRecommendedCmd; }
		}

		private static string m_strRecycleBin =
			@"Recycle Bin";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Recycle Bin'.
		/// </summary>
		public static string RecycleBin
		{
			get { return m_strRecycleBin; }
		}

		private static string m_strRecycleBinCollapse =
			@"Collapse newly-created recycle bin tree node";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Collapse newly-created recycle bin tree node'.
		/// </summary>
		public static string RecycleBinCollapse
		{
			get { return m_strRecycleBinCollapse; }
		}

		private static string m_strRecycleEntryConfirm =
			@"Are you sure you want to move the selected entries to the recycle bin?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Are you sure you want to move the selected entries to the recycle bin?'.
		/// </summary>
		public static string RecycleEntryConfirm
		{
			get { return m_strRecycleEntryConfirm; }
		}

		private static string m_strRecycleEntryConfirmSingle =
			@"Are you sure you want to move the selected entry to the recycle bin?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Are you sure you want to move the selected entry to the recycle bin?'.
		/// </summary>
		public static string RecycleEntryConfirmSingle
		{
			get { return m_strRecycleEntryConfirmSingle; }
		}

		private static string m_strRecycleGroupConfirm =
			@"Are you sure you want to move the selected group to the recycle bin?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Are you sure you want to move the selected group to the recycle bin?'.
		/// </summary>
		public static string RecycleGroupConfirm
		{
			get { return m_strRecycleGroupConfirm; }
		}

		private static string m_strRecycleShowConfirm =
			@"Show confirmation dialog when moving entries/groups to the recycle bin";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Show confirmation dialog when moving entries/groups to the recycle bin'.
		/// </summary>
		public static string RecycleShowConfirm
		{
			get { return m_strRecycleShowConfirm; }
		}

		private static string m_strRedo =
			@"Redo";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Redo'.
		/// </summary>
		public static string Redo
		{
			get { return m_strRedo; }
		}

		private static string m_strRememberHidingSettings =
			@"Remember password hiding setting in 'Edit Entry' window";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Remember password hiding setting in &#39;Edit Entry&#39; window'.
		/// </summary>
		public static string RememberHidingSettings
		{
			get { return m_strRememberHidingSettings; }
		}

		private static string m_strRememberKeySources =
			@"Remember key sources (key file paths, provider names, ...)";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Remember key sources (key file paths, provider names, ...)'.
		/// </summary>
		public static string RememberKeySources
		{
			get { return m_strRememberKeySources; }
		}

		private static string m_strRememberWorkingDirectories =
			@"Remember working directories";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Remember working directories'.
		/// </summary>
		public static string RememberWorkingDirectories
		{
			get { return m_strRememberWorkingDirectories; }
		}

		private static string m_strRemoteHostReachable =
			@"Remote host is reachable (ping)";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Remote host is reachable (ping)'.
		/// </summary>
		public static string RemoteHostReachable
		{
			get { return m_strRemoteHostReachable; }
		}

		private static string m_strRepairCmd =
			@"&Repair";
		/// <summary>
		/// Look up a localized string similar to
		/// '&amp;Repair'.
		/// </summary>
		public static string RepairCmd
		{
			get { return m_strRepairCmd; }
		}

		private static string m_strRepairMode =
			@"Repair Mode";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Repair Mode'.
		/// </summary>
		public static string RepairMode
		{
			get { return m_strRepairMode; }
		}

		private static string m_strRepairModeInt =
			@"In repair mode, the integrity of the data is not checked (in order to rescue as much data as possible). When no integrity checks are performed, corrupted/malicious data might be incorporated into the database.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'In repair mode, the integrity of the data is not checked (in order to rescue as much data as possible). When no integrity checks are performed, corrupted/malicious data might be incorporated into the database.'.
		/// </summary>
		public static string RepairModeInt
		{
			get { return m_strRepairModeInt; }
		}

		private static string m_strRepairModeQ =
			@"Are you sure you want to attempt to repair the selected file?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Are you sure you want to attempt to repair the selected file?'.
		/// </summary>
		public static string RepairModeQ
		{
			get { return m_strRepairModeQ; }
		}

		private static string m_strRepairModeUse =
			@"Thus the repair functionality should only be used when there really is no other solution. If you use it, afterwards you should thoroughly check your whole database for corrupted/malicious data.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Thus the repair functionality should only be used when there really is no other solution. If you use it, afterwards you should thoroughly check your whole database for corrupted/malicious data.'.
		/// </summary>
		public static string RepairModeUse
		{
			get { return m_strRepairModeUse; }
		}

		private static string m_strRepeatOnlyWhenHidden =
			@"Require password repetition only when hiding using asterisks is enabled";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Require password repetition only when hiding using asterisks is enabled'.
		/// </summary>
		public static string RepeatOnlyWhenHidden
		{
			get { return m_strRepeatOnlyWhenHidden; }
		}

		private static string m_strRestartKeePassQuestion =
			@"Do you wish to restart KeePass now?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Do you wish to restart KeePass now?'.
		/// </summary>
		public static string RestartKeePassQuestion
		{
			get { return m_strRestartKeePassQuestion; }
		}

		private static string m_strRetry =
			@"Retry";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Retry'.
		/// </summary>
		public static string Retry
		{
			get { return m_strRetry; }
		}

		private static string m_strRetryCmd =
			@"&Retry";
		/// <summary>
		/// Look up a localized string similar to
		/// '&amp;Retry'.
		/// </summary>
		public static string RetryCmd
		{
			get { return m_strRetryCmd; }
		}

		private static string m_strRootDirectory =
			@"Root Directory";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Root Directory'.
		/// </summary>
		public static string RootDirectory
		{
			get { return m_strRootDirectory; }
		}

		private static string m_strSameKeybLayout =
			@"Ensure same keyboard layouts during auto-type";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Ensure same keyboard layouts during auto-type'.
		/// </summary>
		public static string SameKeybLayout
		{
			get { return m_strSameKeybLayout; }
		}

		private static string m_strSampleEntry =
			@"Sample Entry";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Sample Entry'.
		/// </summary>
		public static string SampleEntry
		{
			get { return m_strSampleEntry; }
		}

		private static string m_strSave =
			@"Save";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Save'.
		/// </summary>
		public static string Save
		{
			get { return m_strSave; }
		}

		private static string m_strSaveBeforeCloseEntry =
			@"Do you want to save the changes you have made to this entry?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Do you want to save the changes you have made to this entry?'.
		/// </summary>
		public static string SaveBeforeCloseEntry
		{
			get { return m_strSaveBeforeCloseEntry; }
		}

		private static string m_strSaveBeforeCloseQuestion =
			@"Do you want to save the changes before closing?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Do you want to save the changes before closing?'.
		/// </summary>
		public static string SaveBeforeCloseQuestion
		{
			get { return m_strSaveBeforeCloseQuestion; }
		}

		private static string m_strSaveBeforeCloseTitle =
			@"KeePass - Save Before Close/Lock?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'KeePass - Save Before Close/Lock?'.
		/// </summary>
		public static string SaveBeforeCloseTitle
		{
			get { return m_strSaveBeforeCloseTitle; }
		}

		private static string m_strSaveCmd =
			@"&Save";
		/// <summary>
		/// Look up a localized string similar to
		/// '&amp;Save'.
		/// </summary>
		public static string SaveCmd
		{
			get { return m_strSaveCmd; }
		}

		private static string m_strSaveDatabase =
			@"Save Database";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Save Database'.
		/// </summary>
		public static string SaveDatabase
		{
			get { return m_strSaveDatabase; }
		}

		private static string m_strSaveDatabaseStc =
			@"Save active database";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Save active database'.
		/// </summary>
		public static string SaveDatabaseStc
		{
			get { return m_strSaveDatabaseStc; }
		}

		private static string m_strSavedDatabaseFile =
			@"Saved database file";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Saved database file'.
		/// </summary>
		public static string SavedDatabaseFile
		{
			get { return m_strSavedDatabaseFile; }
		}

		private static string m_strSaveForceSync =
			@"Do not ask whether to synchronize or overwrite; force synchronization";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Do not ask whether to synchronize or overwrite; force synchronization'.
		/// </summary>
		public static string SaveForceSync
		{
			get { return m_strSaveForceSync; }
		}

		private static string m_strSavingDatabase =
			@"Saving database...";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Saving database...'.
		/// </summary>
		public static string SavingDatabase
		{
			get { return m_strSavingDatabase; }
		}

		private static string m_strSavingDatabaseFile =
			@"Saving database file";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Saving database file'.
		/// </summary>
		public static string SavingDatabaseFile
		{
			get { return m_strSavingDatabaseFile; }
		}

		private static string m_strSavingPost =
			@"after saving";
		/// <summary>
		/// Look up a localized string similar to
		/// 'after saving'.
		/// </summary>
		public static string SavingPost
		{
			get { return m_strSavingPost; }
		}

		private static string m_strSavingPre =
			@"before saving";
		/// <summary>
		/// Look up a localized string similar to
		/// 'before saving'.
		/// </summary>
		public static string SavingPre
		{
			get { return m_strSavingPre; }
		}

		private static string m_strScheme =
			@"Scheme";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Scheme'.
		/// </summary>
		public static string Scheme
		{
			get { return m_strScheme; }
		}

		private static string m_strSearch =
			@"Search...";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Search...'.
		/// </summary>
		public static string Search
		{
			get { return m_strSearch; }
		}

		private static string m_strSearchDesc =
			@"Search the password database for entries.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Search the password database for entries.'.
		/// </summary>
		public static string SearchDesc
		{
			get { return m_strSearchDesc; }
		}

		private static string m_strSearchEntriesFound =
			@"{PARAM} entries found";
		/// <summary>
		/// Look up a localized string similar to
		/// '{PARAM} entries found'.
		/// </summary>
		public static string SearchEntriesFound
		{
			get { return m_strSearchEntriesFound; }
		}

		private static string m_strSearchEntriesFound1 =
			@"1 entry found";
		/// <summary>
		/// Look up a localized string similar to
		/// '1 entry found'.
		/// </summary>
		public static string SearchEntriesFound1
		{
			get { return m_strSearchEntriesFound1; }
		}

		private static string m_strSearchGroupName =
			@"Search Results";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Search Results'.
		/// </summary>
		public static string SearchGroupName
		{
			get { return m_strSearchGroupName; }
		}

		private static string m_strSearchingOp =
			@"Searching";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Searching'.
		/// </summary>
		public static string SearchingOp
		{
			get { return m_strSearchingOp; }
		}

		private static string m_strSearchKeyFiles =
			@"Automatically search key files";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Automatically search key files'.
		/// </summary>
		public static string SearchKeyFiles
		{
			get { return m_strSearchKeyFiles; }
		}

		private static string m_strSearchKeyFilesAlsoOnRemovable =
			@"Automatically search key files also on removable media";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Automatically search key files also on removable media'.
		/// </summary>
		public static string SearchKeyFilesAlsoOnRemovable
		{
			get { return m_strSearchKeyFilesAlsoOnRemovable; }
		}

		private static string m_strSearchQuickPrompt =
			@"Type to search the database";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Type to search the database'.
		/// </summary>
		public static string SearchQuickPrompt
		{
			get { return m_strSearchQuickPrompt; }
		}

		private static string m_strSearchResultsInSeparator =
			@"in";
		/// <summary>
		/// Look up a localized string similar to
		/// 'in'.
		/// </summary>
		public static string SearchResultsInSeparator
		{
			get { return m_strSearchResultsInSeparator; }
		}

		private static string m_strSearchTitle =
			@"Find";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Find'.
		/// </summary>
		public static string SearchTitle
		{
			get { return m_strSearchTitle; }
		}

		private static string m_strSecDeskFileDialogHint =
			@"Note: KeePass shows this simple file browser dialog, because standard Windows file dialogs cannot be shown on the secure desktop for security reasons.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Note: KeePass shows this simple file browser dialog, because standard Windows file dialogs cannot be shown on the secure desktop for security reasons.'.
		/// </summary>
		public static string SecDeskFileDialogHint
		{
			get { return m_strSecDeskFileDialogHint; }
		}

		private static string m_strSecDeskOtherSwitched =
			@"An application has switched from the secure desktop to a different desktop.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'An application has switched from the secure desktop to a different desktop.'.
		/// </summary>
		public static string SecDeskOtherSwitched
		{
			get { return m_strSecDeskOtherSwitched; }
		}

		private static string m_strSecDeskPlaySound =
			@"Play UAC sound when switching to secure desktop";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Play UAC sound when switching to secure desktop'.
		/// </summary>
		public static string SecDeskPlaySound
		{
			get { return m_strSecDeskPlaySound; }
		}

		private static string m_strSecDeskSwitchBack =
			@"Click [OK] to switch back to the secure desktop.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Click [OK] to switch back to the secure desktop.'.
		/// </summary>
		public static string SecDeskSwitchBack
		{
			get { return m_strSecDeskSwitchBack; }
		}

		private static string m_strSelectAll =
			@"Select All";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Select All'.
		/// </summary>
		public static string SelectAll
		{
			get { return m_strSelectAll; }
		}

		private static string m_strSelectColor =
			@"Select Color";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Select Color'.
		/// </summary>
		public static string SelectColor
		{
			get { return m_strSelectColor; }
		}

		private static string m_strSelectDifferentGroup =
			@"Please select a different group.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Please select a different group.'.
		/// </summary>
		public static string SelectDifferentGroup
		{
			get { return m_strSelectDifferentGroup; }
		}

		private static string m_strSelectedColumn =
			@"Selected column";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Selected column'.
		/// </summary>
		public static string SelectedColumn
		{
			get { return m_strSelectedColumn; }
		}

		private static string m_strSelectedLower =
			@"selected";
		/// <summary>
		/// Look up a localized string similar to
		/// 'selected'.
		/// </summary>
		public static string SelectedLower
		{
			get { return m_strSelectedLower; }
		}

		private static string m_strSelectFile =
			@"Select a file.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Select a file.'.
		/// </summary>
		public static string SelectFile
		{
			get { return m_strSelectFile; }
		}

		private static string m_strSelectIcon =
			@"Select an icon";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Select an icon'.
		/// </summary>
		public static string SelectIcon
		{
			get { return m_strSelectIcon; }
		}

		private static string m_strSelectLanguage =
			@"Select Language";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Select Language'.
		/// </summary>
		public static string SelectLanguage
		{
			get { return m_strSelectLanguage; }
		}

		private static string m_strSelectLanguageDesc =
			@"Here you can select a different user interface language.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Here you can select a different user interface language.'.
		/// </summary>
		public static string SelectLanguageDesc
		{
			get { return m_strSelectLanguageDesc; }
		}

		private static string m_strSelfTestFailed =
			@"One or more of the KeePass self-tests failed.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'One or more of the KeePass self-tests failed.'.
		/// </summary>
		public static string SelfTestFailed
		{
			get { return m_strSelfTestFailed; }
		}

		private static string m_strSendingNoun =
			@"Sending";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Sending'.
		/// </summary>
		public static string SendingNoun
		{
			get { return m_strSendingNoun; }
		}

		private static string m_strSeparator =
			@"Separator";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Separator'.
		/// </summary>
		public static string Separator
		{
			get { return m_strSeparator; }
		}

		private static string m_strSequence =
			@"Sequence";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Sequence'.
		/// </summary>
		public static string Sequence
		{
			get { return m_strSequence; }
		}

		private static string m_strShowAdvAutoTypeCommands =
			@"Show additional auto-type menu commands";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Show additional auto-type menu commands'.
		/// </summary>
		public static string ShowAdvAutoTypeCommands
		{
			get { return m_strShowAdvAutoTypeCommands; }
		}

		private static string m_strShowDerefData =
			@"Show dereferenced data";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Show dereferenced data'.
		/// </summary>
		public static string ShowDerefData
		{
			get { return m_strShowDerefData; }
		}

		private static string m_strShowDerefDataAndRefs =
			@"When showing dereferenced data, additionally show references";
		/// <summary>
		/// Look up a localized string similar to
		/// 'When showing dereferenced data, additionally show references'.
		/// </summary>
		public static string ShowDerefDataAndRefs
		{
			get { return m_strShowDerefDataAndRefs; }
		}

		private static string m_strShowDerefDataAsync =
			@"Show dereferenced data asynchronously";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Show dereferenced data asynchronously'.
		/// </summary>
		public static string ShowDerefDataAsync
		{
			get { return m_strShowDerefDataAsync; }
		}

		private static string m_strShowEntries =
			@"Show Entries";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Show Entries'.
		/// </summary>
		public static string ShowEntries
		{
			get { return m_strShowEntries; }
		}

		private static string m_strShowEntriesByTag =
			@"Show entries by tag";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Show entries by tag'.
		/// </summary>
		public static string ShowEntriesByTag
		{
			get { return m_strShowEntriesByTag; }
		}

		private static string m_strShowFullPathInTitleBar =
			@"Show full path in title bar (instead of file name only)";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Show full path in title bar (instead of file name only)'.
		/// </summary>
		public static string ShowFullPathInTitleBar
		{
			get { return m_strShowFullPathInTitleBar; }
		}

		private static string m_strShowIn =
			@"Show in";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Show in'.
		/// </summary>
		public static string ShowIn
		{
			get { return m_strShowIn; }
		}

		private static string m_strShowMessageBox =
			@"Show message box";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Show message box'.
		/// </summary>
		public static string ShowMessageBox
		{
			get { return m_strShowMessageBox; }
		}

		private static string m_strShowTrayOnlyIfTrayed =
			@"Show tray icon only if main window has been sent to tray";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Show tray icon only if main window has been sent to tray'.
		/// </summary>
		public static string ShowTrayOnlyIfTrayed
		{
			get { return m_strShowTrayOnlyIfTrayed; }
		}

		private static string m_strSize =
			@"Size";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Size'.
		/// </summary>
		public static string Size
		{
			get { return m_strSize; }
		}

		private static string m_strSlow =
			@"slow";
		/// <summary>
		/// Look up a localized string similar to
		/// 'slow'.
		/// </summary>
		public static string Slow
		{
			get { return m_strSlow; }
		}

		private static string m_strSoonToExpireEntries =
			@"Expired Entries and Entries That Will Expire Soon";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Expired Entries and Entries That Will Expire Soon'.
		/// </summary>
		public static string SoonToExpireEntries
		{
			get { return m_strSoonToExpireEntries; }
		}

		private static string m_strSpecialKeys =
			@"Special Keys";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Special Keys'.
		/// </summary>
		public static string SpecialKeys
		{
			get { return m_strSpecialKeys; }
		}

		private static string m_strSslCertsAcceptInvalid =
			@"Accept invalid SSL certificates (self-signed, expired, ...)";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Accept invalid SSL certificates (self-signed, expired, ...)'.
		/// </summary>
		public static string SslCertsAcceptInvalid
		{
			get { return m_strSslCertsAcceptInvalid; }
		}

		private static string m_strStandardExpireSelect =
			@"Select one of the standard expire times";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Select one of the standard expire times'.
		/// </summary>
		public static string StandardExpireSelect
		{
			get { return m_strStandardExpireSelect; }
		}

		private static string m_strStandardFields =
			@"Standard Fields";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Standard Fields'.
		/// </summary>
		public static string StandardFields
		{
			get { return m_strStandardFields; }
		}

		private static string m_strStartAndExit =
			@"Start and Exit";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Start and Exit'.
		/// </summary>
		public static string StartAndExit
		{
			get { return m_strStartAndExit; }
		}

		private static string m_strStartMinimizedAndLocked =
			@"Start minimized and locked";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Start minimized and locked'.
		/// </summary>
		public static string StartMinimizedAndLocked
		{
			get { return m_strStartMinimizedAndLocked; }
		}

		private static string m_strStartsWith =
			@"Starts with";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Starts with'.
		/// </summary>
		public static string StartsWith
		{
			get { return m_strStartsWith; }
		}

		private static string m_strStatus =
			@"Status";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Status'.
		/// </summary>
		public static string Status
		{
			get { return m_strStatus; }
		}

		private static string m_strStrikeout =
			@"Strikeout";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Strikeout'.
		/// </summary>
		public static string Strikeout
		{
			get { return m_strStrikeout; }
		}

		private static string m_strString =
			@"String";
		/// <summary>
		/// Look up a localized string similar to
		/// 'String'.
		/// </summary>
		public static string String
		{
			get { return m_strString; }
		}

		private static string m_strSuccess =
			@"Success.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Success.'.
		/// </summary>
		public static string Success
		{
			get { return m_strSuccess; }
		}

		private static string m_strSyncFailed =
			@"Synchronization failed.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Synchronization failed.'.
		/// </summary>
		public static string SyncFailed
		{
			get { return m_strSyncFailed; }
		}

		private static string m_strSynchronize =
			@"Synchronize";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Synchronize'.
		/// </summary>
		public static string Synchronize
		{
			get { return m_strSynchronize; }
		}

		private static string m_strSynchronizeStc =
			@"Synchronize active database with a file/URL";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Synchronize active database with a file/URL'.
		/// </summary>
		public static string SynchronizeStc
		{
			get { return m_strSynchronizeStc; }
		}

		private static string m_strSynchronizing =
			@"Synchronizing...";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Synchronizing...'.
		/// </summary>
		public static string Synchronizing
		{
			get { return m_strSynchronizing; }
		}

		private static string m_strSynchronizingHint =
			@"Make sure that the two databases use the same composite master key. This is required for synchronization.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Make sure that the two databases use the same composite master key. This is required for synchronization.'.
		/// </summary>
		public static string SynchronizingHint
		{
			get { return m_strSynchronizingHint; }
		}

		private static string m_strSyncSuccess =
			@"Synchronization completed successfully.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Synchronization completed successfully.'.
		/// </summary>
		public static string SyncSuccess
		{
			get { return m_strSyncSuccess; }
		}

		private static string m_strSystem =
			@"System";
		/// <summary>
		/// Look up a localized string similar to
		/// 'System'.
		/// </summary>
		public static string System
		{
			get { return m_strSystem; }
		}

		private static string m_strSystemCodePage =
			@"System Code Page";
		/// <summary>
		/// Look up a localized string similar to
		/// 'System Code Page'.
		/// </summary>
		public static string SystemCodePage
		{
			get { return m_strSystemCodePage; }
		}

		private static string m_strTag =
			@"Tag";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Tag'.
		/// </summary>
		public static string Tag
		{
			get { return m_strTag; }
		}

		private static string m_strTagAddNew =
			@"Add a new tag.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Add a new tag.'.
		/// </summary>
		public static string TagAddNew
		{
			get { return m_strTagAddNew; }
		}

		private static string m_strTagNew =
			@"New Tag";
		/// <summary>
		/// Look up a localized string similar to
		/// 'New Tag'.
		/// </summary>
		public static string TagNew
		{
			get { return m_strTagNew; }
		}

		private static string m_strTags =
			@"Tags";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Tags'.
		/// </summary>
		public static string Tags
		{
			get { return m_strTags; }
		}

		private static string m_strTagsNotFound =
			@"No tags found";
		/// <summary>
		/// Look up a localized string similar to
		/// 'No tags found'.
		/// </summary>
		public static string TagsNotFound
		{
			get { return m_strTagsNotFound; }
		}

		private static string m_strTanExpiresOnUse =
			@"Mark TAN entries as expired when using them";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Mark TAN entries as expired when using them'.
		/// </summary>
		public static string TanExpiresOnUse
		{
			get { return m_strTanExpiresOnUse; }
		}

		private static string m_strTanWizard =
			@"TAN Wizard";
		/// <summary>
		/// Look up a localized string similar to
		/// 'TAN Wizard'.
		/// </summary>
		public static string TanWizard
		{
			get { return m_strTanWizard; }
		}

		private static string m_strTanWizardDesc =
			@"With this TAN wizard you can easily add TAN entries.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'With this TAN wizard you can easily add TAN entries.'.
		/// </summary>
		public static string TanWizardDesc
		{
			get { return m_strTanWizardDesc; }
		}

		private static string m_strTargetWindow =
			@"Target Window";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Target Window'.
		/// </summary>
		public static string TargetWindow
		{
			get { return m_strTargetWindow; }
		}

		private static string m_strTemplatesNotFound =
			@"No templates found";
		/// <summary>
		/// Look up a localized string similar to
		/// 'No templates found'.
		/// </summary>
		public static string TemplatesNotFound
		{
			get { return m_strTemplatesNotFound; }
		}

		private static string m_strTestSuccess =
			@"Test succeeded!";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Test succeeded!'.
		/// </summary>
		public static string TestSuccess
		{
			get { return m_strTestSuccess; }
		}

		private static string m_strText =
			@"Text";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Text'.
		/// </summary>
		public static string Text
		{
			get { return m_strText; }
		}

		private static string m_strTextColor =
			@"Text Color";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Text Color'.
		/// </summary>
		public static string TextColor
		{
			get { return m_strTextColor; }
		}

		private static string m_strTextViewer =
			@"Text Viewer";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Text Viewer'.
		/// </summary>
		public static string TextViewer
		{
			get { return m_strTextViewer; }
		}

		private static string m_strTimeSpan =
			@"Time span";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Time span'.
		/// </summary>
		public static string TimeSpan
		{
			get { return m_strTimeSpan; }
		}

		private static string m_strTitle =
			@"Title";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Title'.
		/// </summary>
		public static string Title
		{
			get { return m_strTitle; }
		}

		private static string m_strToggle =
			@"Toggle";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Toggle'.
		/// </summary>
		public static string Toggle
		{
			get { return m_strToggle; }
		}

		private static string m_strTogglePasswordAsterisks =
			@"Show/hide password using asterisks";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Show/hide password using asterisks'.
		/// </summary>
		public static string TogglePasswordAsterisks
		{
			get { return m_strTogglePasswordAsterisks; }
		}

		private static string m_strToolBarNew =
			@"New...";
		/// <summary>
		/// Look up a localized string similar to
		/// 'New...'.
		/// </summary>
		public static string ToolBarNew
		{
			get { return m_strToolBarNew; }
		}

		private static string m_strToolBarOpen =
			@"Open...";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Open...'.
		/// </summary>
		public static string ToolBarOpen
		{
			get { return m_strToolBarOpen; }
		}

		private static string m_strToolBarSaveAll =
			@"Save All";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Save All'.
		/// </summary>
		public static string ToolBarSaveAll
		{
			get { return m_strToolBarSaveAll; }
		}

		private static string m_strTooManyFilesError =
			@"Too many files have been selected. Select smaller groups and repeat the current procedure a few times.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Too many files have been selected. Select smaller groups and repeat the current procedure a few times.'.
		/// </summary>
		public static string TooManyFilesError
		{
			get { return m_strTooManyFilesError; }
		}

		private static string m_strTransformTime =
			@"The key transformation took {PARAM} seconds.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The key transformation took {PARAM} seconds.'.
		/// </summary>
		public static string TransformTime
		{
			get { return m_strTransformTime; }
		}

		private static string m_strTrigger =
			@"Trigger";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Trigger'.
		/// </summary>
		public static string Trigger
		{
			get { return m_strTrigger; }
		}

		private static string m_strTriggerActionTypeUnknown =
			@"The trigger action type is unknown.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The trigger action type is unknown.'.
		/// </summary>
		public static string TriggerActionTypeUnknown
		{
			get { return m_strTriggerActionTypeUnknown; }
		}

		private static string m_strTriggerAdd =
			@"Add Trigger";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Add Trigger'.
		/// </summary>
		public static string TriggerAdd
		{
			get { return m_strTriggerAdd; }
		}

		private static string m_strTriggerAddDesc =
			@"Create a new workflow automation.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Create a new workflow automation.'.
		/// </summary>
		public static string TriggerAddDesc
		{
			get { return m_strTriggerAddDesc; }
		}

		private static string m_strTriggerConditionTypeUnknown =
			@"The trigger condition type is unknown.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The trigger condition type is unknown.'.
		/// </summary>
		public static string TriggerConditionTypeUnknown
		{
			get { return m_strTriggerConditionTypeUnknown; }
		}

		private static string m_strTriggerEdit =
			@"Edit Trigger";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Edit Trigger'.
		/// </summary>
		public static string TriggerEdit
		{
			get { return m_strTriggerEdit; }
		}

		private static string m_strTriggerEditDesc =
			@"Modify an existing workflow automation.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Modify an existing workflow automation.'.
		/// </summary>
		public static string TriggerEditDesc
		{
			get { return m_strTriggerEditDesc; }
		}

		private static string m_strTriggerEventTypeUnknown =
			@"The trigger event type is unknown.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The trigger event type is unknown.'.
		/// </summary>
		public static string TriggerEventTypeUnknown
		{
			get { return m_strTriggerEventTypeUnknown; }
		}

		private static string m_strTriggerExecutionFailed =
			@"Trigger execution failed";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Trigger execution failed'.
		/// </summary>
		public static string TriggerExecutionFailed
		{
			get { return m_strTriggerExecutionFailed; }
		}

		private static string m_strTriggering =
			@"Triggering";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Triggering'.
		/// </summary>
		public static string Triggering
		{
			get { return m_strTriggering; }
		}

		private static string m_strTriggerName =
			@"Trigger name";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Trigger name'.
		/// </summary>
		public static string TriggerName
		{
			get { return m_strTriggerName; }
		}

		private static string m_strTriggers =
			@"Triggers";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Triggers'.
		/// </summary>
		public static string Triggers
		{
			get { return m_strTriggers; }
		}

		private static string m_strTriggersDesc =
			@"Automate workflows using the trigger system.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Automate workflows using the trigger system.'.
		/// </summary>
		public static string TriggersDesc
		{
			get { return m_strTriggersDesc; }
		}

		private static string m_strTriggersEdit =
			@"Edit Triggers";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Edit Triggers'.
		/// </summary>
		public static string TriggersEdit
		{
			get { return m_strTriggersEdit; }
		}

		private static string m_strTriggerStateChange =
			@"Change trigger on/off state";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Change trigger on/off state'.
		/// </summary>
		public static string TriggerStateChange
		{
			get { return m_strTriggerStateChange; }
		}

		private static string m_strTypeUnknownHint =
			@"A newer KeePass version or a plugin might be required for this type.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'A newer KeePass version or a plugin might be required for this type.'.
		/// </summary>
		public static string TypeUnknownHint
		{
			get { return m_strTypeUnknownHint; }
		}

		private static string m_strUnderline =
			@"Underline";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Underline'.
		/// </summary>
		public static string Underline
		{
			get { return m_strUnderline; }
		}

		private static string m_strUndo =
			@"Undo";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Undo'.
		/// </summary>
		public static string Undo
		{
			get { return m_strUndo; }
		}

		private static string m_strUnhidePasswords =
			@"Unhide Passwords";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Unhide Passwords'.
		/// </summary>
		public static string UnhidePasswords
		{
			get { return m_strUnhidePasswords; }
		}

		private static string m_strUnhidePasswordsDesc =
			@"Allow displaying passwords as plain-text.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Allow displaying passwords as plain-text.'.
		/// </summary>
		public static string UnhidePasswordsDesc
		{
			get { return m_strUnhidePasswordsDesc; }
		}

		private static string m_strUnhideSourceCharactersToo =
			@"Unhide button also unhides source characters";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Unhide button also unhides source characters'.
		/// </summary>
		public static string UnhideSourceCharactersToo
		{
			get { return m_strUnhideSourceCharactersToo; }
		}

		private static string m_strUnknown =
			@"Unknown";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Unknown'.
		/// </summary>
		public static string Unknown
		{
			get { return m_strUnknown; }
		}

		private static string m_strUnknownError =
			@"An unknown error occurred.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'An unknown error occurred.'.
		/// </summary>
		public static string UnknownError
		{
			get { return m_strUnknownError; }
		}

		private static string m_strUnsupportedByMono =
			@"unsupported by Mono";
		/// <summary>
		/// Look up a localized string similar to
		/// 'unsupported by Mono'.
		/// </summary>
		public static string UnsupportedByMono
		{
			get { return m_strUnsupportedByMono; }
		}

		private static string m_strUpdateCheck =
			@"Update Check";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Update Check'.
		/// </summary>
		public static string UpdateCheck
		{
			get { return m_strUpdateCheck; }
		}

		private static string m_strUpdateCheckEnableQ =
			@"Enable automatic update check?";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Enable automatic update check?'.
		/// </summary>
		public static string UpdateCheckEnableQ
		{
			get { return m_strUpdateCheckEnableQ; }
		}

		private static string m_strUpdateCheckFailedNoDl =
			@"Update check failed. Version information file cannot be downloaded.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Update check failed. Version information file cannot be downloaded.'.
		/// </summary>
		public static string UpdateCheckFailedNoDl
		{
			get { return m_strUpdateCheckFailedNoDl; }
		}

		private static string m_strUpdateCheckInfo =
			@"KeePass can automatically check for updates on each program start.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'KeePass can automatically check for updates on each program start.'.
		/// </summary>
		public static string UpdateCheckInfo
		{
			get { return m_strUpdateCheckInfo; }
		}

		private static string m_strUpdateCheckInfoPriv =
			@"No personal information is sent to the KeePass web server. KeePass just downloads a small version information file and compares the available version with the installed version.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'No personal information is sent to the KeePass web server. KeePass just downloads a small version information file and compares the available version with the installed version.'.
		/// </summary>
		public static string UpdateCheckInfoPriv
		{
			get { return m_strUpdateCheckInfoPriv; }
		}

		private static string m_strUpdateCheckInfoRes =
			@"Automatic update checks are performed unintrusively in the background. A notification is only displayed when an update is available. Updates are not downloaded or installed automatically.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Automatic update checks are performed unintrusively in the background. A notification is only displayed when an update is available. Updates are not downloaded or installed automatically.'.
		/// </summary>
		public static string UpdateCheckInfoRes
		{
			get { return m_strUpdateCheckInfoRes; }
		}

		private static string m_strUpdateCheckResults =
			@"The results of the update check.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The results of the update check.'.
		/// </summary>
		public static string UpdateCheckResults
		{
			get { return m_strUpdateCheckResults; }
		}

		private static string m_strUpdatedUIState =
			@"User interface state updated";
		/// <summary>
		/// Look up a localized string similar to
		/// 'User interface state updated'.
		/// </summary>
		public static string UpdatedUIState
		{
			get { return m_strUpdatedUIState; }
		}

		private static string m_strUpToDate =
			@"Up to date";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Up to date'.
		/// </summary>
		public static string UpToDate
		{
			get { return m_strUpToDate; }
		}

		private static string m_strUrl =
			@"URL";
		/// <summary>
		/// Look up a localized string similar to
		/// 'URL'.
		/// </summary>
		public static string Url
		{
			get { return m_strUrl; }
		}

		private static string m_strUrlOpenDesc =
			@"Open a database stored on a server.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Open a database stored on a server.'.
		/// </summary>
		public static string UrlOpenDesc
		{
			get { return m_strUrlOpenDesc; }
		}

		private static string m_strUrlOpenTitle =
			@"Open From URL";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Open From URL'.
		/// </summary>
		public static string UrlOpenTitle
		{
			get { return m_strUrlOpenTitle; }
		}

		private static string m_strUrlOverride =
			@"URL Override";
		/// <summary>
		/// Look up a localized string similar to
		/// 'URL Override'.
		/// </summary>
		public static string UrlOverride
		{
			get { return m_strUrlOverride; }
		}

		private static string m_strUrlOverrides =
			@"URL Overrides";
		/// <summary>
		/// Look up a localized string similar to
		/// 'URL Overrides'.
		/// </summary>
		public static string UrlOverrides
		{
			get { return m_strUrlOverrides; }
		}

		private static string m_strUrlSaveDesc =
			@"Save current database on a server.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Save current database on a server.'.
		/// </summary>
		public static string UrlSaveDesc
		{
			get { return m_strUrlSaveDesc; }
		}

		private static string m_strUrlSaveTitle =
			@"Save To URL";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Save To URL'.
		/// </summary>
		public static string UrlSaveTitle
		{
			get { return m_strUrlSaveTitle; }
		}

		private static string m_strUseFileLocks =
			@"Use database lock files";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Use database lock files'.
		/// </summary>
		public static string UseFileLocks
		{
			get { return m_strUseFileLocks; }
		}

		private static string m_strUseTransactedDatabaseWrites =
			@"Use file transactions for writing databases";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Use file transactions for writing databases'.
		/// </summary>
		public static string UseTransactedDatabaseWrites
		{
			get { return m_strUseTransactedDatabaseWrites; }
		}

		private static string m_strUserAccount =
			@"User account";
		/// <summary>
		/// Look up a localized string similar to
		/// 'User account'.
		/// </summary>
		public static string UserAccount
		{
			get { return m_strUserAccount; }
		}

		private static string m_strUserName =
			@"User Name";
		/// <summary>
		/// Look up a localized string similar to
		/// 'User Name'.
		/// </summary>
		public static string UserName
		{
			get { return m_strUserName; }
		}

		private static string m_strUserNamePrompt =
			@"Enter the user name:";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Enter the user name:'.
		/// </summary>
		public static string UserNamePrompt
		{
			get { return m_strUserNamePrompt; }
		}

		private static string m_strUuid =
			@"UUID";
		/// <summary>
		/// Look up a localized string similar to
		/// 'UUID'.
		/// </summary>
		public static string Uuid
		{
			get { return m_strUuid; }
		}

		private static string m_strUuidDupInDb =
			@"The database contains duplicate UUIDs.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The database contains duplicate UUIDs.'.
		/// </summary>
		public static string UuidDupInDb
		{
			get { return m_strUuidDupInDb; }
		}

		private static string m_strUuidFix =
			@"When closing this dialog, KeePass will fix the problem (by generating new UUIDs for duplicates) and continue.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'When closing this dialog, KeePass will fix the problem (by generating new UUIDs for duplicates) and continue.'.
		/// </summary>
		public static string UuidFix
		{
			get { return m_strUuidFix; }
		}

		private static string m_strValidationFailed =
			@"Validation failed";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Validation failed'.
		/// </summary>
		public static string ValidationFailed
		{
			get { return m_strValidationFailed; }
		}

		private static string m_strValue =
			@"Value";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Value'.
		/// </summary>
		public static string Value
		{
			get { return m_strValue; }
		}

		private static string m_strVerb =
			@"Verb";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Verb'.
		/// </summary>
		public static string Verb
		{
			get { return m_strVerb; }
		}

		private static string m_strVerifyWrittenFileAfterSave =
			@"Verify written file after saving a database";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Verify written file after saving a database'.
		/// </summary>
		public static string VerifyWrittenFileAfterSave
		{
			get { return m_strVerifyWrittenFileAfterSave; }
		}

		private static string m_strVersion =
			@"Version";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Version'.
		/// </summary>
		public static string Version
		{
			get { return m_strVersion; }
		}

		private static string m_strView =
			@"View";
		/// <summary>
		/// Look up a localized string similar to
		/// 'View'.
		/// </summary>
		public static string View
		{
			get { return m_strView; }
		}

		private static string m_strViewCmd =
			@"&View";
		/// <summary>
		/// Look up a localized string similar to
		/// '&amp;View'.
		/// </summary>
		public static string ViewCmd
		{
			get { return m_strViewCmd; }
		}

		private static string m_strViewEntry =
			@"View Entry";
		/// <summary>
		/// Look up a localized string similar to
		/// 'View Entry'.
		/// </summary>
		public static string ViewEntry
		{
			get { return m_strViewEntry; }
		}

		private static string m_strViewEntryDesc =
			@"You're viewing an entry.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'You&#39;re viewing an entry.'.
		/// </summary>
		public static string ViewEntryDesc
		{
			get { return m_strViewEntryDesc; }
		}

		private static string m_strWait =
			@"Wait";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Wait'.
		/// </summary>
		public static string Wait
		{
			get { return m_strWait; }
		}

		private static string m_strWaitForExit =
			@"Wait for exit";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Wait for exit'.
		/// </summary>
		public static string WaitForExit
		{
			get { return m_strWaitForExit; }
		}

		private static string m_strWarning =
			@"Warning";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Warning'.
		/// </summary>
		public static string Warning
		{
			get { return m_strWarning; }
		}

		private static string m_strWarnings =
			@"Warnings";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Warnings'.
		/// </summary>
		public static string Warnings
		{
			get { return m_strWarnings; }
		}

		private static string m_strWebBrowser =
			@"Web Browser";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Web Browser'.
		/// </summary>
		public static string WebBrowser
		{
			get { return m_strWebBrowser; }
		}

		private static string m_strWebSiteLogin =
			@"Web Site Login";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Web Site Login'.
		/// </summary>
		public static string WebSiteLogin
		{
			get { return m_strWebSiteLogin; }
		}

		private static string m_strWebSites =
			@"Web Sites";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Web Sites'.
		/// </summary>
		public static string WebSites
		{
			get { return m_strWebSites; }
		}

		private static string m_strWindowsFavorites =
			@"Windows Favorites";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Windows Favorites'.
		/// </summary>
		public static string WindowsFavorites
		{
			get { return m_strWindowsFavorites; }
		}

		private static string m_strWindowsOS =
			@"Windows";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Windows'.
		/// </summary>
		public static string WindowsOS
		{
			get { return m_strWindowsOS; }
		}

		private static string m_strWindowStyle =
			@"Window style";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Window style'.
		/// </summary>
		public static string WindowStyle
		{
			get { return m_strWindowStyle; }
		}

		private static string m_strWithoutContext =
			@"Without Context";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Without Context'.
		/// </summary>
		public static string WithoutContext
		{
			get { return m_strWithoutContext; }
		}

		private static string m_strWorkspaceLocked =
			@"Workspace Locked";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Workspace Locked'.
		/// </summary>
		public static string WorkspaceLocked
		{
			get { return m_strWorkspaceLocked; }
		}

		private static string m_strXmlModInvalid =
			@"The modified XML data is invalid.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'The modified XML data is invalid.'.
		/// </summary>
		public static string XmlModInvalid
		{
			get { return m_strXmlModInvalid; }
		}

		private static string m_strXmlReplace =
			@"XML Replace";
		/// <summary>
		/// Look up a localized string similar to
		/// 'XML Replace'.
		/// </summary>
		public static string XmlReplace
		{
			get { return m_strXmlReplace; }
		}

		private static string m_strXmlReplaceDesc =
			@"Replace data in the XML representation of the database.";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Replace data in the XML representation of the database.'.
		/// </summary>
		public static string XmlReplaceDesc
		{
			get { return m_strXmlReplaceDesc; }
		}

		private static string m_strXslExporter =
			@"Transform using XSL Stylesheet";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Transform using XSL Stylesheet'.
		/// </summary>
		public static string XslExporter
		{
			get { return m_strXslExporter; }
		}

		private static string m_strXslFileType =
			@"XSL Stylesheets";
		/// <summary>
		/// Look up a localized string similar to
		/// 'XSL Stylesheets'.
		/// </summary>
		public static string XslFileType
		{
			get { return m_strXslFileType; }
		}

		private static string m_strXslSelectFile =
			@"Select XSL Transformation File";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Select XSL Transformation File'.
		/// </summary>
		public static string XslSelectFile
		{
			get { return m_strXslSelectFile; }
		}

		private static string m_strXslStylesheetsKdbx =
			@"XSL Stylesheets for KDBX XML";
		/// <summary>
		/// Look up a localized string similar to
		/// 'XSL Stylesheets for KDBX XML'.
		/// </summary>
		public static string XslStylesheetsKdbx
		{
			get { return m_strXslStylesheetsKdbx; }
		}

		private static string m_strYes =
			@"Yes";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Yes'.
		/// </summary>
		public static string Yes
		{
			get { return m_strYes; }
		}

		private static string m_strYesCmd =
			@"&Yes";
		/// <summary>
		/// Look up a localized string similar to
		/// '&amp;Yes'.
		/// </summary>
		public static string YesCmd
		{
			get { return m_strYesCmd; }
		}

		private static string m_strZoom =
			@"Zoom";
		/// <summary>
		/// Look up a localized string similar to
		/// 'Zoom'.
		/// </summary>
		public static string Zoom
		{
			get { return m_strZoom; }
		}
	}
}
